[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    jcenter()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"    testCompile group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.2\u0027"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    compile group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.2\u0027"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.2\u0027"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.2\u0027"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"sourceSets {"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"    main {"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        java {"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            srcDirs \u003d [\"src\"]"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"    test {"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        java {"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"            srcDirs \u003d [\"src/test\"]"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"}"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"    mainClassName \u003d \"main.Launcher\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"    archiveBaseName \u003d \"stuff\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"    enableAssertions \u003d true"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"joshualiangxy":38,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"Stuff is a Graphical User Interface (GUI) desktop app for managing tasks, optimized for fast typists to use. "},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"If you can type fast, Stuff can manage your tasks faster than traditional GUI apps."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"**Notes about the command format:**"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"  e.g. in `todo NAME_OF_TASK`, `NAME_OF_TASK` is a parameter which can be used as `todo homework`."},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"  e.g `NAME [#TAG]` can be used as `John Doe #friend` or as `John Doe`."},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"  e.g. `[#TAG]…` can be used as ` ` (i.e. 0 times), `#friend`, `#friend #family` etc."},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"### Adding a todo: `todo`"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"Adds a todo to your list of tasks."},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"Format: `todo NAME_OF_TASK [#TAG]...`"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"**Tip:** A todo can have 0 or more tags for easier searching."},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"Examples:"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"* `todo CS2103T ip`"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"* `todo team project #CS #2103T`"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"### Adding an event: `event`"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"Adds an event to your list of tasks."},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"Format: `event NAME_OF_EVENT /at TIME_OF_EVENT [#TAG]...`"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"* Adds an event which will occur at the specified `TIME_OF_EVENT`."},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"* The time of event must be in the format YYYY-MM-DD HHMM."},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"**Tip:** A event can have 0 or more tags for easier searching."},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"Examples:"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"* `event CS2103T tutorial /at 2020-9-16 1700`"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"* `event CS2101 /at 2020-9-17 1600 #CS #CS2101`"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"### Adding an deadline: `deadline`"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"Adds a deadline to your list of tasks."},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"Format: `deadline NAME_OF_DEADLINE /by TIME_OF_DEADLINE [#TAG]...`"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"* Adds a deadline which should be done before the specified `TIME_OF_DEADLINE`."},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"* The time of deadline must be in the format YYYY-MM-DD HHMM."},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"**Tip:** A deadline can have 0 or more tags for easier searching."},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"Examples:"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"* `deadline CS2100 homework /by 2020-9-20 2359`"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"* `deadline ES2660 presentation /by 2020-9-17 2359 #help #nomore`"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"### Listing all tasks: `list`"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"Shows a list of all tasks in the task list."},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"Format: `list`"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"### Marking a task as done: `done`"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"Marks a task in your list of tasks as done."},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"Format: `done INDEX`"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"* Marks the task at the specified `INDEX` as done. The index refers to"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"the index number shown in the task list."},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"* The index **must be a positive integer** 1, 2, 3, ..."},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"Examples:"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"* `done 4` Marks the 4th task in the task list as done."},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"* `done 81` Marks the 81st task in the task list as done."},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"### Deleting a task: `delete`"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"Deletes a task from your list of tasks."},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"Format: `delete INDEX`"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"* Deletes the person at the specified `INDEX`. The index refers to the"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"index number shown in the task list."},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"* The index **must be a positive integer** 1, 2, 3, ..."},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"Examples:"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"* `delete 4` Deletes the 4th task in the task list."},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"* `delete 81` Deletes the 81st task in the task list."},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"### Finding a task: `find`"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"Find tasks whose names or tags containing the given keywords."},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"Format `find [KEYWORDS]...`"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"* The search is case-sensitive. e.g. `hans` will not match `Hans`"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"* Only names and tags are searched."},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"* Parts of the words will be matched. e.g. `Han` will match `Hans`"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"* Only tasks matching all keywords will be returned e.g. `Hans Bo` will not"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"return `Hans Gruber` or `Bo Yang`"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"Examples:"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"* `find John` returns `John` and `John Doe`."},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"* `find robert` returns `John` if `John` has `robert` as a tag."},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"### Exiting the program: `bye`"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"Exits the program and saves your tasks."},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"Format: `bye`"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"## Command summary"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"| Action | Format |"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"| :----- | :----- |"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"| **Adding a todo** | `todo NAME_OF_TASK [#TAG]...` |"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"| **Adding an event** | `event NAME_OF_EVENT /at TIME_OF_EVENT [#TAG]...` |"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"| **Adding a deadline** | `deadline NAME_OF_DEADLINE /by TIME_OF_DEADLINE [#TAG]...` |"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"| **Listing all tasks** | `list` |"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"| **Marking a task as done** | `done INDEX` |"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"| **Deleting a task** | `delete INDEX` |"},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"| **Finding a task** | `find [KEYWORDS]...` |"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"| **Exiting the program** | `bye` |"},{"lineNumber":117,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"joshualiangxy":106,"-":11}},{"path":"src/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import main.gui.Stuff;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * The app launcher."},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.2"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"public class Launcher {"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"        Application.launch(Stuff.class, args);"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":18}},{"path":"src/main/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidTaskException;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * Represents the commands that a user can give to the UI."},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"public interface Command {"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"     * Executes the command and prints out response from the ui and updates"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"     * the task list accordingly."},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string that indicates the execution of the command."},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidTaskException if task is not found in list."},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    String execute(Ui ui, TaskList tasks) throws InvalidTaskException;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"     * Checks if there are still commands after this command"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"     * @return false if ExitCommand, else true."},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"    boolean hasCommandAfter();"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":30}},{"path":"src/main/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * Represents the add deadline command."},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"public class DeadlineCommand implements Command {"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    private final Deadline deadline;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an DeadlineCommand instance and the Deadline object"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"     * with the description and the deadline of the task."},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"     * @param description the description of the task."},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"     * @param dateTime the deadline of the task."},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"     * @param options the options of the task."},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    public DeadlineCommand(String description, LocalDateTime dateTime,"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                           HashSet\u003cOption\u003e options, String[] tags) {"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        deadline \u003d new Deadline(description, dateTime, options, tags);"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"     * Adds the Deadline object into the task list and prints add success"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"     * from the ui."},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string indicating the task has been added successfully."},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    public String execute(Ui ui, TaskList tasks) {"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(deadline);"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"        return ui.printAddSuccess(deadline, tasks.size());"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"     * Returns true since there can still be commands after this."},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"     * @return true."},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"    public boolean hasCommandAfter() {"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        return true;"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof DeadlineCommand) {"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"            DeadlineCommand o \u003d (DeadlineCommand) obj;"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"            return this.deadline.equals(o.deadline);"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":64}},{"path":"src/main/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidTaskException;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Task;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * Represents the delete command."},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    private final int taskNum;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a DeleteCommand instance with the index of the task"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"     * in the list."},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"     * @param taskNum the index of the task in the task list."},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    public DeleteCommand(int taskNum) {"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * Marks the task at the index of the task list indicated by the taskNum"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     * as done."},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string indicating the task has been removed."},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidTaskException if the taskNum is outside of the size of the task list."},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    public String execute(Ui ui, TaskList tasks) throws InvalidTaskException {"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        boolean isInvalidIndex \u003d taskNum \u003c 1 || taskNum \u003e tasks.size();"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        if (isInvalidIndex) {"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidTaskException();"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        Task removedTask \u003d tasks.remove(taskNum - 1);"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        return ui.printRemoveSuccess(removedTask, tasks.size());"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"     * Returns true since there can still be commands after this."},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"     * @return true."},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"    public boolean hasCommandAfter() {"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        return true;"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof DeleteCommand) {"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"            DeleteCommand o \u003d (DeleteCommand) obj;"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"            return this.taskNum \u003d\u003d o.taskNum;"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":65}},{"path":"src/main/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidTaskException;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Task;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * Represents the done command."},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"public class DoneCommand implements Command {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    private final int taskNum;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a DoneCommand instance with the index of the task"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"     * in the list."},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"     * @param taskNum the index of the task in the task list."},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    public DoneCommand(int taskNum) {"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * Returns the string indicating the task has been successfully marked as done."},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string indicating the task has been successfully marked as done."},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidTaskException if the taskNum is outside of the size of the task list."},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    public String execute(Ui ui, TaskList tasks) throws InvalidTaskException {"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        boolean isInvalidIndex \u003d taskNum \u003c 1 || taskNum \u003e tasks.size();"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        if (isInvalidIndex) {"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidTaskException();"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"        Task task \u003d tasks.get(taskNum - 1);"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        task.setDone();"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        return ui.printDoneSuccess(task);"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"     * Returns true since there can still be commands after this."},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"     * @return true."},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"    public boolean hasCommandAfter() {"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        return true;"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof DoneCommand) {"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"            DoneCommand o \u003d (DoneCommand) obj;"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"            return this.taskNum \u003d\u003d o.taskNum;"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":65}},{"path":"src/main/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * Represents the add event command."},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"public class EventCommand implements Command {"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    private final Event event;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an EventCommand instance and the Event object"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"     * with the description and the deadline of the task."},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"     * @param description the description of the task."},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"     * @param dateTime the time of the event occurring."},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"     * @param options the options of the task."},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    public EventCommand(String description, LocalDateTime dateTime,"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                        HashSet\u003cOption\u003e options, String[] tags) {"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        event \u003d new Event(description, dateTime, options, tags);"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"     * Adds the Event object into the task list and prints add success"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"     * from the ui."},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string indicating the task has been added successfully."},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    public String execute(Ui ui, TaskList tasks) {"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(event);"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        return ui.printAddSuccess(event, tasks.size());"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"     * Returns true since there can still be commands after this."},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"     * @return true."},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"    public boolean hasCommandAfter() {"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"        return true;"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof EventCommand) {"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"            EventCommand o \u003d (EventCommand) obj;"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"            return this.event.equals(o.event);"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":63}},{"path":"src/main/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * Represents the exit command."},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"public class ExitCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"     * Does not execute anything."},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string bidding farewell to the user."},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    public String execute(Ui ui, TaskList tasks) {"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"        return ui.printExitMessage();"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"     * Returns false as there are no more commands after this."},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * @return false."},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"    public boolean hasCommandAfter() {"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        return obj instanceof ExitCommand;"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":39}},{"path":"src/main/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Task;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * Represents the done command."},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.2"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"public class FindCommand implements Command {"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    private final String[] searchTerms;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a FindCommand instance with the string to search for."},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"     * @param searchTerms the strings to search the task list for."},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    public FindCommand(String searchTerms) {"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        this.searchTerms \u003d searchTerms.split(\" \");"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * Looks through the task list and constructs a new list with the"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     * tasks that have names that contain the search terms."},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string showing all tasks found."},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    public String execute(Ui ui, TaskList tasks) {"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        TaskList foundTasks \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        boolean isValidSearchTerms \u003d searchTerms[0].length() \u003e 0;"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        if (isValidSearchTerms) {"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"                foundTasks.add(tasks.get(i));"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"            for (String searchTerm : searchTerms) {"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"                TaskList tempTaskList \u003d new TaskList();"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"                for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"                    Task task \u003d foundTasks.get(i);"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"                    boolean isFoundInName \u003d task.getName().contains(searchTerm);"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"                    boolean isFoundInTags \u003d Arrays"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"                            .stream(task.getTags())"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"                            .parallel()"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"                            .anyMatch(tag -\u003e tag.contains(searchTerm));"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"                    boolean isFound \u003d isFoundInName || isFoundInTags;"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"                    if (isFound) {"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"                        tempTaskList.add(task);"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"                foundTasks \u003d tempTaskList;"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"        return ui.printFoundList(foundTasks);"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"     * Returns true since there can still be commands after this."},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"     * @return true."},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    public boolean hasCommandAfter() {"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        return true;"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof FindCommand) {"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"            FindCommand o \u003d (FindCommand) obj;"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"            return Arrays.equals(this.searchTerms, o.searchTerms);"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":85}},{"path":"src/main/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * Represents the list command."},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"public class ListCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"     * Prints out the entire task list via the ui."},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string showing all tasks."},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    public String execute(Ui ui, TaskList tasks) {"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"        return ui.printTaskList(tasks);"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"     * Returns true since there can still be commands after this."},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * @return true."},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"    public boolean hasCommandAfter() {"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"        return true;"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        return obj instanceof ListCommand;"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":39}},{"path":"src/main/command/Option.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * Represents the possible options a command can have."},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @author Lin Geyu"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.3"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"public enum Option {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    RECURRING_DAILY(new String[] { \"rd\" }, new String[] { \"recurring-daily\" }),"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    RECURRING_WEEKLY(new String[] { \"rw\" }, new String[] { \"recurring-weekly\" }),"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    RECURRING_MONTHLY(new String[] { \"rm\" }, new String[] { \"recurring-monthly\" }),"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    RECURRING_YEARLY(new String[] { \"ry\" }, new String[] { \"recurring-yearly\" });"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    private static final Map\u003cString, Option\u003e shortAliasMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private static final Map\u003cString, Option\u003e fullAliasMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    private final String[] shortAliases;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    private final String[] fullAliases;"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    static {"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        Arrays.stream(Option.values())"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                .forEach(option -\u003e {"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"                    Arrays.stream(option.shortAliases)"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"                            .forEach(shortAlias -\u003e shortAliasMap.put(shortAlias, option));"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                    Arrays.stream(option.fullAliases)"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"                            .forEach(fullAlias -\u003e fullAliasMap.put(fullAlias, option));"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"                });"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"     * Creates an Option that corresponds to a list of aliases."},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"     * @param shortAliases the shorthand aliases that correspond to this option."},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"     * @param fullAliases the full aliases that correspond to this option."},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    Option(String[] shortAliases, String[] fullAliases) {"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"        this.shortAliases \u003d shortAliases;"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        this.fullAliases \u003d fullAliases;"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"     * Returns an option that corresponds to the short alias given."},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"     * @param shortAlias Alias given by user."},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"     * @return Option that corresponds to the short alias."},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidOptionException When alias does not correspond to any option."},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"    public static Option getOptionFromShortAlias(String shortAlias)"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"            throws InvalidOptionException {"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        Option option \u003d shortAliasMap.get(shortAlias);"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        boolean isInvalidAlias \u003d option \u003d\u003d null;"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        if (isInvalidAlias) {"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidOptionException(shortAlias);"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        return option;"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"     * Returns an option the corresponds to the full alias given."},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"     * @param fullAlias Alias given by user."},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"     * @return Option that corresponds to the full alias."},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidOptionException When alias does not correspond to any option."},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"    public static Option getOptionFromFullAlias(String fullAlias)"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"            throws InvalidOptionException {"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        Option option \u003d fullAliasMap.get(fullAlias);"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        boolean isInvalidAlias \u003d option \u003d\u003d null;"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"        if (isInvalidAlias) {"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidOptionException(fullAlias);"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"        return option;"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"     * Gets the first short alias corresponding to the option."},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"     * @param option the option we want to get an alias from."},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"     * @return the alias that corresponds to the option."},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"    public static String getAlias(Option option) {"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"        return option.shortAliases[0];"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":92}},{"path":"src/main/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * Represents the add todo command."},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"public class TodoCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    private final Todo todo;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an TodoCommand instance and the Todo object"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"     * with the description of the task."},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"     * @param description the description of the task."},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    public TodoCommand(String description, String[] tags) {"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        todo \u003d new Todo(description, tags);"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * Adds the Todo object into the task list and prints add success"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     * from the ui."},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"     * @param ui the ui used to print out responses."},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string indicating the task has been added successfully."},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    public String execute(Ui ui, TaskList tasks) {"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(todo);"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        return ui.printAddSuccess(todo, tasks.size());"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"     * Returns true since there can still be commands after this."},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"     * @return true."},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    public boolean hasCommandAfter() {"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        return true;"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof TodoCommand) {"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            TodoCommand o \u003d (TodoCommand) obj;"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"            return this.todo.equals(o.todo);"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":57}},{"path":"src/main/exception/EmptyMessageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Thrown to indicate the description of a task is empty."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class EmptyMessageException extends StuffException {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an EmptyMessageException instance with the"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     * messaged tailored for the command."},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"     * @param command the command that does not have a description."},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    public EmptyMessageException(String command) {"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        super(String.format(\"The description of a %s cannot be empty.\", command));"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":20}},{"path":"src/main/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Thrown to indicate the date of the deadline or event is invalid."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidDateException extends StuffException {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an InvalidDateException instance with a message."},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     * @param message the message for the exception."},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    public InvalidDateException(String message) {"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"        super(message);"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":19}},{"path":"src/main/exception/InvalidDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Thrown to indicate the deadline format is invalid."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidDeadlineFormatException extends StuffException {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an InvalidDeadlineFormatException instance."},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    public InvalidDeadlineFormatException() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"        super(\"A deadline needs to have this format:\\n\""},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"                + \"\\\"task name\\\" /by \\\"task deadline\\\"\");"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":19}},{"path":"src/main/exception/InvalidEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Thrown to indicate the event format is invalid."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidEventFormatException extends StuffException {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an InvalidEventFormatException instance."},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    public InvalidEventFormatException() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"        super(\"An event needs to have this format:\\n\""},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"                + \"\\\"task name\\\" /at \\\"event time\\\"\");"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":19}},{"path":"src/main/exception/InvalidOptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Thrown to indicate the option selected is invalid."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.3"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidOptionException extends StuffException {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an InvalidOptionException instance."},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     * @param alias the invalid alias from the user input."},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    public InvalidOptionException(String alias) {"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"        super(String.format(\"Your option of %s does not exist!\", alias));"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":19}},{"path":"src/main/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Thrown to indicate the task selected is invalid."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidTaskException extends StuffException {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an InvalidTaskException instance."},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    public InvalidTaskException() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"        super(\"Your selected task does not exist!\");"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":18}},{"path":"src/main/exception/StuffException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Thrown to indicate any exceptions in the stuff application."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class StuffException extends Exception {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an StuffException instance with a message."},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     * @param message the message for the exception."},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    public StuffException(String message) {"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"        super(message);"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":19}},{"path":"src/main/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Thrown to indicate input command is unknown."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class UnknownCommandException extends StuffException {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an UnknownCommandException instance."},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    public UnknownCommandException() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means.\");"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":18}},{"path":"src/main/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.gui;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.Node;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":" * Represents the dialog box of the user or stuff."},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.2"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.2"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    private static final Insets DIALOG_BOX_PADDING \u003d new Insets(10, 0, 10, 0);"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    private static final Color DIALOG_COLOR \u003d Color.rgb(255, 255, 255);"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    private static final Insets DIALOG_PADDING \u003d new Insets(5);"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    private static final Background TEXT_BOX \u003d new Background("},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"            new BackgroundFill("},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                    Color.rgb(14, 122, 254),"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"                    new CornerRadii(5),"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"                    Insets.EMPTY"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"            )"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    );"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    private DialogBox(Label text, ImageView displayPicture) {"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        text.setWrapText(true);"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        text.setPadding(DIALOG_PADDING);"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        text.setTextFill(DIALOG_COLOR);"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        text.setBackground(TEXT_BOX);"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"        this.setPadding(DIALOG_BOX_PADDING);"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"    private void flip() {"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a DialogBox instance with user input and display picture of user."},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"     * @param text the user input."},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"     * @param displayPicture the picture of the user."},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"     * @return a DialogBox instance with user input and display picture of user."},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"    public static DialogBox getUserDialog(Label text, ImageView displayPicture) {"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        return new DialogBox(text, displayPicture);"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a DialogBox instance with dialog and display picture of Stuff."},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"     * @param text the dialog of Stuff."},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"     * @param displayPicture the picture of Stuff."},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"     * @return a DialogBox instance with dialog and display picture of Stuff."},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"    public static DialogBox getStuffDialog(Label text, ImageView displayPicture) {"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        DialogBox db \u003d new DialogBox(text, displayPicture);"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        db.flip();"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        return db;"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":76}},{"path":"src/main/gui/Stuff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.gui;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.util.Random;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import javafx.application.Application;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.Scene;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.control.Button;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.image.Image;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"import javafx.stage.Stage;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Command;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.StuffException;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"import main.parser.Parser;"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"import main.storage.Storage;"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":" * Stuff application."},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.2"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"public class Stuff extends Application {"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"    private static final Random DELAY_GENERATOR \u003d new Random();"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"    private final Image userImage;"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    private final Image stuffImage;"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    private final Image icon;"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"    private final Ui ui;"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    private final TaskList tasks;"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    private VBox dialogContainer;"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    private TextField userInput;"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs the stuff application."},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"    public Stuff() {"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        ui \u003d new Ui();"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        userImage \u003d new Image("},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"                this.getClass().getResourceAsStream(\"/images/Peter.jpg\"));"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        stuffImage \u003d new Image("},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"                this.getClass().getResourceAsStream(\"/images/Stuff.jpg\"));"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        icon \u003d new Image("},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"                this.getClass().getResourceAsStream(\"/images/StuffIcon.jpg\"));"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"    public void start(Stage stage) {"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"        userInput \u003d new TextField();"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"        Button sendButton \u003d new Button(\"Send\");"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        Scene scene \u003d new Scene(mainLayout);"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        stage.getIcons().add(icon);"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"        stage.setScene(scene);"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        stage.show();"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"        stage.setTitle(\"Stuff\");"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"        stage.setResizable(false);"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"        ImageView stuffImageView \u003d new ImageView(stuffImage);"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"        stuffImageView.setClip(new Circle(50, 50, 50));"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"        DialogBox stuffGreeting \u003d DialogBox"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"                .getStuffDialog(new Label(ui.printGreetingMessage()), stuffImageView);"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"        dialogContainer.getChildren().addAll(stuffGreeting);"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"            Storage.setTasks(tasks);"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"        } catch (IOException e) {"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":"            stuffImageView \u003d new ImageView(stuffImage);"},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"            stuffImageView.setClip(new Circle(50, 50, 50));"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":"            DialogBox stuffDialog \u003d DialogBox"},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"                    .getStuffDialog(new Label(ui.printErrorMessage()), stuffImageView);"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"            dialogContainer.getChildren().addAll(stuffDialog);"},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"        } catch (InvalidOptionException e) {"},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"            stuffImageView \u003d new ImageView(stuffImage);"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"            stuffImageView.setClip(new Circle(50, 50, 50));"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"            DialogBox stuffDialog \u003d DialogBox"},{"lineNumber":134,"author":{"gitId":"joshualiangxy"},"content":"                    .getStuffDialog(new Label(e.getMessage()), stuffImageView);"},{"lineNumber":135,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":136,"author":{"gitId":"joshualiangxy"},"content":"            dialogContainer.getChildren().addAll(stuffDialog);"},{"lineNumber":137,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":139,"author":{"gitId":"joshualiangxy"},"content":"        sendButton.setOnMouseClicked(event -\u003e handleUserInput());"},{"lineNumber":140,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":141,"author":{"gitId":"joshualiangxy"},"content":"        userInput.setOnAction(event -\u003e handleUserInput());"},{"lineNumber":142,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":143,"author":{"gitId":"joshualiangxy"},"content":"        dialogContainer.heightProperty()"},{"lineNumber":144,"author":{"gitId":"joshualiangxy"},"content":"                .addListener(observable -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":145,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":147,"author":{"gitId":"joshualiangxy"},"content":"    private void handleUserInput() {"},{"lineNumber":148,"author":{"gitId":"joshualiangxy"},"content":"        String input \u003d userInput.getText().trim();"},{"lineNumber":149,"author":{"gitId":"joshualiangxy"},"content":"        String output;"},{"lineNumber":150,"author":{"gitId":"joshualiangxy"},"content":"        boolean isEmptyInput \u003d input.equals(\"\");"},{"lineNumber":151,"author":{"gitId":"joshualiangxy"},"content":"        boolean hasCommandAfter \u003d true;"},{"lineNumber":152,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":153,"author":{"gitId":"joshualiangxy"},"content":"        if (isEmptyInput) {"},{"lineNumber":154,"author":{"gitId":"joshualiangxy"},"content":"            return;"},{"lineNumber":155,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":157,"author":{"gitId":"joshualiangxy"},"content":"        ImageView userImageView \u003d new ImageView(userImage);"},{"lineNumber":158,"author":{"gitId":"joshualiangxy"},"content":"        ImageView stuffImageView \u003d new ImageView(stuffImage);"},{"lineNumber":159,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":160,"author":{"gitId":"joshualiangxy"},"content":"        userImageView.setClip(new Circle(50, 50, 50));"},{"lineNumber":161,"author":{"gitId":"joshualiangxy"},"content":"        stuffImageView.setClip(new Circle(50, 50, 50));"},{"lineNumber":162,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":163,"author":{"gitId":"joshualiangxy"},"content":"        String[] splitInput \u003d input.trim().split(\" \");"},{"lineNumber":164,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":165,"author":{"gitId":"joshualiangxy"},"content":"        try {"},{"lineNumber":166,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(splitInput);"},{"lineNumber":167,"author":{"gitId":"joshualiangxy"},"content":"            output \u003d command.execute(ui, tasks);"},{"lineNumber":168,"author":{"gitId":"joshualiangxy"},"content":"            hasCommandAfter \u003d command.hasCommandAfter();"},{"lineNumber":169,"author":{"gitId":"joshualiangxy"},"content":"        } catch (StuffException e) {"},{"lineNumber":170,"author":{"gitId":"joshualiangxy"},"content":"            output \u003d e.getMessage();"},{"lineNumber":171,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":173,"author":{"gitId":"joshualiangxy"},"content":"        Label userText \u003d new Label(input);"},{"lineNumber":174,"author":{"gitId":"joshualiangxy"},"content":"        Label stuffText \u003d new Label(\"...\");"},{"lineNumber":175,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":176,"author":{"gitId":"joshualiangxy"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(userText, userImageView);"},{"lineNumber":177,"author":{"gitId":"joshualiangxy"},"content":"        DialogBox stuffDialog \u003d DialogBox.getStuffDialog(stuffText, stuffImageView);"},{"lineNumber":178,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":179,"author":{"gitId":"joshualiangxy"},"content":"        dialogContainer.getChildren().addAll(userDialog, stuffDialog);"},{"lineNumber":180,"author":{"gitId":"joshualiangxy"},"content":"        userInput.clear();"},{"lineNumber":181,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":182,"author":{"gitId":"joshualiangxy"},"content":"        String finalOutput \u003d output;"},{"lineNumber":183,"author":{"gitId":"joshualiangxy"},"content":"        CompletableFuture"},{"lineNumber":184,"author":{"gitId":"joshualiangxy"},"content":"                .delayedExecutor("},{"lineNumber":185,"author":{"gitId":"joshualiangxy"},"content":"                        DELAY_GENERATOR.nextInt(500) + 250,"},{"lineNumber":186,"author":{"gitId":"joshualiangxy"},"content":"                        TimeUnit.MILLISECONDS"},{"lineNumber":187,"author":{"gitId":"joshualiangxy"},"content":"                )"},{"lineNumber":188,"author":{"gitId":"joshualiangxy"},"content":"                .execute(() -\u003e Platform.runLater(() -\u003e {"},{"lineNumber":189,"author":{"gitId":"joshualiangxy"},"content":"                    stuffText.setText(finalOutput);"},{"lineNumber":190,"author":{"gitId":"joshualiangxy"},"content":"                }));"},{"lineNumber":191,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":192,"author":{"gitId":"joshualiangxy"},"content":"        if (!hasCommandAfter) {"},{"lineNumber":193,"author":{"gitId":"joshualiangxy"},"content":"            try {"},{"lineNumber":194,"author":{"gitId":"joshualiangxy"},"content":"                Storage.write(tasks);"},{"lineNumber":195,"author":{"gitId":"joshualiangxy"},"content":"            } catch (IOException e) {"},{"lineNumber":196,"author":{"gitId":"joshualiangxy"},"content":"                DialogBox stuffError \u003d DialogBox"},{"lineNumber":197,"author":{"gitId":"joshualiangxy"},"content":"                        .getStuffDialog(new Label(ui.printErrorMessage()), stuffImageView);"},{"lineNumber":198,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":199,"author":{"gitId":"joshualiangxy"},"content":"                dialogContainer.getChildren().addAll(stuffError);"},{"lineNumber":200,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":201,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":202,"author":{"gitId":"joshualiangxy"},"content":"            CompletableFuture.delayedExecutor(2, TimeUnit.SECONDS)"},{"lineNumber":203,"author":{"gitId":"joshualiangxy"},"content":"                    .execute(Platform::exit);"},{"lineNumber":204,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"joshualiangxy":204,"-":2}},{"path":"src/main/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.parser;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Command;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import main.command.DeadlineCommand;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import main.command.DeleteCommand;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import main.command.DoneCommand;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import main.command.EventCommand;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.command.ExitCommand;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.command.FindCommand;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.command.ListCommand;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Option;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.command.TodoCommand;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.EmptyMessageException;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidDateException;"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidDeadlineFormatException;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidEventFormatException;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidTaskException;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.UnknownCommandException;"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":" * Handles the parsing of user inputs."},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"public class Parser {"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    private static final String COMMAND_LIST \u003d \"list\";"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"    private static final String COMMAND_DONE \u003d \"done\";"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"    private static final String COMMAND_FIND \u003d \"find\";"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    private static LocalDateTime toDateTime(String dateTime) throws InvalidDateException {"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        String[] dateTimeSplit \u003d dateTime.split(\" \");"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        boolean isWrongDateTimeFormat \u003d dateTimeSplit.length !\u003d 2;"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        if (isWrongDateTimeFormat) {"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidDateException(\"Your date needs to\""},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"                    + \" have this format:\\n\\\"YYYY-MM-DD HHMM\\\"\");"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        String[] date \u003d dateTimeSplit[0].split(\"-\");"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        String time \u003d dateTimeSplit[1];"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"        boolean isWrongDateFormat \u003d date.length !\u003d 3;"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        boolean isWrongTimeFormat \u003d time.length() !\u003d 4;"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        if (isWrongDateFormat) {"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidDateException(\"Your date needs to\""},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"                    + \" have this format:\\n\\\"YYYY-MM-DD\\\"\");"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        if (isWrongTimeFormat) {"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidDateException(\"Your time needs to\""},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"                    + \" have this format:\\n\\\"HHMM\\\"\");"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"            int year \u003d Integer.parseInt(date[0]);"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"            int month \u003d Integer.parseInt(date[1]);"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"            int day \u003d Integer.parseInt(date[2]);"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"            int hour \u003d Integer.parseInt(time.substring(0, 2));"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"            int minute \u003d Integer.parseInt(time.substring(2));"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"            return LocalDateTime.of(year, month, day, hour, minute);"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        } catch (NumberFormatException | DateTimeException e) {"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidDateException(\"Please check that you\u0027ve\""},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"                    + \" entered the date and time correctly\");"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"    private static Command parseAdd("},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"            String command,"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"            String description,"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options,"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"            String[] tags"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"    ) throws InvalidDeadlineFormatException,"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"                InvalidDateException,"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"                InvalidEventFormatException,"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"                UnknownCommandException {"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"        assert(description.length() \u003e 0);"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        String[] nameAndTime;"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"        boolean isSingleArgument;"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"        switch (command) {"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"        case COMMAND_TODO:"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"            return new TodoCommand(description, tags);"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"        case COMMAND_DEADLINE:"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"            nameAndTime \u003d description.split(\" /by \", 2);"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"            isSingleArgument \u003d nameAndTime.length \u003d\u003d 1;"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"            if (isSingleArgument) {"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"                throw new InvalidDeadlineFormatException();"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"            return new DeadlineCommand("},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"                    nameAndTime[0],"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"                    toDateTime(nameAndTime[1]),"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"                    tags"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"        case COMMAND_EVENT:"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"            nameAndTime \u003d description.split(\" /at \", 2);"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"            isSingleArgument \u003d nameAndTime.length \u003d\u003d 1;"},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"            if (isSingleArgument) {"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":"                throw new InvalidEventFormatException();"},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":"            return new EventCommand("},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"                    nameAndTime[0],"},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"                    toDateTime(nameAndTime[1]),"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":"                    tags"},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"        default:"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"            throw new UnknownCommandException();"},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"    private static String[][] processArgs(String[] input) {"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"        String[] command \u003d { input[0] };"},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"        List\u003cString\u003e shortOptions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":134,"author":{"gitId":"joshualiangxy"},"content":"        List\u003cString\u003e fullOptions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":135,"author":{"gitId":"joshualiangxy"},"content":"        List\u003cString\u003e description \u003d new ArrayList\u003c\u003e();"},{"lineNumber":136,"author":{"gitId":"joshualiangxy"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":137,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":138,"author":{"gitId":"joshualiangxy"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":139,"author":{"gitId":"joshualiangxy"},"content":"            String arg \u003d input[i];"},{"lineNumber":140,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":141,"author":{"gitId":"joshualiangxy"},"content":"            if (arg.startsWith(\"--\")) {"},{"lineNumber":142,"author":{"gitId":"joshualiangxy"},"content":"                if (arg.length() \u003e 2) {"},{"lineNumber":143,"author":{"gitId":"joshualiangxy"},"content":"                    fullOptions.add(arg.substring(2));"},{"lineNumber":144,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":145,"author":{"gitId":"joshualiangxy"},"content":"            } else if (arg.startsWith(\"-\")) {"},{"lineNumber":146,"author":{"gitId":"joshualiangxy"},"content":"                if (arg.length() \u003e 1) {"},{"lineNumber":147,"author":{"gitId":"joshualiangxy"},"content":"                    shortOptions.add(arg.substring(1));"},{"lineNumber":148,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":149,"author":{"gitId":"joshualiangxy"},"content":"            } else if (arg.startsWith(\"#\")) {"},{"lineNumber":150,"author":{"gitId":"joshualiangxy"},"content":"                if (arg.length() \u003e 1) {"},{"lineNumber":151,"author":{"gitId":"joshualiangxy"},"content":"                    tags.add(arg.substring(1));"},{"lineNumber":152,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"joshualiangxy"},"content":"            } else {"},{"lineNumber":154,"author":{"gitId":"joshualiangxy"},"content":"                description.add(arg);"},{"lineNumber":155,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":158,"author":{"gitId":"joshualiangxy"},"content":"        return new String[][] {"},{"lineNumber":159,"author":{"gitId":"joshualiangxy"},"content":"            command,"},{"lineNumber":160,"author":{"gitId":"joshualiangxy"},"content":"            fullOptions.toArray(new String[0]),"},{"lineNumber":161,"author":{"gitId":"joshualiangxy"},"content":"            shortOptions.toArray(new String[0]),"},{"lineNumber":162,"author":{"gitId":"joshualiangxy"},"content":"            description.toArray(new String[0]),"},{"lineNumber":163,"author":{"gitId":"joshualiangxy"},"content":"            tags.toArray(new String[0])"},{"lineNumber":164,"author":{"gitId":"joshualiangxy"},"content":"        };"},{"lineNumber":165,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":167,"author":{"gitId":"joshualiangxy"},"content":"    private static HashSet\u003cOption\u003e parseOptions("},{"lineNumber":168,"author":{"gitId":"joshualiangxy"},"content":"            String[] fullAliases, String[] shortAliases) throws InvalidOptionException {"},{"lineNumber":169,"author":{"gitId":"joshualiangxy"},"content":"        HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":170,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":171,"author":{"gitId":"joshualiangxy"},"content":"        for (String fullAlias : fullAliases) {"},{"lineNumber":172,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.getOptionFromFullAlias(fullAlias));"},{"lineNumber":173,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":175,"author":{"gitId":"joshualiangxy"},"content":"        for (String shortAlias : shortAliases) {"},{"lineNumber":176,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.getOptionFromShortAlias(shortAlias));"},{"lineNumber":177,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":179,"author":{"gitId":"joshualiangxy"},"content":"        return options;"},{"lineNumber":180,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":182,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"joshualiangxy"},"content":"     * Parses the input in the form of a string array and returns the"},{"lineNumber":184,"author":{"gitId":"joshualiangxy"},"content":"     * corresponding Command."},{"lineNumber":185,"author":{"gitId":"joshualiangxy"},"content":"     * @param input the user input as a string array."},{"lineNumber":186,"author":{"gitId":"joshualiangxy"},"content":"     * @return a Command based on the input."},{"lineNumber":187,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidTaskException if the selected task does not exist."},{"lineNumber":188,"author":{"gitId":"joshualiangxy"},"content":"     * @throws EmptyMessageException if the description of the task is empty."},{"lineNumber":189,"author":{"gitId":"joshualiangxy"},"content":"     * @throws UnknownCommandException if the command given is unknown."},{"lineNumber":190,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidDateException if the deadline or event dates are invalid."},{"lineNumber":191,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidDeadlineFormatException if the format of deadline"},{"lineNumber":192,"author":{"gitId":"joshualiangxy"},"content":"     * command is invalid."},{"lineNumber":193,"author":{"gitId":"joshualiangxy"},"content":"     * @throws InvalidEventFormatException if the format of event is invalid."},{"lineNumber":194,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"joshualiangxy"},"content":"    public static Command parse(String[] input)"},{"lineNumber":196,"author":{"gitId":"joshualiangxy"},"content":"            throws InvalidTaskException,"},{"lineNumber":197,"author":{"gitId":"joshualiangxy"},"content":"                EmptyMessageException,"},{"lineNumber":198,"author":{"gitId":"joshualiangxy"},"content":"                UnknownCommandException,"},{"lineNumber":199,"author":{"gitId":"joshualiangxy"},"content":"                InvalidDateException,"},{"lineNumber":200,"author":{"gitId":"joshualiangxy"},"content":"                InvalidDeadlineFormatException,"},{"lineNumber":201,"author":{"gitId":"joshualiangxy"},"content":"                InvalidEventFormatException,"},{"lineNumber":202,"author":{"gitId":"joshualiangxy"},"content":"                InvalidOptionException {"},{"lineNumber":203,"author":{"gitId":"joshualiangxy"},"content":"        String[][] processedInput \u003d processArgs(input);"},{"lineNumber":204,"author":{"gitId":"joshualiangxy"},"content":"        String command \u003d processedInput[0][0];"},{"lineNumber":205,"author":{"gitId":"joshualiangxy"},"content":"        String description \u003d String.join(\" \", processedInput[3]);"},{"lineNumber":206,"author":{"gitId":"joshualiangxy"},"content":"        HashSet\u003cOption\u003e options \u003d parseOptions(processedInput[1], processedInput[2]);"},{"lineNumber":207,"author":{"gitId":"joshualiangxy"},"content":"        String[] tags \u003d processedInput[4];"},{"lineNumber":208,"author":{"gitId":"joshualiangxy"},"content":"        boolean isSingleArgument \u003d description.length() \u003d\u003d 0;"},{"lineNumber":209,"author":{"gitId":"joshualiangxy"},"content":"        int taskNum;"},{"lineNumber":210,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":211,"author":{"gitId":"joshualiangxy"},"content":"        try {"},{"lineNumber":212,"author":{"gitId":"joshualiangxy"},"content":"            switch (command) {"},{"lineNumber":213,"author":{"gitId":"joshualiangxy"},"content":"            case COMMAND_EXIT:"},{"lineNumber":214,"author":{"gitId":"joshualiangxy"},"content":"                return new ExitCommand();"},{"lineNumber":215,"author":{"gitId":"joshualiangxy"},"content":"            case COMMAND_LIST:"},{"lineNumber":216,"author":{"gitId":"joshualiangxy"},"content":"                return new ListCommand();"},{"lineNumber":217,"author":{"gitId":"joshualiangxy"},"content":"            case COMMAND_DONE:"},{"lineNumber":218,"author":{"gitId":"joshualiangxy"},"content":"                if (isSingleArgument) {"},{"lineNumber":219,"author":{"gitId":"joshualiangxy"},"content":"                    throw new InvalidTaskException();"},{"lineNumber":220,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":221,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":222,"author":{"gitId":"joshualiangxy"},"content":"                taskNum \u003d Integer.parseInt(description);"},{"lineNumber":223,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":224,"author":{"gitId":"joshualiangxy"},"content":"                return new DoneCommand(taskNum);"},{"lineNumber":225,"author":{"gitId":"joshualiangxy"},"content":"            case COMMAND_DELETE:"},{"lineNumber":226,"author":{"gitId":"joshualiangxy"},"content":"                if (isSingleArgument) {"},{"lineNumber":227,"author":{"gitId":"joshualiangxy"},"content":"                    throw new InvalidTaskException();"},{"lineNumber":228,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":229,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":230,"author":{"gitId":"joshualiangxy"},"content":"                taskNum \u003d Integer.parseInt(description);"},{"lineNumber":231,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":232,"author":{"gitId":"joshualiangxy"},"content":"                return new DeleteCommand(taskNum);"},{"lineNumber":233,"author":{"gitId":"joshualiangxy"},"content":"            case COMMAND_TODO:"},{"lineNumber":234,"author":{"gitId":"joshualiangxy"},"content":"            case COMMAND_DEADLINE:"},{"lineNumber":235,"author":{"gitId":"joshualiangxy"},"content":"            case COMMAND_EVENT:"},{"lineNumber":236,"author":{"gitId":"joshualiangxy"},"content":"                if (isSingleArgument) {"},{"lineNumber":237,"author":{"gitId":"joshualiangxy"},"content":"                    throw new EmptyMessageException(command);"},{"lineNumber":238,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":239,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":240,"author":{"gitId":"joshualiangxy"},"content":"                return parseAdd(command, description, options, tags);"},{"lineNumber":241,"author":{"gitId":"joshualiangxy"},"content":"            case COMMAND_FIND:"},{"lineNumber":242,"author":{"gitId":"joshualiangxy"},"content":"                if (isSingleArgument) {"},{"lineNumber":243,"author":{"gitId":"joshualiangxy"},"content":"                    return new FindCommand(\"\");"},{"lineNumber":244,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":245,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":246,"author":{"gitId":"joshualiangxy"},"content":"                return new FindCommand(description);"},{"lineNumber":247,"author":{"gitId":"joshualiangxy"},"content":"            default:"},{"lineNumber":248,"author":{"gitId":"joshualiangxy"},"content":"                throw new UnknownCommandException();"},{"lineNumber":249,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":250,"author":{"gitId":"joshualiangxy"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":251,"author":{"gitId":"joshualiangxy"},"content":"            throw new InvalidTaskException();"},{"lineNumber":252,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":253,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":254}},{"path":"src/main/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.storage;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":" * Handles the reading and writing of tasks to disk."},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"public class Storage {"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * Writes the list of tasks to disk as a csv file."},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the list of tasks."},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"     * @throws IOException if there are any issues regarding files."},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"    public static void write(TaskList tasks) throws IOException {"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"        String currDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"        Path folderPath \u003d Paths.get(currDir, \"data\");"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        if (!Files.exists(folderPath)) {"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"            Files.createDirectories(folderPath);"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        Path filePath \u003d Paths.get(currDir, \"data\", \"tasks.csv\");"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"        File file \u003d filePath.toFile();"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        if (!file.exists()) {"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"            file.createNewFile();"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"        bw.write(\"Task Type,Recurrence,Task Time,Done State,Tags,Task Name\\n\");"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            bw.write(tasks.get(i).write());"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"        bw.close();"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"     * Reads the list of tasks from the csv file and sets the task list"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"     * to the tasks from the file."},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the list of tasks."},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"     * @throws IOException if there are any issues regarding files."},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"    public static void setTasks(TaskList tasks) throws IOException,"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            InvalidOptionException {"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"        String currDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"        Path filePath \u003d Paths.get(currDir, \"data\", \"tasks.csv\");"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"        File file \u003d filePath.toFile();"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        if (!file.exists()) {"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"            return;"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        BufferedReader br \u003d Files.newBufferedReader(filePath);"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        br.readLine();"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        String line \u003d br.readLine();"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        while (line !\u003d null) {"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"            String[] task \u003d line.split(\",\");"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"            line \u003d br.readLine();"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"            String taskType \u003d task[0];"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"            String taskRecurrenceAlias \u003d task[1];"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"            String taskTime \u003d task[2];"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"            String taskName \u003d task[5];"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"            String[] tags \u003d task[4].split(\";\");"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"            boolean isTaskDone \u003d task[3].equals(\"1\");"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"            switch (taskType) {"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"            case \"T\":"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"                tasks.add(new Todo(taskName, isTaskDone, tags));"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"            case \"D\":"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"                tasks.add(new Deadline("},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"                        taskName,"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"                        taskRecurrenceAlias,"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"                        taskTime,"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"                        isTaskDone,"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"                        tags"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"                    ));"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"            case \"E\":"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"                tasks.add(new Event(taskName,"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"                        taskRecurrenceAlias,"},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"                        taskTime,"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"                        isTaskDone,"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"                        tags"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"                    ));"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"            default:"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":115}},{"path":"src/main/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Option;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * Represents tasks with a deadline."},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"public class Deadline extends Task {"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    private static final DateTimeFormatter FORMATTER \u003d"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"            DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy, h:mma\");"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    private final LocalDateTime time;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private Option recurrence \u003d null;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a Deadline instance with the name of"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"     * task and time of deadline."},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"     * @param name the name of task."},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * @param time the deadline of task."},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     * @param options the options of the task."},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"    public Deadline(String name, LocalDateTime time,"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                    HashSet\u003cOption\u003e options, String[] tags) {"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"        super(name, tags);"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        this.time \u003d time;"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        for (Option option : options) {"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"            switch (option) {"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_DAILY:"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_WEEKLY:"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_MONTHLY:"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_YEARLY:"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"                if (recurrence \u003d\u003d null) {"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"                    recurrence \u003d option;"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"            default:"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a Deadline instance with the name of"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"     * task, time of deadline and the done state of the task."},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"     * @param name the name of task."},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"     * @param recurrenceAlias the alias of the recurrence."},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"     * @param time the deadline of task."},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"     * @param isDone the done state of the task."},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"    public Deadline(String name, String recurrenceAlias, String time,"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"                    boolean isDone, String[] tags) throws InvalidOptionException {"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"        super(name, tags);"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"        LocalDateTime parsedTime \u003d LocalDateTime.parse(time);"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"        recurrence \u003d recurrenceAlias.length() \u003d\u003d 0"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"                ? null : Option.getOptionFromShortAlias(recurrenceAlias);"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        LocalDateTime now \u003d LocalDateTime.now();"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"        boolean hasDeadlinePassed \u003d parsedTime.isBefore(now);"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        boolean hasRecurrence \u003d recurrence !\u003d null;"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        boolean isToBeReset \u003d hasDeadlinePassed \u0026\u0026 hasRecurrence;"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        long addedTime;"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        if (isToBeReset) {"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            switch (recurrence) {"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_DAILY:"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"                addedTime \u003d parsedTime.until(now, ChronoUnit.DAYS) + 1;"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime.plusDays(addedTime);"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_WEEKLY:"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"                addedTime \u003d parsedTime.until(now, ChronoUnit.WEEKS) + 1;"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime.plusWeeks(addedTime);"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_MONTHLY:"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"                addedTime \u003d parsedTime.until(now, ChronoUnit.MONTHS) + 1;"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime.plusMonths(addedTime);"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_YEARLY:"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"                addedTime \u003d parsedTime.until(now, ChronoUnit.YEARS) + 1;"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime.plusYears(addedTime);"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"            default:"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime;"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"            this.time \u003d parsedTime;"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"        if (isDone \u0026\u0026 !isToBeReset) {"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"            setDone();"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"     * Returns the string meant for writing to disk."},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string meant for writing to disk."},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"    public String write() {"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"        String recurrence \u003d this.recurrence \u003d\u003d null"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"                ? \"\" : Option.getAlias(this.recurrence);"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(\"D,%s,%s%s\", recurrence, time, super.write());"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"    public String toString() {"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(\"[D]%s\\n(by: %s)\", super.toString(),"},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"                time.format(FORMATTER));"},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof Deadline) {"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"            Deadline o \u003d (Deadline) obj;"},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"            boolean isSameRecurrence \u003d recurrence \u003d\u003d o.recurrence;"},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"            boolean isSameTime \u003d time.equals(o.time);"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"            return super.equals(o) \u0026\u0026 isSameTime \u0026\u0026 isSameRecurrence;"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":134,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":135}},{"path":"src/main/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Option;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * Represents events."},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"public class Event extends Task {"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    private static final DateTimeFormatter FORMATTER \u003d"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"            DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy, h:mma\");"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    private final LocalDateTime time;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private Option recurrence \u003d null;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an Event instance with the name of"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"     * task and the event time."},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"     * @param name the name of task."},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"     * @param time the event time."},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     * @param options the options of the task."},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"    public Event(String name, LocalDateTime time,"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                 HashSet\u003cOption\u003e options, String[] tags) {"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"        super(name, tags);"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        this.time \u003d time;"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        for (Option option : options) {"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"            switch (option) {"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_DAILY:"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_WEEKLY:"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_MONTHLY:"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_YEARLY:"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"                if (recurrence \u003d\u003d null) {"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"                    recurrence \u003d option;"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"            default:"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a Event instance with the name of"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"     * task, time of deadline and the done state of the task."},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"     * @param name the name of task."},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"     * @param recurrenceAlias the alias of the recurrence."},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"     * @param time the event time."},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"     * @param isDone the done state of the task."},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"    public Event(String name, String recurrenceAlias, String time,"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"                 boolean isDone, String[] tags) throws InvalidOptionException {"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"        super(name, tags);"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"        LocalDateTime parsedTime \u003d LocalDateTime.parse(time);"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"        recurrence \u003d recurrenceAlias.length() \u003d\u003d 0"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"                ? null : Option.getOptionFromShortAlias(recurrenceAlias);"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"        LocalDateTime now \u003d LocalDateTime.now();"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        boolean hasDeadlinePassed \u003d parsedTime.isBefore(now);"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"        boolean hasRecurrence \u003d recurrence !\u003d null;"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        boolean isToBeReset \u003d hasDeadlinePassed \u0026\u0026 hasRecurrence;"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        long addedTime;"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        if (isToBeReset) {"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"            switch (recurrence) {"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_DAILY:"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"                addedTime \u003d parsedTime.until(now, ChronoUnit.DAYS) + 1;"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime.plusDays(addedTime);"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_WEEKLY:"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"                addedTime \u003d parsedTime.until(now, ChronoUnit.WEEKS) + 1;"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime.plusWeeks(addedTime);"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_MONTHLY:"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"                addedTime \u003d parsedTime.until(now, ChronoUnit.MONTHS) + 1;"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime.plusMonths(addedTime);"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"            case RECURRING_YEARLY:"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"                addedTime \u003d parsedTime.until(now, ChronoUnit.YEARS) + 1;"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime.plusYears(addedTime);"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"            default:"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"                this.time \u003d parsedTime;"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"            this.time \u003d parsedTime;"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"        if (isDone \u0026\u0026 !isToBeReset) {"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"            setDone();"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"     * Returns the string meant for writing to disk."},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string meant for writing to disk."},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"    public String write() {"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"        String recurrence \u003d this.recurrence \u003d\u003d null"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"                ? \"\" : Option.getAlias(this.recurrence);"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(\"E,%s,%s%s\", recurrence, time, super.write());"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":"    public String toString() {"},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(\"[E]%s\\n(at: %s)\", super.toString(),"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"                time.format(FORMATTER));"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof Event) {"},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"            Event o \u003d (Event) obj;"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"            boolean isSameRecurrence \u003d recurrence \u003d\u003d o.recurrence;"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"            boolean isSameTime \u003d time.equals(o.time);"},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"            return super.equals(o) \u0026\u0026 isSameTime \u0026\u0026 isSameRecurrence;"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":133}},{"path":"src/main/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * Represents tasks."},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"public class Task {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"    private final String name;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"    private final String[] tags;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    private boolean isDone;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a Task instance with the name of the task."},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"     * @param name the name of the task."},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    public Task(String name, String[] tags) {"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"        this.name \u003d name;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        this.tags \u003d tags;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"        isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a Task instance with the name of the task"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"     * and the done state of the task."},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"     * @param name the name of the task."},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"     * @param doneState the done state of the task."},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    public Task(String name, boolean doneState, String[] tags) {"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        this.name \u003d name;"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        this.tags \u003d tags;"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        isDone \u003d doneState;"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"     * Gets the name of the task."},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"     * @return the name of the task."},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    public String getName() {"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        return name;"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"    private String doneTag() {"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"        return isDone ? \"[\\u2713]\" : \"[\\u2718]\";"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"     * Sets the done state of the task to true."},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"    public void setDone() {"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        isDone \u003d true;"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"     * Gets the tags associated with the task."},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"     * @return tags associated with the task."},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"    public String[] getTags() {"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"        return tags;"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"     * Returns the string meant for writing to disk."},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string meant for writing to disk."},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"    public String write() {"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        String tags \u003d String.join(\";\", this.tags);"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(\",%d,%s,%s\\n\", isDone ? 1 : 0, tags, name);"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(\"%s %s\", doneTag(), name);"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof Task) {"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"            Task o \u003d (Task) obj;"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"            boolean isSameName \u003d name.equals(o.name);"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"            boolean isSameDoneState \u003d isDone \u003d\u003d o.isDone;"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"            boolean isSameTags \u003d Arrays.equals(tags, o.tags);"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"            return isSameName \u0026\u0026 isSameDoneState \u0026\u0026 isSameTags;"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":94}},{"path":"src/main/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * Represents the list of tasks."},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs an instance of TaskList."},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"     * Adds a task to the list."},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"     * @param task the task to be added."},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    public void add(Task task) {"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(task);"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"     * Removes a task from the list"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"     * @param index the index of the task."},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"     * @return the task that is removed."},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    public Task remove(int index) {"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size());"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        return tasks.remove(index);"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"     * Gets the size of the task list."},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"     * @return the size of the task list."},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    public int size() {"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        return tasks.size();"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"     * Gets the task from the task list that"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"     * corresponds to the index."},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"     * @param index the index of the task."},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"     * @return the task that corresponds to the index."},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"    public Task get(int index) {"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size());"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        return tasks.get(index);"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"    public String toString() {"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        return tasks.toString();"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof TaskList) {"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"            TaskList o \u003d (TaskList) obj;"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"            return tasks.equals(o.tasks);"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":74}},{"path":"src/main/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":" * Represents todo tasks."},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"public class Todo extends Task {"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a Todo instance with the name of the task."},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"     * @param name the name of the task."},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    public Todo(String name, String[] tags) {"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        super(name, tags);"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"     * Constructs a Todo instance with the name of the task"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"     * and the done state of the task."},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"     * @param name the name of the task."},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"     * @param isDone the done state of the task."},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"     * @param tags the tags associated with the task."},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    public Todo(String name, boolean isDone, String[] tags) {"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"        super(name, isDone, tags);"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"     * Returns the string meant for writing to disk."},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string meant for writing to disk."},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"    public String write() {"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(\"T,,%s\", super.write());"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        if (obj instanceof Todo) {"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"            Task o \u003d (Task) obj;"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"            return super.equals(o);"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        return false;"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":55}},{"path":"src/main/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.ui;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import java.util.stream.IntStream;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Task;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":" * Represents the ui of stuff."},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":" * @author Joshua Liang XingYa"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":" * @author joshualiang.xy@gmail.com"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":" * @version v0.3"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":" * @since v0.1"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":" */"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"public class Ui {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_GREETING \u003d \"Hello! I\u0027m Stuff\\n\""},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"            + \"What can I do for you?\";"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_NO_TASKS \u003d \"There are no tasks yet!\";"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_NO_TASKS_FOUND \u003d \"There are no tasks found!\";"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_TASKS_FOUND \u003d \"Here are the matching tasks \""},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"            + \"in your list:\\n\";"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_ADD_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"            + \"%s\\nNow you have %d %s in the list.\";"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_DONE_SUCCESS \u003d \"Nice! I\u0027ve marked \""},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"            + \"this task as done:\\n%s\";"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_REMOVE_SUCCESS \u003d \"Noted. I\u0027ve removed \""},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"            + \"this task:\\n%s\\nNow you have %d %s in the list.\";"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"    private static final String MESSAGE_ERROR \u003d \"Seems like something went wrong!\";"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"     * Returns the string bidding the user farewell."},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string bidding the user farewell."},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    public String printExitMessage() {"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        return MESSAGE_EXIT;"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"     * Returns the greeting message."},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"     * @return the greeting message."},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    public String printGreetingMessage() {"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"        return MESSAGE_GREETING;"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"     * Returns a string with all tasks listed"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the task list."},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string with all tasks listed."},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"    public String printTaskList(TaskList tasks) {"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        boolean isEmptyList \u003d tasks.size() \u003d\u003d 0;"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"        if (isEmptyList) {"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"            return MESSAGE_NO_TASKS;"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        return IntStream.range(0, tasks.size())"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"                .mapToObj(i -\u003e new StringBuilder("},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"                        String.format(\"%d. %s\\n\", i + 1, tasks.get(i))))"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"                .reduce(new StringBuilder(), StringBuilder::append)"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"                .toString();"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"     * Returns a string with all the tasks found via the find command."},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"     * @param tasks the tasks found via the find command."},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"     * @return a string with all the tasks found via the find command."},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"    public String printFoundList(TaskList tasks) {"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        boolean isEmptyList \u003d tasks.size() \u003d\u003d 0;"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        if (isEmptyList) {"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"            return MESSAGE_NO_TASKS_FOUND;"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        return IntStream.range(0, tasks.size())"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"                .mapToObj(i -\u003e new StringBuilder("},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"                        String.format(\"%d. %s\\n\", i + 1, tasks.get(i))))"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"                .reduce(new StringBuilder(MESSAGE_TASKS_FOUND),"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"                        StringBuilder::append)"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"                .toString();"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"     * Returns a string indicating a task has been added successfully."},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"     * @param task the task added."},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"     * @param taskNum the number of tasks in the list."},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"     * @return the string indicating a task has been added successfully."},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"    public String printAddSuccess(Task task, int taskNum) {"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"        assert(taskNum \u003e\u003d 0);"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"        boolean isSingular \u003d taskNum \u003d\u003d 1;"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(MESSAGE_ADD_SUCCESS,"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"                task, taskNum, isSingular ? \"task\" : \"tasks\");"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"     * Returns a string indicating a task has been marked as done."},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"     * @param task the task marked as done."},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"     * @return a string indicating a task has been marked as done."},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"    public String printDoneSuccess(Task task) {"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(MESSAGE_DONE_SUCCESS, task);"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"     * Returns a string indicating a task has been removed successfully."},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"     * @param removed the task removed."},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"     * @param taskNum the number of tasks in the list."},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"     * @return a string indicating a task has been removed successfully."},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"    public String printRemoveSuccess(Task removed, int taskNum) {"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":"        assert(taskNum \u003e\u003d 0);"},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"        boolean isSingular \u003d taskNum \u003d\u003d 1;"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"        return String.format(MESSAGE_REMOVE_SUCCESS,"},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"                removed, taskNum, isSingular ? \"task\" : \"tasks\");"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"     * Returns a string with a generic error message."},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"     * @return a string with a generic error message."},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"    public String printErrorMessage() {"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":"        return MESSAGE_ERROR;"},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":132}},{"path":"src/test/main/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"public class DeadlineCommandTest {"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private static final Ui UI \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    private static TaskList tasks;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"        Todo taskOne \u003d new Todo(\"task 1\", true, new String[0]);"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        Deadline taskTwo \u003d new Deadline("},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\","},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(193, 7, 26, 13, 50),"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"        Event taskThree \u003d new Event("},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"                \"task 3\", \"\", \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskOne);"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskTwo);"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskThree);"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"execute\")"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    class Execute {"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should add task to list and return add success string\")"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_deadlineTask_addSuccess() {"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"            String name \u003d \"test\";"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime time \u003d LocalDateTime.of(1032, 5, 2, 14, 12);"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            DeadlineCommand command \u003d new DeadlineCommand(name, time, new HashSet\u003c\u003e(), new String[0]);"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"            Deadline task \u003d new Deadline(name, time, new HashSet\u003c\u003e(), new String[0]);"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printAddSuccess(task, 4), command.execute(UI, tasks));"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(4, tasks.size());"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(task, tasks.get(3));"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should add alternate task to list and return add success string\")"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_altDeadlineTask_addSuccess() {"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"            String name \u003d \"test 2\";"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime time \u003d LocalDateTime.of(9032, 9, 22, 19, 42);"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"            DeadlineCommand command \u003d new DeadlineCommand("},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"                    name, time, new HashSet\u003c\u003e(), new String[0]);"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"            Deadline task \u003d new Deadline(name, time, new HashSet\u003c\u003e(), new String[0]);"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printAddSuccess(task, 4), command.execute(UI, tasks));"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(4, tasks.size());"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(task, tasks.get(3));"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"has command after\")"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"    class HasCommandAfter {"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true\")"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"        public void hasCommandAfter_noInput_true() {"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"            System.out.println(\"here\");"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(new DeadlineCommand("},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"                    \"test\","},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"                    LocalDateTime.of(1992, 10, 3, 19, 2),"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"                    new HashSet\u003c\u003e(),"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"                ).hasCommandAfter());"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":90}},{"path":"src/test/main/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidTaskException;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Task;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"public class DeleteCommandTest {"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    private static final Ui UI \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    private static TaskList tasks;"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        Todo taskOne \u003d new Todo(\"task 1\", true, new String[0]);"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"        Deadline taskTwo \u003d new Deadline("},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\","},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(193, 7, 26, 13, 50),"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        Event taskThree \u003d new Event("},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"                \"task 3\", \"\", \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskOne);"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskTwo);"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskThree);"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"execute\")"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"    class Execute {"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should remove task from list and return remove success string\")"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_index_removeSuccess() throws InvalidTaskException {"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"            DeleteCommand command \u003d new DeleteCommand(2);"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            Task task \u003d tasks.get(1);"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printRemoveSuccess(task, 2), command.execute(UI, tasks));"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(2, tasks.size());"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should remove alternate task from list and return remove success string\")"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_altIndex_removeSuccess() throws InvalidTaskException {"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"            DeleteCommand command \u003d new DeleteCommand(1);"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"            Task task \u003d tasks.get(0);"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printRemoveSuccess(task, 2), command.execute(UI, tasks));"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(2, tasks.size());"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw InvalidTaskException if task number out of index\")"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_invalidIndex_throwException() {"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"            DeleteCommand command \u003d new DeleteCommand(4);"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"            InvalidTaskException exception \u003d assertThrows("},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidTaskException.class, () -\u003e command.execute(UI, tasks));"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your selected task does not exist!\","},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"has command after\")"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"    class HasCommandAfter {"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true\")"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"        public void hasCommandAfter_noInput_true() {"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(new DeleteCommand(2).hasCommandAfter());"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":91}},{"path":"src/test/main/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidTaskException;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Task;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"public class DoneCommandTest {"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    private static final Ui UI \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    private static TaskList tasks;"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        Todo taskOne \u003d new Todo(\"task 1\", true, new String[0]);"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"        Deadline taskTwo \u003d new Deadline("},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\","},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(193, 7, 26, 13, 50),"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        Event taskThree \u003d new Event("},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"                \"task 3\", \"\", \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskOne);"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskTwo);"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskThree);"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"execute\")"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"    class Execute {"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should mark task in list as done and return done success string\")"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_index_doneSuccess() throws InvalidTaskException {"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"            DoneCommand command \u003d new DoneCommand(2);"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            Task task \u003d tasks.get(1);"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"            String doneSuccess \u003d command.execute(UI, tasks);"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printDoneSuccess(task), doneSuccess);"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should mark alternate task in list as done and return done success string\")"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_altIndex_doneSuccess() throws InvalidTaskException {"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"            DoneCommand command \u003d new DoneCommand(1);"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"            Task task \u003d tasks.get(0);"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            String doneSuccess \u003d command.execute(UI, tasks);"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printDoneSuccess(task), doneSuccess);"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw InvalidTaskException if task number out of index\")"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_invalidIndex_throwException() {"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"            DoneCommand command \u003d new DoneCommand(0);"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            InvalidTaskException exception \u003d assertThrows("},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidTaskException.class, () -\u003e command.execute(UI, tasks));"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your selected task does not exist!\","},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"has command after\")"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"    class HasCommandAfter {"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true\")"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"        public void hasCommandAfter_noInput_true() {"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(new DoneCommand(2).hasCommandAfter());"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":93}},{"path":"src/test/main/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"public class EventCommandTest {"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private static final Ui UI \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    private static TaskList tasks;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"        Todo taskOne \u003d new Todo(\"task 1\", true, new String[0]);"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        Deadline taskTwo \u003d new Deadline("},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\","},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(193, 7, 26, 13, 50),"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"        Event taskThree \u003d new Event("},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"                \"task 3\", \"\", \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskOne);"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskTwo);"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskThree);"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"execute\")"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    class Execute {"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should add task to list and return add success string\")"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_eventTask_addSuccess() {"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"            String name \u003d \"test\";"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime time \u003d LocalDateTime.of(1032, 5, 2, 14, 12);"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            EventCommand command \u003d new EventCommand("},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"                    name, time, new HashSet\u003c\u003e(), new String[0]);"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            Event task \u003d new Event(name, time, new HashSet\u003c\u003e(), new String[0]);"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printAddSuccess(task, 4), command.execute(UI, tasks));"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(4, tasks.size());"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(task, tasks.get(3));"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should add alternate task to list and return add success string\")"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_altEventTask_addSuccess() {"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"            String name \u003d \"test 2\";"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime time \u003d LocalDateTime.of(9032, 9, 22, 19, 42);"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            EventCommand command \u003d new EventCommand("},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"                    name, time, new HashSet\u003c\u003e(), new String[0]);"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"            Event task \u003d new Event(name, time, new HashSet\u003c\u003e(), new String[0]);"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printAddSuccess(task, 4), command.execute(UI, tasks));"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(4, tasks.size());"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(task, tasks.get(3));"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"has command after\")"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"    class HasCommandAfter {"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true\")"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"        public void hasCommandAfter_noInput_true() {"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(new EventCommand(\"test\","},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"                    LocalDateTime.of(1992, 10, 3, 19, 2),"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"                    new HashSet\u003c\u003e(),"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"                ).hasCommandAfter());"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":89}},{"path":"src/test/main/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"public class ExitCommandTest {"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"    private static final Ui UI \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    private static final TaskList tasks \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"execute\")"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    class Execute {"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return the exit message\")"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_noInput_exitMessage() {"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Bye. Hope to see you again soon!\","},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"                    new ExitCommand().execute(UI, tasks));"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"has command after\")"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"    class HasCommandAfter {"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true\")"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"        public void hasCommandAfter_noInput_true() {"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(new ExitCommand().hasCommandAfter());"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":37}},{"path":"src/test/main/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"public class FindCommandTest {"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private static final Ui UI \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    private static Todo taskOne;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    private static Deadline taskTwo;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    private static TaskList tasks;"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"        taskOne \u003d new Todo(\"task 1\", true, new String[] { \"abc\", \"134\" });"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        taskTwo \u003d new Deadline("},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\","},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(193, 7, 26, 13, 50),"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        Event taskThree \u003d new Event("},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"                \"task 3\", \"\", \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskOne);"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskTwo);"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskThree);"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"execute\")"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"    class Execute {"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with list of tasks found with search term\")"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_searchTerm_stringOfTasks() {"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printFoundList(tasks),"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"                    new FindCommand(\"task\").execute(UI, tasks));"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return an alternate string with an alternate search term\")"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_altSearchTerm_altStringOfTasks() {"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"            TaskList foundList \u003d new TaskList();"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"            foundList.add(taskTwo);"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printFoundList(foundList),"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"                    new FindCommand(\"2\").execute(UI, tasks));"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with list of tasks found \""},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"                + \"with multiple search terms\")"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_multipleSearchTerms_stringOfTasks() {"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"            TaskList foundList \u003d new TaskList();"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"            foundList.add(taskOne);"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printFoundList(foundList),"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"                    new FindCommand(\"ta 1\").execute(UI, tasks));"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printFoundList(foundList),"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"                    new FindCommand(\"1 ta\").execute(UI, tasks));"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a no tasks found string if no tasks are found\")"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_noTasksSearchTerm_noTasksFound() {"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"            TaskList foundList \u003d new TaskList();"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printFoundList(foundList),"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"                    new FindCommand(\"nothing\").execute(UI, tasks));"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a no tasks found if no string passed in\")"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_emptyString_noTasksFound() {"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"            TaskList foundList \u003d new TaskList();"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printFoundList(foundList),"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"                    new FindCommand(\"\").execute(UI, tasks));"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return task if search term is found in tags\")"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_tagTerm_stringOfTasks() {"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"            TaskList foundList \u003d new TaskList();"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"            foundList.add(taskOne);"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printFoundList(foundList),"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"                    new FindCommand(\"ab 34\").execute(UI, tasks));"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"has command after\")"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"    class HasCommandAfter {"},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true\")"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"        public void hasCommandAfter_noInput_true() {"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(new FindCommand(\"\").hasCommandAfter());"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":111}},{"path":"src/test/main/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"public class ListCommandTest {"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private static final Ui UI \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    private static Deadline taskTwo;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    private static TaskList tasks;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        Todo taskOne \u003d new Todo(\"task 1\", true, new String[0]);"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"        taskTwo \u003d new Deadline("},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\","},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(193, 7, 26, 13, 50),"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        Event taskThree \u003d new Event("},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"                \"task 3\", \"\", \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskOne);"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskTwo);"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskThree);"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"execute\")"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    class Execute {"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with list of tasks\")"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_taskList_stringOfTasks() {"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printTaskList(tasks),"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"                    new ListCommand().execute(UI, tasks));"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return an alternate string with an alternate list\")"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_altList_altStringOfTasks() {"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"            TaskList altList \u003d new TaskList();"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"            altList.add(taskTwo);"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printTaskList(altList),"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"                    new ListCommand().execute(UI, altList));"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a no tasks found string if list is empty\")"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_emptyList_noTasksFound() {"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            TaskList emptyList \u003d new TaskList();"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printTaskList(emptyList),"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"                    new ListCommand().execute(UI, emptyList));"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"has command after\")"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    class HasCommandAfter {"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true\")"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        public void hasCommandAfter_noInput_true() {"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(new ListCommand().hasCommandAfter());"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":80}},{"path":"src/test/main/command/OptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"public class OptionTest {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"recurring daily\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    class RecurringDaily {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate RECURRING_DAILY instance of Option from short alias\")"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromShortAlias_shortAlias_recurringDailyOption()"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(Option.RECURRING_DAILY, Option.getOptionFromShortAlias(\"rd\"));"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate RECURRING_DAILY instance of Option from full alias\")"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromFullAlias_fullAlias_recurringDailyOption()"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(Option.RECURRING_DAILY,"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"                    Option.getOptionFromFullAlias(\"recurring-daily\"));"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"recurring weekly\")"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"    class RecurringWeekly {"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate RECURRING_WEEKLY instance of Option from short alias\")"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromShortAlias_shortAlias_recurringWeeklyOption()"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(Option.RECURRING_WEEKLY, Option.getOptionFromShortAlias(\"rw\"));"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate RECURRING_WEEKLY instance of Option from full alias\")"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromFullAlias_fullAlias_recurringWeeklyOption()"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(Option.RECURRING_WEEKLY,"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"                    Option.getOptionFromFullAlias(\"recurring-weekly\"));"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"recurring monthly\")"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"    class RecurringMonthly {"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate RECURRING_MONTHLY instance of Option from short alias\")"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromShortAlias_shortAlias_recurringMonthlyOption()"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(Option.RECURRING_MONTHLY, Option.getOptionFromShortAlias(\"rm\"));"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate RECURRING_MONTHLY instance of Option from full alias\")"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromFullAlias_fullAlias_recurringWeeklyOption()"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(Option.RECURRING_MONTHLY,"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"                    Option.getOptionFromFullAlias(\"recurring-monthly\"));"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"recurring yearly\")"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    class RecurringYearly {"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate RECURRING_YEARLY instance of Option from short alias\")"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromShortAlias_shortAlias_recurringYearlyOption()"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(Option.RECURRING_YEARLY, Option.getOptionFromShortAlias(\"ry\"));"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate RECURRING_WEEKLY instance of Option from full alias\")"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromFullAlias_fullAlias_recurringYearlyOption()"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(Option.RECURRING_YEARLY,"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"                    Option.getOptionFromFullAlias(\"recurring-yearly\"));"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"invalid option\")"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"    class InvalidOption {"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw InvalidOptionException if option not found from short alias\")"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromShortAlias_notAlias_throwException() {"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"            InvalidOptionException e \u003d assertThrows(InvalidOptionException.class, () -\u003e"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"                    Option.getOptionFromShortAlias(\"test\"));"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your option of test does not exist!\", e.getMessage());"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw InvalidOptionException if option not found from full alias\")"},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"        public void getOptionFromFullAlias_notAlias_throwException() {"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"            InvalidOptionException e \u003d assertThrows(InvalidOptionException.class, () -\u003e"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"                    Option.getOptionFromFullAlias(\"test\"));"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your option of test does not exist!\", e.getMessage());"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":112}},{"path":"src/test/main/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.command;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.ui.Ui;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"public class TodoCommandTest {"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private static final Ui UI \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    private static TaskList tasks;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"        Todo taskOne \u003d new Todo(\"task 1\", true, new String[0]);"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        Deadline taskTwo \u003d new Deadline("},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\","},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(193, 7, 26, 13, 50),"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"        Event taskThree \u003d new Event("},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"                \"task 3\", \"\", \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskOne);"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskTwo);"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        tasks.add(taskThree);"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"execute\")"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    class Execute {"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should add task to list and return add success string\")"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_todoTask_addSuccess() {"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"            String name \u003d \"test\";"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"            TodoCommand command \u003d new TodoCommand(name, new String[0]);"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            Todo task \u003d new Todo(name, new String[0]);"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printAddSuccess(task, 4), command.execute(UI, tasks));"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(4, tasks.size());"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(task, tasks.get(3));"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should add alternate task to list and return add success string\")"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"        public void execute_altTodoTask_addSuccess() {"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"            String name \u003d \"test 2\";"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"            TodoCommand command \u003d new TodoCommand(name, new String[0]);"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"            Todo task \u003d new Todo(name, new String[0]);"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(UI.printAddSuccess(task, 4), command.execute(UI, tasks));"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(4, tasks.size());"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(task, tasks.get(3));"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"has command after\")"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"    class HasCommandAfter {"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true\")"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"        public void hasCommandAfter_noInput_true() {"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(new EventCommand("},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"                    \"test\","},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"                    LocalDateTime.of(1992, 10, 3, 19, 2),"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"                    new HashSet\u003c\u003e(),"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"                ).hasCommandAfter());"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":86}},{"path":"src/test/main/exception/EmptyMessageExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"public class EmptyMessageExceptionTest {"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"constructor\")"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    class Constructor {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with todo command\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_todoCommand_exception() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"            String command \u003d \"todo\";"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"The description of a todo cannot be empty.\","},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"                    new EmptyMessageException(command).getMessage());"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with event command\")"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_eventCommand_exception() {"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"            String command \u003d \"event\";"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"The description of a event cannot be empty.\","},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"                    new EmptyMessageException(command).getMessage());"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with deadline command\")"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_deadlineCommand_exception() {"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"            String command \u003d \"deadline\";"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"The description of a deadline cannot be empty.\","},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"                    new EmptyMessageException(command).getMessage());"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":37}},{"path":"src/test/main/exception/InvalidDateExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidDateExceptionTest {"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"constructor\")"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    class Constructor {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with message\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_message_exception() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"            String message \u003d \"test\";"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(message, new InvalidDateException(message).getMessage());"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with alt message\")"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_altMessage_exception() {"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"            String message \u003d \"different message\";"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(message, new InvalidDateException(message).getMessage());"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":27}},{"path":"src/test/main/exception/InvalidDeadlineFormatExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidDeadlineFormatExceptionTest {"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"constructor\")"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    class Constructor {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with default message\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_message_exception() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"A deadline needs to have this format:\\n\""},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"                            + \"\\\"task name\\\" /by \\\"task deadline\\\"\","},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"                    new InvalidDeadlineFormatException().getMessage());"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":21}},{"path":"src/test/main/exception/InvalidEventFormatExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidEventFormatExceptionTest {"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"constructor\")"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    class Constructor {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with default message\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_message_exception() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"An event needs to have this format:\\n\""},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"                            + \"\\\"task name\\\" /at \\\"event time\\\"\","},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"                    new InvalidEventFormatException().getMessage());"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":21}},{"path":"src/test/main/exception/InvalidOptionExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidOptionExceptionTest {"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"constructor\")"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    class Constructor {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with default message\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_alias_exception() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your option of test does not exist!\","},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"                    new InvalidOptionException(\"test\").getMessage());"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with alternate alias\")"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_altAlias_exception() {"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your option of alt does not exist!\","},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"                    new InvalidOptionException(\"alt\").getMessage());"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":27}},{"path":"src/test/main/exception/InvalidTaskExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"public class InvalidTaskExceptionTest {"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"constructor\")"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    class Constructor {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with default message\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_message_exception() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your selected task does not exist!\","},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"                    new InvalidTaskException().getMessage());"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":20}},{"path":"src/test/main/exception/StuffExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"public class StuffExceptionTest {"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"constructor\")"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    class Constructor {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with message\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_message_exception() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"            String message \u003d \"test\";"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(message, new StuffException(message).getMessage());"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with alt message\")"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_altMessage_exception() {"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"            String message \u003d \"different message\";"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(message, new StuffException(message).getMessage());"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":27}},{"path":"src/test/main/exception/UnknownCommandExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.exception;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"public class UnknownCommandExceptionTest {"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"constructor\")"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    class Constructor {"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should create exception instance with default message\")"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_message_exception() {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means.\","},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"                    new UnknownCommandException().getMessage());"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":20}},{"path":"src/test/main/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.parser;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Command;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.command.DeadlineCommand;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.command.DeleteCommand;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.command.DoneCommand;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.command.EventCommand;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"import main.command.ExitCommand;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"import main.command.FindCommand;"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"import main.command.ListCommand;"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Option;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"import main.command.TodoCommand;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.EmptyMessageException;"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidDateException;"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidDeadlineFormatException;"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidEventFormatException;"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidTaskException;"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.StuffException;"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.UnknownCommandException;"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"public class ParserTest {"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"bye command\")"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"    class Bye {"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate exit command object\")"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_byeCommand_objectExitCommand() throws StuffException {"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(new String[] { \"bye\" });"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new ExitCommand(), command);"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"list command\")"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    class List {"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate list command object\")"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_listCommand_objectListCommand() throws StuffException {"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(new String[] { \"list\" });"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new ListCommand(), command);"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"done command\")"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"    class Done {"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate done command object\")"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_doneCommand_objectDoneCommand() throws StuffException {"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(new String[] { \"done\", \"1\" });"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DoneCommand(1), command);"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate done command object with alt data\")"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_doneCommand_altDataDoneCommand() throws StuffException {"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(new String[] { \"done\", \"4123\" });"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DoneCommand(4123), command);"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if no second argument\")"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_doneCommandNoSecondArg_throwException() {"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"            InvalidTaskException exception \u003d assertThrows("},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidTaskException.class, () -\u003e"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] { \"done\" }));"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your selected task does not exist!\","},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"delete command\")"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"    class Delete {"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate delete command object\")"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deleteCommand_objectDeleteCommand() throws StuffException {"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(new String[] { \"delete\", \"1\" });"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DeleteCommand(1), command);"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate delete command object with alt data\")"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deleteCommand_altDataDeleteCommand() throws StuffException {"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(new String[] { \"delete\", \"12736\" });"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DeleteCommand(12736), command);"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if no second argument\")"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deleteCommandNoSecondArg_throwException() {"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"            InvalidTaskException exception \u003d assertThrows("},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidTaskException.class, () -\u003e"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] { \"delete\" }));"},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your selected task does not exist!\","},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"todo command\")"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"    class Todo {"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add todo object\")"},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_todoCommand_objectAddTodoCommand()"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(new String[] { \"todo\", \"name\" });"},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new TodoCommand(\"name\", new String[0]), command);"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add todo object with alt data\")"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_todoCommand_altDataAddTodoCommand() throws StuffException {"},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse(new String[] { \"todo\", \"another\" });"},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new TodoCommand(\"another\", new String[0]), command);"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add todo object with tags\")"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_todoCommandWithTags_objectAddTodoCommand()"},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] {"},{"lineNumber":134,"author":{"gitId":"joshualiangxy"},"content":"                        \"todo\","},{"lineNumber":135,"author":{"gitId":"joshualiangxy"},"content":"                        \"name\","},{"lineNumber":136,"author":{"gitId":"joshualiangxy"},"content":"                        \"#abc\","},{"lineNumber":137,"author":{"gitId":"joshualiangxy"},"content":"                        \"#123\""},{"lineNumber":138,"author":{"gitId":"joshualiangxy"},"content":"                    });"},{"lineNumber":139,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":140,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new TodoCommand("},{"lineNumber":141,"author":{"gitId":"joshualiangxy"},"content":"                            \"name\","},{"lineNumber":142,"author":{"gitId":"joshualiangxy"},"content":"                            new String[] { \"abc\", \"123\" }"},{"lineNumber":143,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":144,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":145,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":147,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":148,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add todo object with tags\")"},{"lineNumber":149,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_todoCommandWithEmptyTagsAndOptions_objectAddTodoCommand()"},{"lineNumber":150,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":151,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":152,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] {"},{"lineNumber":153,"author":{"gitId":"joshualiangxy"},"content":"                        \"todo\","},{"lineNumber":154,"author":{"gitId":"joshualiangxy"},"content":"                        \"-\","},{"lineNumber":155,"author":{"gitId":"joshualiangxy"},"content":"                        \"--\","},{"lineNumber":156,"author":{"gitId":"joshualiangxy"},"content":"                        \"name\","},{"lineNumber":157,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\","},{"lineNumber":158,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\""},{"lineNumber":159,"author":{"gitId":"joshualiangxy"},"content":"                    });"},{"lineNumber":160,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":161,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new TodoCommand(\"name\", new String[0]), command);"},{"lineNumber":162,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":164,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":165,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if no second argument\")"},{"lineNumber":166,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_todoCommandNoSecondArg_throwException() {"},{"lineNumber":167,"author":{"gitId":"joshualiangxy"},"content":"            EmptyMessageException exception \u003d assertThrows("},{"lineNumber":168,"author":{"gitId":"joshualiangxy"},"content":"                    EmptyMessageException.class, () -\u003e"},{"lineNumber":169,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] { \"todo\" }));"},{"lineNumber":170,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"The description of a todo cannot be empty.\","},{"lineNumber":171,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":172,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":175,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":176,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"deadline command\")"},{"lineNumber":177,"author":{"gitId":"joshualiangxy"},"content":"    class Deadline {"},{"lineNumber":178,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":179,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add deadline object\")"},{"lineNumber":180,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommand_objectAddDeadlineCommand()"},{"lineNumber":181,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":182,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":183,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"deadline\", \"name\", \"/by\", \"1400-1-31\", \"1453\" });"},{"lineNumber":184,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DeadlineCommand("},{"lineNumber":185,"author":{"gitId":"joshualiangxy"},"content":"                    \"name\","},{"lineNumber":186,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1400, 1, 31, 14, 53),"},{"lineNumber":187,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":188,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":189,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":190,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":191,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":193,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":194,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add recurring deadline object\")"},{"lineNumber":195,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandWithOptions_objectAddDeadlineCommand()"},{"lineNumber":196,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":197,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":198,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] {"},{"lineNumber":199,"author":{"gitId":"joshualiangxy"},"content":"                        \"deadline\","},{"lineNumber":200,"author":{"gitId":"joshualiangxy"},"content":"                        \"-rw\","},{"lineNumber":201,"author":{"gitId":"joshualiangxy"},"content":"                        \"name\","},{"lineNumber":202,"author":{"gitId":"joshualiangxy"},"content":"                        \"/by\","},{"lineNumber":203,"author":{"gitId":"joshualiangxy"},"content":"                        \"1400-1-31\","},{"lineNumber":204,"author":{"gitId":"joshualiangxy"},"content":"                        \"1453\""},{"lineNumber":205,"author":{"gitId":"joshualiangxy"},"content":"                    });"},{"lineNumber":206,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":207,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_WEEKLY);"},{"lineNumber":208,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":209,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DeadlineCommand("},{"lineNumber":210,"author":{"gitId":"joshualiangxy"},"content":"                    \"name\","},{"lineNumber":211,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1400, 1, 31, 14, 53),"},{"lineNumber":212,"author":{"gitId":"joshualiangxy"},"content":"                            options,"},{"lineNumber":213,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":214,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":215,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":216,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":218,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":219,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add deadline object with tags\")"},{"lineNumber":220,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandWithTags_objectAddDeadlineCommand()"},{"lineNumber":221,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":222,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":223,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] {"},{"lineNumber":224,"author":{"gitId":"joshualiangxy"},"content":"                        \"deadline\","},{"lineNumber":225,"author":{"gitId":"joshualiangxy"},"content":"                        \"-rm\","},{"lineNumber":226,"author":{"gitId":"joshualiangxy"},"content":"                        \"name\","},{"lineNumber":227,"author":{"gitId":"joshualiangxy"},"content":"                        \"/by\","},{"lineNumber":228,"author":{"gitId":"joshualiangxy"},"content":"                        \"1400-1-31\","},{"lineNumber":229,"author":{"gitId":"joshualiangxy"},"content":"                        \"1453\","},{"lineNumber":230,"author":{"gitId":"joshualiangxy"},"content":"                        \"#abc\","},{"lineNumber":231,"author":{"gitId":"joshualiangxy"},"content":"                        \"#123\""},{"lineNumber":232,"author":{"gitId":"joshualiangxy"},"content":"                    });"},{"lineNumber":233,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":234,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_MONTHLY);"},{"lineNumber":235,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":236,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DeadlineCommand("},{"lineNumber":237,"author":{"gitId":"joshualiangxy"},"content":"                            \"name\","},{"lineNumber":238,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1400, 1, 31, 14, 53),"},{"lineNumber":239,"author":{"gitId":"joshualiangxy"},"content":"                            options,"},{"lineNumber":240,"author":{"gitId":"joshualiangxy"},"content":"                            new String[] { \"abc\", \"123\" }"},{"lineNumber":241,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":242,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":243,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":245,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":246,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add deadline object without extra options or tags\")"},{"lineNumber":247,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandWithEmptyTagsAndOptions_objectAddDeadlineCommand()"},{"lineNumber":248,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":249,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":250,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] {"},{"lineNumber":251,"author":{"gitId":"joshualiangxy"},"content":"                        \"deadline\","},{"lineNumber":252,"author":{"gitId":"joshualiangxy"},"content":"                        \"-\","},{"lineNumber":253,"author":{"gitId":"joshualiangxy"},"content":"                        \"--\","},{"lineNumber":254,"author":{"gitId":"joshualiangxy"},"content":"                        \"-\","},{"lineNumber":255,"author":{"gitId":"joshualiangxy"},"content":"                        \"name\","},{"lineNumber":256,"author":{"gitId":"joshualiangxy"},"content":"                        \"/by\","},{"lineNumber":257,"author":{"gitId":"joshualiangxy"},"content":"                        \"1400-1-31\","},{"lineNumber":258,"author":{"gitId":"joshualiangxy"},"content":"                        \"1453\","},{"lineNumber":259,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\","},{"lineNumber":260,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\","},{"lineNumber":261,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\","},{"lineNumber":262,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\""},{"lineNumber":263,"author":{"gitId":"joshualiangxy"},"content":"                    });"},{"lineNumber":264,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":265,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DeadlineCommand("},{"lineNumber":266,"author":{"gitId":"joshualiangxy"},"content":"                            \"name\","},{"lineNumber":267,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1400, 1, 31, 14, 53),"},{"lineNumber":268,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":269,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":270,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":271,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":272,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":273,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":274,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":275,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add deadline object with alt data\")"},{"lineNumber":276,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommand_altDataAddDeadlineCommand()"},{"lineNumber":277,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":278,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":279,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"deadline\", \"test\", \"/by\", \"1285-5-3\", \"2144\" });"},{"lineNumber":280,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new DeadlineCommand("},{"lineNumber":281,"author":{"gitId":"joshualiangxy"},"content":"                    \"test\","},{"lineNumber":282,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1285, 5, 3, 21, 44),"},{"lineNumber":283,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":284,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":285,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":286,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":287,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":288,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":289,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":290,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if no second argument\")"},{"lineNumber":291,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandNoSecondArg_throwException() {"},{"lineNumber":292,"author":{"gitId":"joshualiangxy"},"content":"            EmptyMessageException exception \u003d assertThrows("},{"lineNumber":293,"author":{"gitId":"joshualiangxy"},"content":"                    EmptyMessageException.class, () -\u003e"},{"lineNumber":294,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] { \"deadline\" }));"},{"lineNumber":295,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"The description of a deadline cannot be empty.\","},{"lineNumber":296,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":297,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":298,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":299,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":300,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if deadline format is incorrect\")"},{"lineNumber":301,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandWrongFormat_throwException() {"},{"lineNumber":302,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDeadlineFormatException exception \u003d assertThrows("},{"lineNumber":303,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDeadlineFormatException.class, () -\u003e"},{"lineNumber":304,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] { \"deadline\", \"name\" }));"},{"lineNumber":305,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"A deadline needs to have this format:\\n\""},{"lineNumber":306,"author":{"gitId":"joshualiangxy"},"content":"                            + \"\\\"task name\\\" /by \\\"task deadline\\\"\","},{"lineNumber":307,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":308,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":310,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":311,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if time format has no spacing\")"},{"lineNumber":312,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandNoSpacingTimeFormat_throwException() {"},{"lineNumber":313,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":314,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":315,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":316,"author":{"gitId":"joshualiangxy"},"content":"                                \"deadline\","},{"lineNumber":317,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":318,"author":{"gitId":"joshualiangxy"},"content":"                                \"/by\","},{"lineNumber":319,"author":{"gitId":"joshualiangxy"},"content":"                                \"1931-3-30\""},{"lineNumber":320,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":321,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your date needs to\""},{"lineNumber":322,"author":{"gitId":"joshualiangxy"},"content":"                            + \" have this format:\\n\\\"YYYY-MM-DD HHMM\\\"\","},{"lineNumber":323,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":324,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":325,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":326,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":327,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if date format is not YYYY-MM-DD\")"},{"lineNumber":328,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandWrongDateFormat_throwException() {"},{"lineNumber":329,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":330,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":331,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":332,"author":{"gitId":"joshualiangxy"},"content":"                                \"deadline\","},{"lineNumber":333,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":334,"author":{"gitId":"joshualiangxy"},"content":"                                \"/by\","},{"lineNumber":335,"author":{"gitId":"joshualiangxy"},"content":"                                \"1992-03\","},{"lineNumber":336,"author":{"gitId":"joshualiangxy"},"content":"                                \"1923\""},{"lineNumber":337,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":338,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your date needs to\""},{"lineNumber":339,"author":{"gitId":"joshualiangxy"},"content":"                            + \" have this format:\\n\\\"YYYY-MM-DD\\\"\","},{"lineNumber":340,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":341,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":342,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":343,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":344,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if time format is not HHMM\")"},{"lineNumber":345,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandWrongTimeFormat_throwException() {"},{"lineNumber":346,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":347,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":348,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":349,"author":{"gitId":"joshualiangxy"},"content":"                                \"deadline\","},{"lineNumber":350,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":351,"author":{"gitId":"joshualiangxy"},"content":"                                \"/by\","},{"lineNumber":352,"author":{"gitId":"joshualiangxy"},"content":"                                \"1992-03-12\","},{"lineNumber":353,"author":{"gitId":"joshualiangxy"},"content":"                                \"12394\""},{"lineNumber":354,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":355,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your time needs to have this format:\\n\\\"HHMM\\\"\","},{"lineNumber":356,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":357,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":358,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":359,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":360,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if time not in integers\")"},{"lineNumber":361,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandNonIntegerTime_throwException() {"},{"lineNumber":362,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":363,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":364,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":365,"author":{"gitId":"joshualiangxy"},"content":"                                \"deadline\","},{"lineNumber":366,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":367,"author":{"gitId":"joshualiangxy"},"content":"                                \"/by\","},{"lineNumber":368,"author":{"gitId":"joshualiangxy"},"content":"                                \"abc-12-1\","},{"lineNumber":369,"author":{"gitId":"joshualiangxy"},"content":"                                \"1923\""},{"lineNumber":370,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":371,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Please check that you\u0027ve entered \""},{"lineNumber":372,"author":{"gitId":"joshualiangxy"},"content":"                            + \"the date and time correctly\","},{"lineNumber":373,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":374,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":375,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":376,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":377,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if time is not possible\")"},{"lineNumber":378,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_deadlineCommandImpossibleTime_throwException() {"},{"lineNumber":379,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":380,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":381,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":382,"author":{"gitId":"joshualiangxy"},"content":"                                \"deadline\","},{"lineNumber":383,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":384,"author":{"gitId":"joshualiangxy"},"content":"                                \"/by\","},{"lineNumber":385,"author":{"gitId":"joshualiangxy"},"content":"                                \"1998-12-45\","},{"lineNumber":386,"author":{"gitId":"joshualiangxy"},"content":"                                \"1923\""},{"lineNumber":387,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":388,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Please check that you\u0027ve entered\""},{"lineNumber":389,"author":{"gitId":"joshualiangxy"},"content":"                            + \" the date and time correctly\","},{"lineNumber":390,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":391,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":393,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":394,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":395,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"event command\")"},{"lineNumber":396,"author":{"gitId":"joshualiangxy"},"content":"    class Event {"},{"lineNumber":397,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":398,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add event object\")"},{"lineNumber":399,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommand_objectAddEventCommand()"},{"lineNumber":400,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":401,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":402,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"event\", \"name\", \"/at\", \"1400-1-31\", \"1453\" });"},{"lineNumber":403,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new EventCommand("},{"lineNumber":404,"author":{"gitId":"joshualiangxy"},"content":"                    \"name\","},{"lineNumber":405,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1400, 1, 31, 14, 53),"},{"lineNumber":406,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":407,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":408,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":409,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":410,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":411,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":412,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":413,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add recurring event object\")"},{"lineNumber":414,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandWithOptions_objectAddEventCommand()"},{"lineNumber":415,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":416,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":417,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] {"},{"lineNumber":418,"author":{"gitId":"joshualiangxy"},"content":"                        \"event\","},{"lineNumber":419,"author":{"gitId":"joshualiangxy"},"content":"                        \"-ry\","},{"lineNumber":420,"author":{"gitId":"joshualiangxy"},"content":"                        \"name\","},{"lineNumber":421,"author":{"gitId":"joshualiangxy"},"content":"                        \"/at\","},{"lineNumber":422,"author":{"gitId":"joshualiangxy"},"content":"                        \"1400-1-31\","},{"lineNumber":423,"author":{"gitId":"joshualiangxy"},"content":"                        \"1453\""},{"lineNumber":424,"author":{"gitId":"joshualiangxy"},"content":"                    });"},{"lineNumber":425,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":426,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_YEARLY);"},{"lineNumber":427,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":428,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new EventCommand("},{"lineNumber":429,"author":{"gitId":"joshualiangxy"},"content":"                    \"name\","},{"lineNumber":430,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1400, 1, 31, 14, 53),"},{"lineNumber":431,"author":{"gitId":"joshualiangxy"},"content":"                            options,"},{"lineNumber":432,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":433,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":434,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":435,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":436,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":437,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":438,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add event object with tags\")"},{"lineNumber":439,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandWithTags_objectAddEventCommand()"},{"lineNumber":440,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":441,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":442,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] {"},{"lineNumber":443,"author":{"gitId":"joshualiangxy"},"content":"                        \"event\","},{"lineNumber":444,"author":{"gitId":"joshualiangxy"},"content":"                        \"-ry\","},{"lineNumber":445,"author":{"gitId":"joshualiangxy"},"content":"                        \"name\","},{"lineNumber":446,"author":{"gitId":"joshualiangxy"},"content":"                        \"/at\","},{"lineNumber":447,"author":{"gitId":"joshualiangxy"},"content":"                        \"1400-1-31\","},{"lineNumber":448,"author":{"gitId":"joshualiangxy"},"content":"                        \"1453\","},{"lineNumber":449,"author":{"gitId":"joshualiangxy"},"content":"                        \"#abc\","},{"lineNumber":450,"author":{"gitId":"joshualiangxy"},"content":"                        \"#123\""},{"lineNumber":451,"author":{"gitId":"joshualiangxy"},"content":"                    });"},{"lineNumber":452,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":453,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_YEARLY);"},{"lineNumber":454,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":455,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new EventCommand("},{"lineNumber":456,"author":{"gitId":"joshualiangxy"},"content":"                            \"name\","},{"lineNumber":457,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1400, 1, 31, 14, 53),"},{"lineNumber":458,"author":{"gitId":"joshualiangxy"},"content":"                            options,"},{"lineNumber":459,"author":{"gitId":"joshualiangxy"},"content":"                            new String[] { \"abc\", \"123\" }"},{"lineNumber":460,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":461,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":462,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":463,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":464,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":465,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add event object without extra options or tags\")"},{"lineNumber":466,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandWithEmptyTagsAndOptions_objectAddEventCommand()"},{"lineNumber":467,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":468,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":469,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] {"},{"lineNumber":470,"author":{"gitId":"joshualiangxy"},"content":"                        \"event\","},{"lineNumber":471,"author":{"gitId":"joshualiangxy"},"content":"                        \"-\","},{"lineNumber":472,"author":{"gitId":"joshualiangxy"},"content":"                        \"--\","},{"lineNumber":473,"author":{"gitId":"joshualiangxy"},"content":"                        \"-\","},{"lineNumber":474,"author":{"gitId":"joshualiangxy"},"content":"                        \"name\","},{"lineNumber":475,"author":{"gitId":"joshualiangxy"},"content":"                        \"/at\","},{"lineNumber":476,"author":{"gitId":"joshualiangxy"},"content":"                        \"1400-1-31\","},{"lineNumber":477,"author":{"gitId":"joshualiangxy"},"content":"                        \"1453\","},{"lineNumber":478,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\","},{"lineNumber":479,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\","},{"lineNumber":480,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\","},{"lineNumber":481,"author":{"gitId":"joshualiangxy"},"content":"                        \"#\""},{"lineNumber":482,"author":{"gitId":"joshualiangxy"},"content":"                    });"},{"lineNumber":483,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":484,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new EventCommand("},{"lineNumber":485,"author":{"gitId":"joshualiangxy"},"content":"                            \"name\","},{"lineNumber":486,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1400, 1, 31, 14, 53),"},{"lineNumber":487,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":488,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":489,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":490,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":491,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":492,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":493,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":494,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate add event object with alt data\")"},{"lineNumber":495,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommand_altDataAddEventCommand()"},{"lineNumber":496,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":497,"author":{"gitId":"joshualiangxy"},"content":"            Command command \u003d Parser.parse("},{"lineNumber":498,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"event\", \"test\", \"/at\", \"1285-5-3\", \"2144\" });"},{"lineNumber":499,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new EventCommand("},{"lineNumber":500,"author":{"gitId":"joshualiangxy"},"content":"                    \"test\","},{"lineNumber":501,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(1285, 5, 3, 21, 44),"},{"lineNumber":502,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":503,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":504,"author":{"gitId":"joshualiangxy"},"content":"                    ),"},{"lineNumber":505,"author":{"gitId":"joshualiangxy"},"content":"                    command);"},{"lineNumber":506,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":507,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":508,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":509,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if no second argument\")"},{"lineNumber":510,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandNoSecondArg_throwException() {"},{"lineNumber":511,"author":{"gitId":"joshualiangxy"},"content":"            EmptyMessageException exception \u003d assertThrows("},{"lineNumber":512,"author":{"gitId":"joshualiangxy"},"content":"                    EmptyMessageException.class, () -\u003e"},{"lineNumber":513,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] { \"event\" }));"},{"lineNumber":514,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"The description of a event cannot be empty.\","},{"lineNumber":515,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":516,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":517,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":518,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":519,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if event format is incorrect\")"},{"lineNumber":520,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandWrongFormat_throwException() {"},{"lineNumber":521,"author":{"gitId":"joshualiangxy"},"content":"            InvalidEventFormatException exception \u003d assertThrows("},{"lineNumber":522,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidEventFormatException.class, () -\u003e"},{"lineNumber":523,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] { \"event\", \"name\" }));"},{"lineNumber":524,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"An event needs to have this format:\\n\""},{"lineNumber":525,"author":{"gitId":"joshualiangxy"},"content":"                            + \"\\\"task name\\\" /at \\\"event time\\\"\","},{"lineNumber":526,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":527,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":528,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":529,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":530,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if time format has no spacing\")"},{"lineNumber":531,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandTimeNoSpacing_throwException() {"},{"lineNumber":532,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":533,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":534,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":535,"author":{"gitId":"joshualiangxy"},"content":"                                \"event\","},{"lineNumber":536,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":537,"author":{"gitId":"joshualiangxy"},"content":"                                \"/at\","},{"lineNumber":538,"author":{"gitId":"joshualiangxy"},"content":"                                \"1931-3-30\""},{"lineNumber":539,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":540,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your date needs to\""},{"lineNumber":541,"author":{"gitId":"joshualiangxy"},"content":"                            + \" have this format:\\n\\\"YYYY-MM-DD HHMM\\\"\","},{"lineNumber":542,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":543,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":544,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":545,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":546,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if date format is not YYYY-MM-DD\")"},{"lineNumber":547,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandWrongDateFormat_throwException() {"},{"lineNumber":548,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":549,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":550,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":551,"author":{"gitId":"joshualiangxy"},"content":"                                \"event\","},{"lineNumber":552,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":553,"author":{"gitId":"joshualiangxy"},"content":"                                \"/at\","},{"lineNumber":554,"author":{"gitId":"joshualiangxy"},"content":"                                \"1992-03\","},{"lineNumber":555,"author":{"gitId":"joshualiangxy"},"content":"                                \"1923\""},{"lineNumber":556,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":557,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your date needs to have this format:\\n\\\"YYYY-MM-DD\\\"\","},{"lineNumber":558,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":559,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":560,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":561,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":562,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if time format is not HHMM\")"},{"lineNumber":563,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandWrongTimeFormat_throwException() {"},{"lineNumber":564,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":565,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":566,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":567,"author":{"gitId":"joshualiangxy"},"content":"                                \"event\","},{"lineNumber":568,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":569,"author":{"gitId":"joshualiangxy"},"content":"                                \"/at\","},{"lineNumber":570,"author":{"gitId":"joshualiangxy"},"content":"                                \"1992-03-12\","},{"lineNumber":571,"author":{"gitId":"joshualiangxy"},"content":"                                \"12394\""},{"lineNumber":572,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":573,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Your time needs to\""},{"lineNumber":574,"author":{"gitId":"joshualiangxy"},"content":"                            + \" have this format:\\n\\\"HHMM\\\"\","},{"lineNumber":575,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":576,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":577,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":578,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":579,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if time not in integers\")"},{"lineNumber":580,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandNonIntegerTime_throwException() {"},{"lineNumber":581,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":582,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":583,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":584,"author":{"gitId":"joshualiangxy"},"content":"                                \"event\","},{"lineNumber":585,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":586,"author":{"gitId":"joshualiangxy"},"content":"                                \"/at\","},{"lineNumber":587,"author":{"gitId":"joshualiangxy"},"content":"                                \"abc-12-1\","},{"lineNumber":588,"author":{"gitId":"joshualiangxy"},"content":"                                \"1923\""},{"lineNumber":589,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":590,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Please check that you\u0027ve entered \""},{"lineNumber":591,"author":{"gitId":"joshualiangxy"},"content":"                            + \"the date and time correctly\","},{"lineNumber":592,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":593,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":594,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":595,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":596,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception if time is not possible\")"},{"lineNumber":597,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_eventCommandImpossibleTime_throwException() {"},{"lineNumber":598,"author":{"gitId":"joshualiangxy"},"content":"            InvalidDateException exception \u003d assertThrows("},{"lineNumber":599,"author":{"gitId":"joshualiangxy"},"content":"                    InvalidDateException.class, () -\u003e"},{"lineNumber":600,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] {"},{"lineNumber":601,"author":{"gitId":"joshualiangxy"},"content":"                                \"event\","},{"lineNumber":602,"author":{"gitId":"joshualiangxy"},"content":"                                \"name\","},{"lineNumber":603,"author":{"gitId":"joshualiangxy"},"content":"                                \"/at\","},{"lineNumber":604,"author":{"gitId":"joshualiangxy"},"content":"                                \"1998-12-45\","},{"lineNumber":605,"author":{"gitId":"joshualiangxy"},"content":"                                \"1923\""},{"lineNumber":606,"author":{"gitId":"joshualiangxy"},"content":"                            }));"},{"lineNumber":607,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Please check that you\u0027ve entered \""},{"lineNumber":608,"author":{"gitId":"joshualiangxy"},"content":"                            + \"the date and time correctly\","},{"lineNumber":609,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":610,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":611,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":612,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":613,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":614,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"find command\")"},{"lineNumber":615,"author":{"gitId":"joshualiangxy"},"content":"    class Find {"},{"lineNumber":616,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":617,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate find command object\")"},{"lineNumber":618,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_findCommand_objectFindCommand() throws StuffException {"},{"lineNumber":619,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new FindCommand(\"test\"),"},{"lineNumber":620,"author":{"gitId":"joshualiangxy"},"content":"                    Parser.parse(new String[] { \"find\", \"test\" }));"},{"lineNumber":621,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":622,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":623,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":624,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate find command object\")"},{"lineNumber":625,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_findCommand_altDataFindCommand() throws StuffException {"},{"lineNumber":626,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new FindCommand(\"test test2 test3\"),"},{"lineNumber":627,"author":{"gitId":"joshualiangxy"},"content":"                    Parser.parse(new String[] { \"find\", \"test\", \"test2\", \"test3\" }));"},{"lineNumber":628,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":629,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":630,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":631,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should generate find command object with empty search term\")"},{"lineNumber":632,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_findCommand_emptySearchTermFindCommand()"},{"lineNumber":633,"author":{"gitId":"joshualiangxy"},"content":"                throws StuffException {"},{"lineNumber":634,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new FindCommand(\"\"),"},{"lineNumber":635,"author":{"gitId":"joshualiangxy"},"content":"                    Parser.parse(new String[] { \"find\" }));"},{"lineNumber":636,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":637,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":638,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":639,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":640,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"unknown command\")"},{"lineNumber":641,"author":{"gitId":"joshualiangxy"},"content":"    class Unknown {"},{"lineNumber":642,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":643,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should throw exception\")"},{"lineNumber":644,"author":{"gitId":"joshualiangxy"},"content":"        public void parse_unknownCommand_throwException() {"},{"lineNumber":645,"author":{"gitId":"joshualiangxy"},"content":"            UnknownCommandException exception \u003d assertThrows("},{"lineNumber":646,"author":{"gitId":"joshualiangxy"},"content":"                    UnknownCommandException.class, () -\u003e"},{"lineNumber":647,"author":{"gitId":"joshualiangxy"},"content":"                            Parser.parse(new String[] { \"yeet\" }));"},{"lineNumber":648,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means.\","},{"lineNumber":649,"author":{"gitId":"joshualiangxy"},"content":"                    exception.getMessage());"},{"lineNumber":650,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":651,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":652,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":652}},{"path":"src/test/main/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Option;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"public class DeadlineTest {"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"    private static final LocalDateTime NOW \u003d LocalDateTime.now();"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    private static Deadline deadlineOne;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private static Deadline deadlineTwo;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"        deadlineOne \u003d new Deadline("},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"                \"task 1\","},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(1993, 12, 6, 10, 10),"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"        deadlineTwo \u003d new Deadline("},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\", \"\", \"4198-01-13T23:39\", true, new String[0]);"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"recurrence\")"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"    class Recurrence {"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should reset done state and push back deadline to one day away\")"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_recurringDaily_deadline() throws InvalidOptionException {"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"            Deadline test \u003d new Deadline(\"task 2\", \"rd\","},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"                    \"2020-09-09T14:39\", true, new String[0]);"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime date \u003d LocalDateTime.of(2020, 9, 9, 14, 39);"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_DAILY);"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new Deadline("},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"                    date.plusDays(date.until(NOW, ChronoUnit.DAYS) + 1),"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"            ), test);"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should reset done state and push back deadline to one week away\")"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_recurringWeekly_deadline() throws InvalidOptionException {"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"            Deadline test \u003d new Deadline(\"task 2\", \"rw\","},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"                    \"2020-09-09T14:39\", true, new String[0]);"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime date \u003d LocalDateTime.of(2020, 9, 9, 14, 39);"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_WEEKLY);"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new Deadline("},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"                    date.plusWeeks(date.until(NOW, ChronoUnit.WEEKS) + 1),"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"            ), test);"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should reset done state and push back deadline to one month away\")"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_recurringMonthly_deadline() throws InvalidOptionException {"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"            Deadline test \u003d new Deadline(\"task 2\", \"rm\","},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"                    \"2020-09-09T14:39\", true, new String[0]);"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime date \u003d LocalDateTime.of(2020, 9, 9, 14, 39);"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_MONTHLY);"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new Deadline("},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"                    date.plusMonths(date.until(NOW, ChronoUnit.MONTHS) + 1),"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"            ), test);"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should reset done state and push back deadline to one year away\")"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_recurringYearly_deadline() throws InvalidOptionException {"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"            Deadline test \u003d new Deadline(\"task 2\", \"ry\","},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"                    \"2020-09-09T14:39\", true, new String[0]);"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime date \u003d LocalDateTime.of(2020, 9, 9, 14, 39);"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_YEARLY);"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new Deadline("},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"                    date.plusYears(date.until(NOW, ChronoUnit.YEARS) + 1),"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"            ), test);"},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"write\")"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"    class Write {"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string meant for writing to disk\")"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"        public void write_deadlineTask_string() {"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"D,,1993-12-06T10:10,0,,task 1\\n\","},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"                    deadlineOne.write());"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string meant for writing to disk with alt deadline\")"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":"        public void write_altDeadlineTask_altString() {"},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"D,,4198-01-13T23:39,1,,task 2\\n\","},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"                    deadlineTwo.write());"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with the recurrence alias\")"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"        public void write_recurringDeadlineTask_string() throws InvalidOptionException {"},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"            Deadline test \u003d new Deadline("},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\", \"rw\", \"4000-11-23T12:44\", true, new String[0]);"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"D,rw,4000-11-23T12:44,1,,task 3\\n\","},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"                    test.write());"},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":135,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":136,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with tags\")"},{"lineNumber":137,"author":{"gitId":"joshualiangxy"},"content":"        public void write_taggedDeadlineTask_string() throws InvalidOptionException {"},{"lineNumber":138,"author":{"gitId":"joshualiangxy"},"content":"            Deadline test \u003d new Deadline("},{"lineNumber":139,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":140,"author":{"gitId":"joshualiangxy"},"content":"                    \"rw\","},{"lineNumber":141,"author":{"gitId":"joshualiangxy"},"content":"                    \"4000-11-23T12:44\","},{"lineNumber":142,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":143,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"happy\" }"},{"lineNumber":144,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":145,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":146,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"D,rw,4000-11-23T12:44,1,happy,task 3\\n\","},{"lineNumber":147,"author":{"gitId":"joshualiangxy"},"content":"                    test.write());"},{"lineNumber":148,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":150,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":151,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return an alternate string with tags\")"},{"lineNumber":152,"author":{"gitId":"joshualiangxy"},"content":"        public void write_taggedAltDeadlineTask_string() throws InvalidOptionException {"},{"lineNumber":153,"author":{"gitId":"joshualiangxy"},"content":"            Deadline test \u003d new Deadline("},{"lineNumber":154,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":155,"author":{"gitId":"joshualiangxy"},"content":"                    \"rw\","},{"lineNumber":156,"author":{"gitId":"joshualiangxy"},"content":"                    \"4000-11-23T12:44\","},{"lineNumber":157,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":158,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"abc\", \"123\", \"apple\" }"},{"lineNumber":159,"author":{"gitId":"joshualiangxy"},"content":"                );"},{"lineNumber":160,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":161,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"D,rw,4000-11-23T12:44,1,abc;123;apple,task 3\\n\","},{"lineNumber":162,"author":{"gitId":"joshualiangxy"},"content":"                    test.write());"},{"lineNumber":163,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":166,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":167,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"string representation\")"},{"lineNumber":168,"author":{"gitId":"joshualiangxy"},"content":"    class StringRepresentation {"},{"lineNumber":169,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":170,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string representation of the deadline instance\")"},{"lineNumber":171,"author":{"gitId":"joshualiangxy"},"content":"        public void toString_deadlineTask_string() {"},{"lineNumber":172,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"[D][\\u2718] task 1\\n(by: Monday, 06 Dec 1993, 10:10AM)\","},{"lineNumber":173,"author":{"gitId":"joshualiangxy"},"content":"                    deadlineOne.toString());"},{"lineNumber":174,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":176,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":177,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string representation of an alternate deadline instance\")"},{"lineNumber":178,"author":{"gitId":"joshualiangxy"},"content":"        public void toString_altDeadlineTask_altString() {"},{"lineNumber":179,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"[D][\\u2713] task 2\\n(by: Saturday, 13 Jan 4198, 11:39PM)\","},{"lineNumber":180,"author":{"gitId":"joshualiangxy"},"content":"                    deadlineTwo.toString());"},{"lineNumber":181,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":184,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":185,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"equals\")"},{"lineNumber":186,"author":{"gitId":"joshualiangxy"},"content":"    class Equal {"},{"lineNumber":187,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":188,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true for a deadline with the same name, deadline and done state\")"},{"lineNumber":189,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_deadline_true() throws InvalidOptionException {"},{"lineNumber":190,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(deadlineOne.equals("},{"lineNumber":191,"author":{"gitId":"joshualiangxy"},"content":"                    new Deadline("},{"lineNumber":192,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 1\","},{"lineNumber":193,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":194,"author":{"gitId":"joshualiangxy"},"content":"                            \"1993-12-06T10:10\","},{"lineNumber":195,"author":{"gitId":"joshualiangxy"},"content":"                            false,"},{"lineNumber":196,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":197,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":198,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":200,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":201,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true for an alt deadline with the same \""},{"lineNumber":202,"author":{"gitId":"joshualiangxy"},"content":"                + \"name, deadline and done state\")"},{"lineNumber":203,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altDeadline_true() throws InvalidOptionException {"},{"lineNumber":204,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(deadlineTwo.equals("},{"lineNumber":205,"author":{"gitId":"joshualiangxy"},"content":"                    new Deadline("},{"lineNumber":206,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 2\","},{"lineNumber":207,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":208,"author":{"gitId":"joshualiangxy"},"content":"                            \"4198-01-13T23:39\","},{"lineNumber":209,"author":{"gitId":"joshualiangxy"},"content":"                            true,"},{"lineNumber":210,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":211,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":212,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":214,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":215,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for a non deadline tasks\")"},{"lineNumber":216,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_nonDeadline_false() throws InvalidOptionException {"},{"lineNumber":217,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(deadlineOne.equals(new Task(\"task 1\", new String[0])));"},{"lineNumber":218,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(deadlineTwo.equals(new Todo(\"task 2\", new String[0])));"},{"lineNumber":219,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(deadlineTwo.equals("},{"lineNumber":220,"author":{"gitId":"joshualiangxy"},"content":"                    new Event("},{"lineNumber":221,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 2\","},{"lineNumber":222,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":223,"author":{"gitId":"joshualiangxy"},"content":"                            \"4198-01-13T23:39\","},{"lineNumber":224,"author":{"gitId":"joshualiangxy"},"content":"                            true,"},{"lineNumber":225,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":226,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":227,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":228,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":229,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":230,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for an deadline with different name\")"},{"lineNumber":231,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_deadline_false() throws InvalidOptionException {"},{"lineNumber":232,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(deadlineOne.equals("},{"lineNumber":233,"author":{"gitId":"joshualiangxy"},"content":"                    new Deadline("},{"lineNumber":234,"author":{"gitId":"joshualiangxy"},"content":"                            \"different name\","},{"lineNumber":235,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":236,"author":{"gitId":"joshualiangxy"},"content":"                            \"1993-12-06T10:10\","},{"lineNumber":237,"author":{"gitId":"joshualiangxy"},"content":"                            false,"},{"lineNumber":238,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":239,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":240,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":242,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":243,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for an deadline with different done state\")"},{"lineNumber":244,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altDeadline_false() throws InvalidOptionException {"},{"lineNumber":245,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(deadlineOne.equals("},{"lineNumber":246,"author":{"gitId":"joshualiangxy"},"content":"                    new Deadline("},{"lineNumber":247,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 1\","},{"lineNumber":248,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":249,"author":{"gitId":"joshualiangxy"},"content":"                            \"1993-12-06T10:10\","},{"lineNumber":250,"author":{"gitId":"joshualiangxy"},"content":"                            true,"},{"lineNumber":251,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":252,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":253,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":255,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":256,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for an deadline with different date\")"},{"lineNumber":257,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altDeadlineTwo_false() throws InvalidOptionException {"},{"lineNumber":258,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(deadlineOne.equals("},{"lineNumber":259,"author":{"gitId":"joshualiangxy"},"content":"                    new Deadline("},{"lineNumber":260,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 1\","},{"lineNumber":261,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":262,"author":{"gitId":"joshualiangxy"},"content":"                            \"2020-12-06T10:10\","},{"lineNumber":263,"author":{"gitId":"joshualiangxy"},"content":"                            false,"},{"lineNumber":264,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":265,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":266,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":268,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":269,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false if deadlines have different recurrence\")"},{"lineNumber":270,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altRecurrenceDeadline_false() throws InvalidOptionException {"},{"lineNumber":271,"author":{"gitId":"joshualiangxy"},"content":"            Deadline recurringDaily \u003d new Deadline(\"task 1\", \"rd\","},{"lineNumber":272,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":273,"author":{"gitId":"joshualiangxy"},"content":"            Deadline recurringWeekly \u003d new Deadline(\"task 1\", \"rw\","},{"lineNumber":274,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":275,"author":{"gitId":"joshualiangxy"},"content":"            Deadline recurringMonthly \u003d new Deadline(\"task 1\", \"rm\","},{"lineNumber":276,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":277,"author":{"gitId":"joshualiangxy"},"content":"            Deadline recurringYearly \u003d new Deadline(\"task 1\", \"ry\","},{"lineNumber":278,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":279,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":280,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(deadlineOne.equals(recurringMonthly));"},{"lineNumber":281,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(recurringDaily.equals(recurringMonthly));"},{"lineNumber":282,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(recurringMonthly.equals(recurringYearly));"},{"lineNumber":283,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(recurringYearly.equals(recurringDaily));"},{"lineNumber":284,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":285,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":286,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":287,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false if tags are different\")"},{"lineNumber":288,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_differentTagDeadline_false() throws InvalidOptionException {"},{"lineNumber":289,"author":{"gitId":"joshualiangxy"},"content":"            Deadline test \u003d new Deadline("},{"lineNumber":290,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 1\","},{"lineNumber":291,"author":{"gitId":"joshualiangxy"},"content":"                    LocalDateTime.of(1993, 12, 6, 10, 10),"},{"lineNumber":292,"author":{"gitId":"joshualiangxy"},"content":"                    new HashSet\u003c\u003e(),"},{"lineNumber":293,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"abc\" }"},{"lineNumber":294,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":295,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":296,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(deadlineOne.equals(test));"},{"lineNumber":297,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":298,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":299}},{"path":"src/test/main/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.command.Option;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"public class EventTest {"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"    private static final LocalDateTime NOW \u003d LocalDateTime.now();"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    private static Event eventOne;"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    private static Event eventTwo;"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"        eventOne \u003d new Event(\"task 1\","},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(1993, 12, 6, 10, 10),"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"        eventTwo \u003d new Event("},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\", \"\", \"4198-01-13T23:39\", true, new String[0]);"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"recurrence\")"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"    class Recurrence {"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should reset done state and push back event to one day away\")"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_recurringDaily_event() throws InvalidOptionException {"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"            Event test \u003d new Event(\"task 2\", \"rd\","},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"                    \"2020-09-09T14:39\", true, new String[0]);"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime date \u003d LocalDateTime.of(2020, 9, 9, 14, 39);"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_DAILY);"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new Event("},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"                    date.plusDays(date.until(NOW, ChronoUnit.DAYS) + 1),"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            ), test);"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should reset done state and push back event to one week away\")"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_recurringWeekly_event() throws InvalidOptionException {"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"            Event test \u003d new Event(\"task 2\", \"rw\","},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"                    \"2020-09-09T14:39\", true, new String[0]);"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime date \u003d LocalDateTime.of(2020, 9, 9, 14, 39);"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_WEEKLY);"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new Event("},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"                    date.plusWeeks(date.until(NOW, ChronoUnit.WEEKS) + 1),"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"            ), test);"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should reset done state and push back event to one month away\")"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_recurringMonthly_event() throws InvalidOptionException {"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"            Event test \u003d new Event(\"task 2\", \"rm\","},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"                    \"2020-09-09T14:39\", true, new String[0]);"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime date \u003d LocalDateTime.of(2020, 9, 9, 14, 39);"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_MONTHLY);"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new Event("},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"                    date.plusMonths(date.until(NOW, ChronoUnit.MONTHS) + 1),"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"            ), test);"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should reset done state and push back event to one year away\")"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        public void constructor_recurringYearly_event() throws InvalidOptionException {"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"            Event test \u003d new Event(\"task 2\", \"ry\","},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"                    \"2020-09-09T14:39\", true, new String[0]);"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"            LocalDateTime date \u003d LocalDateTime.of(2020, 9, 9, 14, 39);"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"            HashSet\u003cOption\u003e options \u003d new HashSet\u003c\u003e();"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"            options.add(Option.RECURRING_YEARLY);"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(new Event("},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"                    date.plusYears(date.until(NOW, ChronoUnit.YEARS) + 1),"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"                    options,"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"            ), test);"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"write\")"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"    class Write {"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string meant for writing to disk\")"},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"        public void write_eventTask_string() {"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"E,,1993-12-06T10:10,0,,task 1\\n\","},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"                    eventOne.write());"},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string meant for writing to disk with alt event\")"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"        public void write_altEventTask_altString() {"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"E,,4198-01-13T23:39,1,,task 2\\n\","},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"                    eventTwo.write());"},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with the recurrence alias\")"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"        public void write_recurringEventTask_string() throws InvalidOptionException {"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"            Event test \u003d new Event("},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"                    \"rw\","},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":"                    \"4000-11-23T12:44\","},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":134,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":135,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"E,rw,4000-11-23T12:44,1,,task 3\\n\","},{"lineNumber":136,"author":{"gitId":"joshualiangxy"},"content":"                    test.write());"},{"lineNumber":137,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":139,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":140,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with tags\")"},{"lineNumber":141,"author":{"gitId":"joshualiangxy"},"content":"        public void write_taggedEventTask_string() throws InvalidOptionException {"},{"lineNumber":142,"author":{"gitId":"joshualiangxy"},"content":"            Event test \u003d new Event("},{"lineNumber":143,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":144,"author":{"gitId":"joshualiangxy"},"content":"                    \"rw\","},{"lineNumber":145,"author":{"gitId":"joshualiangxy"},"content":"                    \"4000-11-23T12:44\","},{"lineNumber":146,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":147,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"happy\" }"},{"lineNumber":148,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":149,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":150,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"E,rw,4000-11-23T12:44,1,happy,task 3\\n\","},{"lineNumber":151,"author":{"gitId":"joshualiangxy"},"content":"                    test.write());"},{"lineNumber":152,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":154,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":155,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return an alternate string with tags\")"},{"lineNumber":156,"author":{"gitId":"joshualiangxy"},"content":"        public void write_taggedAltEventTask_string() throws InvalidOptionException {"},{"lineNumber":157,"author":{"gitId":"joshualiangxy"},"content":"            Event test \u003d new Event("},{"lineNumber":158,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":159,"author":{"gitId":"joshualiangxy"},"content":"                    \"rw\","},{"lineNumber":160,"author":{"gitId":"joshualiangxy"},"content":"                    \"4000-11-23T12:44\","},{"lineNumber":161,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":162,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"abc\", \"123\", \"apple\" }"},{"lineNumber":163,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":164,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":165,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"E,rw,4000-11-23T12:44,1,abc;123;apple,task 3\\n\","},{"lineNumber":166,"author":{"gitId":"joshualiangxy"},"content":"                    test.write());"},{"lineNumber":167,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":170,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":171,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"string representation\")"},{"lineNumber":172,"author":{"gitId":"joshualiangxy"},"content":"    class StringRepresentation {"},{"lineNumber":173,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":174,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string representation of the event instance\")"},{"lineNumber":175,"author":{"gitId":"joshualiangxy"},"content":"        public void toString_eventTask_string() {"},{"lineNumber":176,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"[E][\\u2718] task 1\\n(at: Monday, 06 Dec 1993, 10:10AM)\","},{"lineNumber":177,"author":{"gitId":"joshualiangxy"},"content":"                    eventOne.toString());"},{"lineNumber":178,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":180,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":181,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string representation of an alternate event instance\")"},{"lineNumber":182,"author":{"gitId":"joshualiangxy"},"content":"        public void toString_altEventTask_altString() {"},{"lineNumber":183,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"[E][\\u2713] task 2\\n(at: Saturday, 13 Jan 4198, 11:39PM)\","},{"lineNumber":184,"author":{"gitId":"joshualiangxy"},"content":"                    eventTwo.toString());"},{"lineNumber":185,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":188,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":189,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"equals\")"},{"lineNumber":190,"author":{"gitId":"joshualiangxy"},"content":"    class Equal {"},{"lineNumber":191,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":192,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true for a event with the same name, event time and done state\")"},{"lineNumber":193,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_event_true() throws InvalidOptionException {"},{"lineNumber":194,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(eventOne.equals("},{"lineNumber":195,"author":{"gitId":"joshualiangxy"},"content":"                    new Event("},{"lineNumber":196,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 1\","},{"lineNumber":197,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":198,"author":{"gitId":"joshualiangxy"},"content":"                            \"1993-12-06T10:10\","},{"lineNumber":199,"author":{"gitId":"joshualiangxy"},"content":"                            false,"},{"lineNumber":200,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":201,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":202,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":204,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":205,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true for an alt event with the same \""},{"lineNumber":206,"author":{"gitId":"joshualiangxy"},"content":"                + \"name, event time and done state\")"},{"lineNumber":207,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altEvent_true() throws InvalidOptionException {"},{"lineNumber":208,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(eventTwo.equals("},{"lineNumber":209,"author":{"gitId":"joshualiangxy"},"content":"                    new Event("},{"lineNumber":210,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 2\","},{"lineNumber":211,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":212,"author":{"gitId":"joshualiangxy"},"content":"                            \"4198-01-13T23:39\","},{"lineNumber":213,"author":{"gitId":"joshualiangxy"},"content":"                            true,"},{"lineNumber":214,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":215,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":216,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":218,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":219,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for a non event tasks\")"},{"lineNumber":220,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_nonEvent_false() throws InvalidOptionException {"},{"lineNumber":221,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(eventOne.equals(new Task(\"task 1\", new String[0])));"},{"lineNumber":222,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(eventTwo.equals(new Todo(\"task 2\", new String[0])));"},{"lineNumber":223,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(eventTwo.equals("},{"lineNumber":224,"author":{"gitId":"joshualiangxy"},"content":"                    new Deadline("},{"lineNumber":225,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 2\","},{"lineNumber":226,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":227,"author":{"gitId":"joshualiangxy"},"content":"                            \"4198-01-13T23:39\","},{"lineNumber":228,"author":{"gitId":"joshualiangxy"},"content":"                            true,"},{"lineNumber":229,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":230,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":231,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":233,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":234,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for an event with different name\")"},{"lineNumber":235,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_event_false() throws InvalidOptionException {"},{"lineNumber":236,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(eventOne.equals("},{"lineNumber":237,"author":{"gitId":"joshualiangxy"},"content":"                    new Event("},{"lineNumber":238,"author":{"gitId":"joshualiangxy"},"content":"                            \"different name\","},{"lineNumber":239,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":240,"author":{"gitId":"joshualiangxy"},"content":"                            \"1993-12-06T10:10\","},{"lineNumber":241,"author":{"gitId":"joshualiangxy"},"content":"                            false,"},{"lineNumber":242,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":243,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":244,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":245,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":246,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":247,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for an event with different done state\")"},{"lineNumber":248,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altEvent_false() throws InvalidOptionException {"},{"lineNumber":249,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(eventOne.equals("},{"lineNumber":250,"author":{"gitId":"joshualiangxy"},"content":"                    new Event("},{"lineNumber":251,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 1\","},{"lineNumber":252,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":253,"author":{"gitId":"joshualiangxy"},"content":"                            \"1993-12-06T10:10\","},{"lineNumber":254,"author":{"gitId":"joshualiangxy"},"content":"                            true,"},{"lineNumber":255,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":256,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":257,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":258,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":259,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":260,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for an event with different date\")"},{"lineNumber":261,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altEventTwo_false() throws InvalidOptionException {"},{"lineNumber":262,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(eventOne.equals("},{"lineNumber":263,"author":{"gitId":"joshualiangxy"},"content":"                    new Event("},{"lineNumber":264,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 1\","},{"lineNumber":265,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":266,"author":{"gitId":"joshualiangxy"},"content":"                            \"2020-12-06T10:10\","},{"lineNumber":267,"author":{"gitId":"joshualiangxy"},"content":"                            false,"},{"lineNumber":268,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":269,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":270,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":271,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":272,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":273,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false if events have different recurrence\")"},{"lineNumber":274,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altRecurrenceEvent_false() throws InvalidOptionException {"},{"lineNumber":275,"author":{"gitId":"joshualiangxy"},"content":"            Event recurringDaily \u003d new Event(\"task 1\", \"rd\","},{"lineNumber":276,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":277,"author":{"gitId":"joshualiangxy"},"content":"            Event recurringWeekly \u003d new Event(\"task 1\", \"rw\","},{"lineNumber":278,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":279,"author":{"gitId":"joshualiangxy"},"content":"            Event recurringMonthly \u003d new Event(\"task 1\", \"rm\","},{"lineNumber":280,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":281,"author":{"gitId":"joshualiangxy"},"content":"            Event recurringYearly \u003d new Event(\"task 1\", \"ry\","},{"lineNumber":282,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\", false, new String[0]);"},{"lineNumber":283,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":284,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(eventOne.equals(recurringMonthly));"},{"lineNumber":285,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(recurringDaily.equals(recurringMonthly));"},{"lineNumber":286,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(recurringMonthly.equals(recurringYearly));"},{"lineNumber":287,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(recurringYearly.equals(recurringDaily));"},{"lineNumber":288,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":289,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":290,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":291,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false if tags are different\")"},{"lineNumber":292,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_differentTagDeadline_false() {"},{"lineNumber":293,"author":{"gitId":"joshualiangxy"},"content":"            Event test \u003d new Event("},{"lineNumber":294,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 1\","},{"lineNumber":295,"author":{"gitId":"joshualiangxy"},"content":"                    LocalDateTime.of(1993, 12, 6, 10, 10),"},{"lineNumber":296,"author":{"gitId":"joshualiangxy"},"content":"                    new HashSet\u003c\u003e(),"},{"lineNumber":297,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"abc\" }"},{"lineNumber":298,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":299,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":300,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(eventOne.equals(test));"},{"lineNumber":301,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":302,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":303,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":303}},{"path":"src/test/main/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"public class TaskListTest {"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    private static Todo taskOne;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    private static Deadline taskTwo;"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    private static Event taskThree;"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"    @BeforeEach"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    public void beforeEach() throws InvalidOptionException {"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"        taskOne \u003d new Todo(\"task 1\", true, new String[0]);"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"        taskTwo \u003d new Deadline("},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"                \"task 2\","},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"                LocalDateTime.of(1993, 12, 6, 10, 10),"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"                new HashSet\u003c\u003e(),"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"        taskThree \u003d new Event("},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"                \"task 1\","},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"                \"\","},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"                \"1993-12-06T10:10\","},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"                false,"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"                new String[0]"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        );"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"size\")"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"    class Size {"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return 0 for empty list\")"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        public void size_taskList_size() {"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(0, new TaskList().size());"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return list size for alternate list\")"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"        public void size_altTaskList_altSize() {"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskOne);"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskTwo);"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskThree);"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"get\")"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"    class Get {"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return task from list\")"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"        public void size_taskList_size() {"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskThree);"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(1, tasks.size());"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(taskThree, tasks.get(0));"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(1, tasks.size());"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return alternate task from list\")"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        public void size_altTaskList_altSize() {"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskOne);"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskTwo);"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskThree);"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(taskTwo, tasks.get(1));"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(3, tasks.size());"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"add\")"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"    class Add {"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should add task to the list\")"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        public void add_task() {"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(0, tasks.size());"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskOne);"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(1, tasks.size());"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(taskOne, tasks.get(0));"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should add alternate task to the list\")"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"        public void add_altTask() {"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(0, tasks.size());"},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskTwo);"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(1, tasks.size());"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(taskTwo, tasks.get(0));"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"remove\")"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"    class Remove {"},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should remove and return task from list\")"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":"        public void remove_index_removedTask() {"},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskTwo);"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(1, tasks.size());"},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(taskTwo, tasks.remove(0));"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(0, tasks.size());"},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should remove and return alt task from list\")"},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"        public void remove_altIndex_altRemovedTask() {"},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskOne);"},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(taskThree);"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(2, tasks.size());"},{"lineNumber":134,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(taskThree, tasks.remove(1));"},{"lineNumber":135,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(1, tasks.size());"},{"lineNumber":136,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":138}},{"path":"src/test/main/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"public class TaskTest {"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"    private static final Task TASK_ONE \u003d new Task(\"task 1\", new String[0]);"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"    private static final Task TASK_TWO \u003d new Task(\"task 2\", new String[0]);"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"write\")"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    class Write {"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string meant for writing to disk\")"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"        public void write_task_string() {"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\",0,,task 1\\n\", TASK_ONE.write());"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string meant for writing to disk with alt task\")"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"        public void write_altTask_altString() {"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\",0,,task 2\\n\", TASK_TWO.write());"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with tags\")"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"        public void write_taggedTask_string() {"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"            Task test \u003d new Task("},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"abc\", \"123\", \"apple\" }"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\",1,abc;123;apple,task 3\\n\", test.write());"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return an alternate string with tags\")"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"        public void write_taggedAltTask_string() {"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"            Task test \u003d new Task("},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"happy\" }"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\",1,happy,task 3\\n\", test.write());"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"string representation\")"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"    class StringRepresentation {"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string representation of the task instance\")"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"        public void toString_task_string() {"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"[\\u2718] task 1\", TASK_ONE.toString());"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string representation of an alternate task instance\")"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"        public void toString_altTask_altString() {"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"[\\u2718] task 2\", TASK_TWO.toString());"},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"equals\")"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    class Equal {"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true for a task with the same name\")"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_task_true() {"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(TASK_ONE.equals(new Task(\"task 1\", new String[0])));"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true for an alt task with the same name\")"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altTask_true() {"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(TASK_TWO.equals(new Task(\"task 2\", new String[0])));"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for a task with different name\")"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_task_false() {"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(TASK_ONE.equals(new Task(\"different\", new String[0])));"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false if tags are different\")"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_differentTagDeadline_false() {"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"            Task test \u003d new Task(\"task 1\", new String[] { \"abc\" });"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(TASK_ONE.equals(test));"},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":100}},{"path":"src/test/main/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.task;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"public class TodoTest {"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"    private static final Todo TODO_ONE \u003d new Todo(\"task 1\", new String[0]);"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"    private static final Todo TODO_TWO \u003d new Todo(\"task 2\", true, new String[0]);"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"write\")"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    class Write {"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string meant for writing to disk\")"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"        public void write_todoTask_string() {"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"T,,,0,,task 1\\n\", TODO_ONE.write());"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string meant for writing to disk with alt todo\")"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"        public void write_altTodoTask_altString() {"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"T,,,1,,task 2\\n\", TODO_TWO.write());"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string with tags\")"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"        public void write_taggedTodoTask_string() {"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"            Todo test \u003d new Todo("},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"abc\", \"123\", \"apple\" }"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"T,,,1,abc;123;apple,task 3\\n\","},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"                    test.write());"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return an alternate string with tags\")"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        public void write_taggedAltTodoTask_string() {"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"            Todo test \u003d new Todo("},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"                    new String[] { \"happy\" }"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            );"},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"T,,,1,happy,task 3\\n\","},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"                    test.write());"},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"string representation\")"},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"    class StringRepresentation {"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string representation of the todo instance\")"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"        public void toString_todoTask_string() {"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"[T][\\u2718] task 1\", TODO_ONE.toString());"},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return a string representation of an alternate todo instance\")"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        public void toString_altTodoTask_altString() {"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"[T][\\u2713] task 2\", TODO_TWO.toString());"},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"equals\")"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"    class Equal {"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true for a todo with the same name\")"},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_todo_true() {"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(TODO_ONE.equals(new Todo(\"task 1\", new String[0])));"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return true for an alt todo with the same name\")"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altTodo_true() {"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":"            assertTrue(TODO_TWO.equals(new Todo(\"task 2\", true, new String[0])));"},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for a non todo tasks\")"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_nonTodo_false() throws InvalidOptionException {"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(TODO_ONE.equals(new Task(\"task 1\", new String[0])));"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(TODO_TWO.equals("},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"                    new Event("},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 2\","},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"                            \"4198-01-13T23:39\","},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"                            true,"},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(TODO_TWO.equals("},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"                    new Deadline("},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 2\","},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"                            \"\","},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"                            \"4198-01-13T23:39\","},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"                            true,"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for a todo with different name\")"},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_todo_false() {"},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(TODO_ONE.equals(new Todo(\"task 2\", new String[0])));"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false for a todo with different done state\")"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_altTodo_false() {"},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(TODO_ONE.equals("},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"                    new Todo(\"task 1\", true, new String[0])));"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return false if tags are different\")"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":"        public void equals_differentTagDeadline_false() {"},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"            Todo test \u003d new Todo(\"task 1\", new String[] { \"abc\" });"},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":"            assertFalse(TODO_ONE.equals(test));"},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":133}},{"path":"src/test/main/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"package main.ui;"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"import main.exception.InvalidOptionException;"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Event;"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"import main.task.TaskList;"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"import main.task.Todo;"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"public class UiTest {"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"exit message\")"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"    class Exit {"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return the exit message\")"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"        public void printExitMessage_noInput_exitMessage() {"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Bye. Hope to see you again soon!\","},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printExitMessage());"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"greeting message\")"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"    class Greeting {"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return the greeting message\")"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"        public void printGreetingMessage_noInput_greetingMessage() {"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Hello! I\u0027m Stuff\\nWhat can I do for you?\","},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printGreetingMessage());"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"list message\")"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"    class List {"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return the message with the list of tasks\")"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"        public void printTaskList_taskList_messageWithListOfTasks()"},{"lineNumber":49,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":50,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":51,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(new Todo(\"task 1\", new String[0]));"},{"lineNumber":52,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(new Deadline("},{"lineNumber":53,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":54,"author":{"gitId":"joshualiangxy"},"content":"                    \"\","},{"lineNumber":55,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\","},{"lineNumber":56,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":57,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":58,"author":{"gitId":"joshualiangxy"},"content":"            ));"},{"lineNumber":59,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(new Event("},{"lineNumber":60,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":61,"author":{"gitId":"joshualiangxy"},"content":"                    LocalDateTime.of(3121, 12, 29, 23, 54),"},{"lineNumber":62,"author":{"gitId":"joshualiangxy"},"content":"                    new HashSet\u003c\u003e(),"},{"lineNumber":63,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":64,"author":{"gitId":"joshualiangxy"},"content":"            ));"},{"lineNumber":65,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"1. [T][\\u2718] task 1\\n2. [D][\\u2713] task 2\\n\""},{"lineNumber":66,"author":{"gitId":"joshualiangxy"},"content":"                            + \"(by: Monday, 06 Dec 1993, 10:10AM)\\n\""},{"lineNumber":67,"author":{"gitId":"joshualiangxy"},"content":"                            + \"3. [E][\\u2718] task 3\\n(at: Thursday, 29 Dec 3121,\""},{"lineNumber":68,"author":{"gitId":"joshualiangxy"},"content":"                            + \" 11:54PM)\\n\","},{"lineNumber":69,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printTaskList(tasks));"},{"lineNumber":70,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":72,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":73,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return the message with alternate list of tasks\")"},{"lineNumber":74,"author":{"gitId":"joshualiangxy"},"content":"        public void printTaskList_altTaskList_messageWithListOfTasks() {"},{"lineNumber":75,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":76,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(new Todo(\"test task\", new String[0]));"},{"lineNumber":77,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"1. [T][\\u2718] test task\\n\", ui.printTaskList(tasks));"},{"lineNumber":78,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":80,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":81,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return no tasks yet message if no tasks in list\")"},{"lineNumber":82,"author":{"gitId":"joshualiangxy"},"content":"        public void printTaskList_emptyTaskList_noTasksMessage() {"},{"lineNumber":83,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":84,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"There are no tasks yet!\", ui.printTaskList(tasks));"},{"lineNumber":85,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":88,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":89,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"find message\")"},{"lineNumber":90,"author":{"gitId":"joshualiangxy"},"content":"    class Find {"},{"lineNumber":91,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":92,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return the message with the list of tasks\")"},{"lineNumber":93,"author":{"gitId":"joshualiangxy"},"content":"        public void printFoundList_taskList_messageWithListOfTasks()"},{"lineNumber":94,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":95,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":96,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(new Todo(\"task 1\", new String[0]));"},{"lineNumber":97,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(new Deadline("},{"lineNumber":98,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 2\","},{"lineNumber":99,"author":{"gitId":"joshualiangxy"},"content":"                    \"\","},{"lineNumber":100,"author":{"gitId":"joshualiangxy"},"content":"                    \"1993-12-06T10:10\","},{"lineNumber":101,"author":{"gitId":"joshualiangxy"},"content":"                    true,"},{"lineNumber":102,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":103,"author":{"gitId":"joshualiangxy"},"content":"            ));"},{"lineNumber":104,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(new Event("},{"lineNumber":105,"author":{"gitId":"joshualiangxy"},"content":"                    \"task 3\","},{"lineNumber":106,"author":{"gitId":"joshualiangxy"},"content":"                    LocalDateTime.of(3121, 12, 29, 23, 54),"},{"lineNumber":107,"author":{"gitId":"joshualiangxy"},"content":"                    new HashSet\u003c\u003e(),"},{"lineNumber":108,"author":{"gitId":"joshualiangxy"},"content":"                    new String[0]"},{"lineNumber":109,"author":{"gitId":"joshualiangxy"},"content":"            ));"},{"lineNumber":110,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Here are the matching tasks in your list:\\n\""},{"lineNumber":111,"author":{"gitId":"joshualiangxy"},"content":"                            + \"1. [T][\\u2718] task 1\\n2. [D][\\u2713] task 2\\n\""},{"lineNumber":112,"author":{"gitId":"joshualiangxy"},"content":"                            + \"(by: Monday, 06 Dec 1993, 10:10AM)\\n\""},{"lineNumber":113,"author":{"gitId":"joshualiangxy"},"content":"                            + \"3. [E][\\u2718] task 3\\n(at: Thursday, 29 Dec 3121,\""},{"lineNumber":114,"author":{"gitId":"joshualiangxy"},"content":"                            + \" 11:54PM)\\n\","},{"lineNumber":115,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printFoundList(tasks));"},{"lineNumber":116,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":118,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":119,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return the message with alternate list of tasks\")"},{"lineNumber":120,"author":{"gitId":"joshualiangxy"},"content":"        public void printFoundList_altTaskList_messageWithListOfTasks() {"},{"lineNumber":121,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":122,"author":{"gitId":"joshualiangxy"},"content":"            tasks.add(new Todo(\"test task\", new String[0]));"},{"lineNumber":123,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Here are the matching tasks in your list:\\n\""},{"lineNumber":124,"author":{"gitId":"joshualiangxy"},"content":"                            + \"1. [T][\\u2718] test task\\n\","},{"lineNumber":125,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printFoundList(tasks));"},{"lineNumber":126,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":128,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":129,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return no tasks found message if no tasks in list\")"},{"lineNumber":130,"author":{"gitId":"joshualiangxy"},"content":"        public void printFoundList_emptyTaskList_noTasksMessage() {"},{"lineNumber":131,"author":{"gitId":"joshualiangxy"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":132,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"There are no tasks found!\", ui.printFoundList(tasks));"},{"lineNumber":133,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":136,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":137,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"add task success message\")"},{"lineNumber":138,"author":{"gitId":"joshualiangxy"},"content":"    class AddTaskSuccess {"},{"lineNumber":139,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":140,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating todo has been added\")"},{"lineNumber":141,"author":{"gitId":"joshualiangxy"},"content":"        public void printAddSuccess_todo_addSuccessMessage() {"},{"lineNumber":142,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Got it. I\u0027ve added this task:\\n[T][\\u2718] task 1\\n\""},{"lineNumber":143,"author":{"gitId":"joshualiangxy"},"content":"                            + \"Now you have 3 tasks in the list.\","},{"lineNumber":144,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printAddSuccess(new Todo(\"task 1\", new String[0]), 3));"},{"lineNumber":145,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":147,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":148,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating deadline has been added\")"},{"lineNumber":149,"author":{"gitId":"joshualiangxy"},"content":"        public void printAddSuccess_deadline_addSuccessMessage()"},{"lineNumber":150,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":151,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Got it. I\u0027ve added this task:\\n[D][\\u2713] task 2\\n\""},{"lineNumber":152,"author":{"gitId":"joshualiangxy"},"content":"                            + \"(by: Monday, 06 Dec 1993, 10:10AM)\\n\""},{"lineNumber":153,"author":{"gitId":"joshualiangxy"},"content":"                            + \"Now you have 0 tasks in the list.\","},{"lineNumber":154,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printAddSuccess("},{"lineNumber":155,"author":{"gitId":"joshualiangxy"},"content":"                            new Deadline("},{"lineNumber":156,"author":{"gitId":"joshualiangxy"},"content":"                                    \"task 2\","},{"lineNumber":157,"author":{"gitId":"joshualiangxy"},"content":"                                    \"\","},{"lineNumber":158,"author":{"gitId":"joshualiangxy"},"content":"                                    \"1993-12-06T10:10\","},{"lineNumber":159,"author":{"gitId":"joshualiangxy"},"content":"                                    true,"},{"lineNumber":160,"author":{"gitId":"joshualiangxy"},"content":"                                    new String[0]"},{"lineNumber":161,"author":{"gitId":"joshualiangxy"},"content":"                            ),"},{"lineNumber":162,"author":{"gitId":"joshualiangxy"},"content":"                            0"},{"lineNumber":163,"author":{"gitId":"joshualiangxy"},"content":"                    ));"},{"lineNumber":164,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":166,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":167,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating event has been added\")"},{"lineNumber":168,"author":{"gitId":"joshualiangxy"},"content":"        public void printAddSuccess_event_addSuccessMessage() {"},{"lineNumber":169,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Got it. I\u0027ve added this task:\\n[E][\\u2718] task 3\\n\""},{"lineNumber":170,"author":{"gitId":"joshualiangxy"},"content":"                            + \"(at: Thursday, 29 Dec 3121, 11:54PM)\\n\""},{"lineNumber":171,"author":{"gitId":"joshualiangxy"},"content":"                            + \"Now you have 5 tasks in the list.\","},{"lineNumber":172,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printAddSuccess(new Event("},{"lineNumber":173,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 3\","},{"lineNumber":174,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(3121, 12, 29, 23, 54),"},{"lineNumber":175,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":176,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":177,"author":{"gitId":"joshualiangxy"},"content":"                    ), 5));"},{"lineNumber":178,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":180,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":181,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message with word \\\"task\\\" in singular form\")"},{"lineNumber":182,"author":{"gitId":"joshualiangxy"},"content":"        public void printAddSuccess_taskNumOne_singularTaskMessage() {"},{"lineNumber":183,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Got it. I\u0027ve added this task:\\n[T][\\u2718] task 1\\n\""},{"lineNumber":184,"author":{"gitId":"joshualiangxy"},"content":"                            + \"Now you have 1 task in the list.\","},{"lineNumber":185,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printAddSuccess(new Todo(\"task 1\", new String[0]), 1));"},{"lineNumber":186,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":189,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":190,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"remove task success message\")"},{"lineNumber":191,"author":{"gitId":"joshualiangxy"},"content":"    class RemoveTaskSuccess {"},{"lineNumber":192,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":193,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating todo has been removed\")"},{"lineNumber":194,"author":{"gitId":"joshualiangxy"},"content":"        public void printRemoveSuccess_todo_addSuccessMessage() {"},{"lineNumber":195,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Noted. I\u0027ve removed this task:\\n[T][\\u2718] task 1\\n\""},{"lineNumber":196,"author":{"gitId":"joshualiangxy"},"content":"                            + \"Now you have 3 tasks in the list.\","},{"lineNumber":197,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printRemoveSuccess(new Todo(\"task 1\", new String[0]), 3));"},{"lineNumber":198,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":200,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":201,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating deadline has been removed\")"},{"lineNumber":202,"author":{"gitId":"joshualiangxy"},"content":"        public void printRemoveSuccess_deadline_addSuccessMessage()"},{"lineNumber":203,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":204,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Noted. I\u0027ve removed this task:\\n[D][\\u2713] task 2\\n\""},{"lineNumber":205,"author":{"gitId":"joshualiangxy"},"content":"                            + \"(by: Monday, 06 Dec 1993, 10:10AM)\\n\""},{"lineNumber":206,"author":{"gitId":"joshualiangxy"},"content":"                            + \"Now you have 0 tasks in the list.\","},{"lineNumber":207,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printRemoveSuccess("},{"lineNumber":208,"author":{"gitId":"joshualiangxy"},"content":"                            new Deadline("},{"lineNumber":209,"author":{"gitId":"joshualiangxy"},"content":"                                    \"task 2\","},{"lineNumber":210,"author":{"gitId":"joshualiangxy"},"content":"                                    \"\","},{"lineNumber":211,"author":{"gitId":"joshualiangxy"},"content":"                                    \"1993-12-06T10:10\","},{"lineNumber":212,"author":{"gitId":"joshualiangxy"},"content":"                                    true,"},{"lineNumber":213,"author":{"gitId":"joshualiangxy"},"content":"                                    new String[0]"},{"lineNumber":214,"author":{"gitId":"joshualiangxy"},"content":"                            ),"},{"lineNumber":215,"author":{"gitId":"joshualiangxy"},"content":"                            0"},{"lineNumber":216,"author":{"gitId":"joshualiangxy"},"content":"                    ));"},{"lineNumber":217,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":219,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":220,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating event has been removed\")"},{"lineNumber":221,"author":{"gitId":"joshualiangxy"},"content":"        public void printRemoveSuccess_event_addSuccessMessage() {"},{"lineNumber":222,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Noted. I\u0027ve removed this task:\\n[E][\\u2718] task 3\\n\""},{"lineNumber":223,"author":{"gitId":"joshualiangxy"},"content":"                            + \"(at: Thursday, 29 Dec 3121, 11:54PM)\\n\""},{"lineNumber":224,"author":{"gitId":"joshualiangxy"},"content":"                            + \"Now you have 5 tasks in the list.\","},{"lineNumber":225,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printRemoveSuccess(new Event("},{"lineNumber":226,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 3\","},{"lineNumber":227,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(3121, 12, 29, 23, 54),"},{"lineNumber":228,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":229,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":230,"author":{"gitId":"joshualiangxy"},"content":"                            ),"},{"lineNumber":231,"author":{"gitId":"joshualiangxy"},"content":"                            5"},{"lineNumber":232,"author":{"gitId":"joshualiangxy"},"content":"                    ));"},{"lineNumber":233,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":235,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":236,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message with word \\\"task\\\" in singular form\")"},{"lineNumber":237,"author":{"gitId":"joshualiangxy"},"content":"        public void printRemoveSuccess_taskNumOne_singularTaskMessage() {"},{"lineNumber":238,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Noted. I\u0027ve removed this task:\\n[T][\\u2718] task 1\\n\""},{"lineNumber":239,"author":{"gitId":"joshualiangxy"},"content":"                            + \"Now you have 1 task in the list.\","},{"lineNumber":240,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printRemoveSuccess(new Todo(\"task 1\", new String[0]), 1));"},{"lineNumber":241,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":242,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":244,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":245,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"done success message\")"},{"lineNumber":246,"author":{"gitId":"joshualiangxy"},"content":"    class DoneSuccess {"},{"lineNumber":247,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":248,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating todo as done\")"},{"lineNumber":249,"author":{"gitId":"joshualiangxy"},"content":"        public void printDoneSuccess_todo_doneSuccessMessage() {"},{"lineNumber":250,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Nice! I\u0027ve marked this task as done:\\n[T][\\u2718] task 1\","},{"lineNumber":251,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printDoneSuccess(new Todo(\"task 1\", new String[0])));"},{"lineNumber":252,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":253,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":254,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":255,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating deadline as done\")"},{"lineNumber":256,"author":{"gitId":"joshualiangxy"},"content":"        public void printDoneSuccess_deadline_doneSuccessMessage()"},{"lineNumber":257,"author":{"gitId":"joshualiangxy"},"content":"                throws InvalidOptionException {"},{"lineNumber":258,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":259,"author":{"gitId":"joshualiangxy"},"content":"                            + \"[D][\\u2713] task 2\\n(by: Monday, 06 Dec 1993, 10:10AM)\","},{"lineNumber":260,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printDoneSuccess("},{"lineNumber":261,"author":{"gitId":"joshualiangxy"},"content":"                            new Deadline("},{"lineNumber":262,"author":{"gitId":"joshualiangxy"},"content":"                                    \"task 2\","},{"lineNumber":263,"author":{"gitId":"joshualiangxy"},"content":"                                    \"\","},{"lineNumber":264,"author":{"gitId":"joshualiangxy"},"content":"                                    \"1993-12-06T10:10\","},{"lineNumber":265,"author":{"gitId":"joshualiangxy"},"content":"                                    true,"},{"lineNumber":266,"author":{"gitId":"joshualiangxy"},"content":"                                    new String[0]"},{"lineNumber":267,"author":{"gitId":"joshualiangxy"},"content":"                            )));"},{"lineNumber":268,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":270,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":271,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return message indicating event as done\")"},{"lineNumber":272,"author":{"gitId":"joshualiangxy"},"content":"        public void printDoneSuccess_event_doneSuccessMessage() {"},{"lineNumber":273,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":274,"author":{"gitId":"joshualiangxy"},"content":"                            + \"[E][\\u2718] task 3\\n(at: Thursday, 29 Dec 3121, 11:54PM)\","},{"lineNumber":275,"author":{"gitId":"joshualiangxy"},"content":"                    ui.printDoneSuccess(new Event("},{"lineNumber":276,"author":{"gitId":"joshualiangxy"},"content":"                            \"task 3\","},{"lineNumber":277,"author":{"gitId":"joshualiangxy"},"content":"                            LocalDateTime.of(3121, 12, 29, 23, 54),"},{"lineNumber":278,"author":{"gitId":"joshualiangxy"},"content":"                            new HashSet\u003c\u003e(),"},{"lineNumber":279,"author":{"gitId":"joshualiangxy"},"content":"                            new String[0]"},{"lineNumber":280,"author":{"gitId":"joshualiangxy"},"content":"                    )));"},{"lineNumber":281,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":282,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"joshualiangxy"},"content":""},{"lineNumber":284,"author":{"gitId":"joshualiangxy"},"content":"    @Nested"},{"lineNumber":285,"author":{"gitId":"joshualiangxy"},"content":"    @DisplayName(\"error message\")"},{"lineNumber":286,"author":{"gitId":"joshualiangxy"},"content":"    class Error {"},{"lineNumber":287,"author":{"gitId":"joshualiangxy"},"content":"        @Test"},{"lineNumber":288,"author":{"gitId":"joshualiangxy"},"content":"        @DisplayName(\"should return generic error message\")"},{"lineNumber":289,"author":{"gitId":"joshualiangxy"},"content":"        public void printErrorMessage_noInput_errorMessage() {"},{"lineNumber":290,"author":{"gitId":"joshualiangxy"},"content":"            assertEquals(\"Seems like something went wrong!\", ui.printErrorMessage());"},{"lineNumber":291,"author":{"gitId":"joshualiangxy"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"joshualiangxy"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"joshualiangxy"},"content":"}"}],"authorContributionMap":{"joshualiangxy":293}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joshualiangxy"},"content":"list"},{"lineNumber":2,"author":{"gitId":"joshualiangxy"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"joshualiangxy"},"content":"todo task 1"},{"lineNumber":4,"author":{"gitId":"joshualiangxy"},"content":"done"},{"lineNumber":5,"author":{"gitId":"joshualiangxy"},"content":"done 0"},{"lineNumber":6,"author":{"gitId":"joshualiangxy"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"joshualiangxy"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"joshualiangxy"},"content":"deadline"},{"lineNumber":9,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by"},{"lineNumber":11,"author":{"gitId":"joshualiangxy"},"content":"deadline /by next time"},{"lineNumber":12,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by nexttime"},{"lineNumber":13,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by year-month-day hourminute"},{"lineNumber":14,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by 1993-12 1423"},{"lineNumber":15,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by 1993-12-6 123"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by 1993-12-6 12345"},{"lineNumber":17,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by abcd-12-6 2359"},{"lineNumber":18,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by 1993-12-6 abcd"},{"lineNumber":19,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by 1993-12-6 3560"},{"lineNumber":20,"author":{"gitId":"joshualiangxy"},"content":"deadline task 2 /by 1993-12-6 2359"},{"lineNumber":21,"author":{"gitId":"joshualiangxy"},"content":"event"},{"lineNumber":22,"author":{"gitId":"joshualiangxy"},"content":"event task 3"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at"},{"lineNumber":24,"author":{"gitId":"joshualiangxy"},"content":"event /at right now"},{"lineNumber":25,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at now"},{"lineNumber":26,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at year-month-day hourminute"},{"lineNumber":27,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at 1967-01 1423"},{"lineNumber":28,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at 1967-01-31 123"},{"lineNumber":29,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at 1967-01-31 12345"},{"lineNumber":30,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at abcd-01-31 2359"},{"lineNumber":31,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at 1967-01-31 abcd"},{"lineNumber":32,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at 1967-01-31 3560"},{"lineNumber":33,"author":{"gitId":"joshualiangxy"},"content":"event task 3 /at 1967-01-31 1400"},{"lineNumber":34,"author":{"gitId":"joshualiangxy"},"content":"find"},{"lineNumber":35,"author":{"gitId":"joshualiangxy"},"content":"find 1"},{"lineNumber":36,"author":{"gitId":"joshualiangxy"},"content":"find 2"},{"lineNumber":37,"author":{"gitId":"joshualiangxy"},"content":"find 3"},{"lineNumber":38,"author":{"gitId":"joshualiangxy"},"content":"find task"},{"lineNumber":39,"author":{"gitId":"joshualiangxy"},"content":"find abc123"},{"lineNumber":40,"author":{"gitId":"joshualiangxy"},"content":"blah"},{"lineNumber":41,"author":{"gitId":"joshualiangxy"},"content":"list"},{"lineNumber":42,"author":{"gitId":"joshualiangxy"},"content":"delete"},{"lineNumber":43,"author":{"gitId":"joshualiangxy"},"content":"delete 1"},{"lineNumber":44,"author":{"gitId":"joshualiangxy"},"content":"delete 1"},{"lineNumber":45,"author":{"gitId":"joshualiangxy"},"content":"delete 1"},{"lineNumber":46,"author":{"gitId":"joshualiangxy"},"content":"delete 1"},{"lineNumber":47,"author":{"gitId":"joshualiangxy"},"content":"list"},{"lineNumber":48,"author":{"gitId":"joshualiangxy"},"content":"bye"}],"authorContributionMap":{"joshualiangxy":48}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"joshualiangxy"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"joshualiangxy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"joshualiangxy"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/**/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"joshualiangxy"},"content":"java -classpath ../bin/ main.gui.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"joshualiangxy":2,"-":36}}]
