[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"Duke Task Tracker is a **desktop application for managing your tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Duke Task Tracker can get your task management done faster than traditional GUI applications. "},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"* [Features](#features)"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Viewing help : **`--help`**](#viewing-help-----help)"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Adding a basic task : **`todo`**](#adding-a-basic-task--todo)"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Adding a task with a deadline : **`deadline`**](#adding-a-task-with-a-deadline--deadline)"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Adding a task with a date : **`event`**](#adding-a-task-with-a-date--event)"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Listing all tasks : **`list`**](#listing-all-tasks--list)"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Setting a task as done  : **`done`**](#setting-a-task-as-done--done)"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Deleting a task : **`delete`**](#deleting-a-task--delete)"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Searching for tasks : **`search`**](#searching-for-tasks--search)"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Adding a task to reminders : **`remind`**](#adding-a-task-to-reminders--remind)"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Retrieving events on a date : **`getEvents`**](#retrieving-events-on-a-date--getevents)"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Retrieving reminders : **`getReminders`**](#retrieving-reminders--getreminders)"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Exiting the program :  **`bye`**](#exiting-the-program--bye)"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Saving the data ](#saving-the-data)"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"----------------------------"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"## Features"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"### Features"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"- words in `\u003c....\u003e` are the user input."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"- items that have `/` before them are keywords for that command"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"### Viewing help : `-- help`"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"Shows a message explaining what commands Duke Task Tracker accepts and what the command formats are."},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"Format : --help"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"### Adding a basic task : `todo`"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"Adds a task that only has a task description to the list of tasks."},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: todo \\\u003ctask description\u003e"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples: "},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"- todo A new Task "},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"- todo CS2100 Tutorial 4"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"### Adding a task with a deadline : `deadline`"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"Adds a task that has a deadline associated with it."},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: deadline \\\u003ctask description\u003e /by \\\u003cdeadline description\u003e"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"- deadline new task /by 2020-06-05"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"- deadline new deadline /by Tomorrow"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003cdeadline description\u003e can either be text or a date in YYYY-MM-DD format."},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"### Adding a task with a date : `event`"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"Adds a task that has an event date associated with it."},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: event \\\u003ctask description\u003e /at \\\u003cevent date description\u003e"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"- event new task /at 2020-09-18"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"- event new event /at Tonight 8pm"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003cevent date description\u003e can either be text or a date in YYYY-MM-DD format."},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"### Listing all tasks : `list`"},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":"Shows a list of all tasks currently in the task list."},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: list"},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"### Setting a task as done : `done`"},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"Edits an existing task and marks it as done."},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"Format : done \\\u003ctask number\u003e"},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"- done 1"},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"- done 3"},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003ctask number\u003e is the number that appears on the left of a task when the list of tasks is displayed."},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"### Deleting a task : `delete`"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"Deletes an existing task from the task list."},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":101,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: delete \\\u003ctask number\u003e"},{"lineNumber":102,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":103,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":104,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":105,"author":{"gitId":"KishenKumarrrrr"},"content":"- delete 2"},{"lineNumber":106,"author":{"gitId":"KishenKumarrrrr"},"content":"- delete 4"},{"lineNumber":107,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":108,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":109,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":110,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003ctask number\u003e is the number that appears on the left of a task when the list of tasks is displayed."},{"lineNumber":111,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":112,"author":{"gitId":"KishenKumarrrrr"},"content":"### Searching for tasks : `search`"},{"lineNumber":113,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":114,"author":{"gitId":"KishenKumarrrrr"},"content":"Searches for tasks in the list that match the keywords."},{"lineNumber":115,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":116,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: search \\\u003ckeyword1 keyword2 etc...\u003e"},{"lineNumber":117,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":118,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":119,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":120,"author":{"gitId":"KishenKumarrrrr"},"content":"- search CS2103T"},{"lineNumber":121,"author":{"gitId":"KishenKumarrrrr"},"content":"- search homework tutorial"},{"lineNumber":122,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":123,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":124,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":125,"author":{"gitId":"KishenKumarrrrr"},"content":"- search takes in multiple keywords as arguments and tasks are matched to each keyword individually."},{"lineNumber":126,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":127,"author":{"gitId":"KishenKumarrrrr"},"content":"### Adding a task to reminders : `remind`"},{"lineNumber":128,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":129,"author":{"gitId":"KishenKumarrrrr"},"content":"Adds a task to the list of reminders"},{"lineNumber":130,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":131,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: remind \\\u003ctask number\u003e"},{"lineNumber":132,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":133,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":134,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":135,"author":{"gitId":"KishenKumarrrrr"},"content":"- remind 3"},{"lineNumber":136,"author":{"gitId":"KishenKumarrrrr"},"content":"- remind 5"},{"lineNumber":137,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":138,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":139,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":140,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003ctask number\u003e is the number that appears on the left of a task when the list of tasks is displayed."},{"lineNumber":141,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":142,"author":{"gitId":"KishenKumarrrrr"},"content":"### Retrieving events on a date : `getEvents`"},{"lineNumber":143,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":144,"author":{"gitId":"KishenKumarrrrr"},"content":"Retrieves all tasks that take place or have deadlines on the corresponding date."},{"lineNumber":145,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":146,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: getEvents \\\u003cdate\u003e"},{"lineNumber":147,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":148,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":149,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":150,"author":{"gitId":"KishenKumarrrrr"},"content":"- getEvents 2020-06-05"},{"lineNumber":151,"author":{"gitId":"KishenKumarrrrr"},"content":"- getEvents 2020-09-18"},{"lineNumber":152,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":153,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":154,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":155,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003cdate\u003e must be a valid date in YYYY-MM-DD format."},{"lineNumber":156,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":157,"author":{"gitId":"KishenKumarrrrr"},"content":"### Retrieving reminders : `getReminders`"},{"lineNumber":158,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":159,"author":{"gitId":"KishenKumarrrrr"},"content":"Retrieves all reminders."},{"lineNumber":160,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":161,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: getReminders"},{"lineNumber":162,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":163,"author":{"gitId":"KishenKumarrrrr"},"content":"### Exiting the program : `bye`"},{"lineNumber":164,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":165,"author":{"gitId":"KishenKumarrrrr"},"content":"Exits the program."},{"lineNumber":166,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":167,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: bye"},{"lineNumber":168,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":169,"author":{"gitId":"KishenKumarrrrr"},"content":"### Saving the data "},{"lineNumber":170,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":171,"author":{"gitId":"KishenKumarrrrr"},"content":"Duke Task Tracker automatically saves data in the hard disk every time a change is made. "},{"lineNumber":172,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":173,"author":{"gitId":"KishenKumarrrrr"},"content":"----------------------"},{"lineNumber":174,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":175,"author":{"gitId":"KishenKumarrrrr"},"content":"## Command Summary"},{"lineNumber":176,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":177,"author":{"gitId":"KishenKumarrrrr"},"content":"|          Action          |                          Format                          |"},{"lineNumber":178,"author":{"gitId":"KishenKumarrrrr"},"content":"| :----------------------: | :------------------------------------------------------: |"},{"lineNumber":179,"author":{"gitId":"KishenKumarrrrr"},"content":"|           Help           |                         `--help`                         |"},{"lineNumber":180,"author":{"gitId":"KishenKumarrrrr"},"content":"|      Add Basic Task      |                `todo \u003ctask description\u003e`                 |"},{"lineNumber":181,"author":{"gitId":"KishenKumarrrrr"},"content":"|  Add Task with Deadline  | `deadline \u003ctask description\u003e /by \u003cdeadline description\u003e` |"},{"lineNumber":182,"author":{"gitId":"KishenKumarrrrr"},"content":"| Add Task with Event Date | `event \u003ctask description\u003e /at \u003cevent date description\u003e`  |"},{"lineNumber":183,"author":{"gitId":"KishenKumarrrrr"},"content":"|           List           |                          `list`                          |"},{"lineNumber":184,"author":{"gitId":"KishenKumarrrrr"},"content":"|           Done           |                   `done \u003ctask number\u003e`                   |"},{"lineNumber":185,"author":{"gitId":"KishenKumarrrrr"},"content":"|          Delete          |                  `delete \u003ctask number\u003e`                  |"},{"lineNumber":186,"author":{"gitId":"KishenKumarrrrr"},"content":"|          Remind          |                  `remind \u003ctask number\u003e`                  |"},{"lineNumber":187,"author":{"gitId":"KishenKumarrrrr"},"content":"|          Search          |           `search \u003ckeyword1 keyword2 etc...\u003e`            |"},{"lineNumber":188,"author":{"gitId":"KishenKumarrrrr"},"content":"|        getEvents         |                    `getEvents \u003cdate\u003e`                    |"},{"lineNumber":189,"author":{"gitId":"KishenKumarrrrr"},"content":"|       getReminders       |                      `getReminders`                      |"},{"lineNumber":190,"author":{"gitId":"KishenKumarrrrr"},"content":"|           Exit           |                          `bye`                           |"}],"authorContributionMap":{"KishenKumarrrrr":190}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    mainClassName \u003d \"duke.gui.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"jar {"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"    manifest {"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"        attributes("},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"                \u0027Main-Class\u0027: \u0027duke.gui.Launcher\u0027"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"        )"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":24,"-":46}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"T | 1 | 1 | CS2103T Week 6 quiz"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":"E | 0 | 0 | CS2103T meeting | Tonight 8pm"},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"T | 0 | 1 | LSM1301 Week 6 content"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"D | 1 | 0 | CS2100 Assignment | 2020-09-18"}],"authorContributionMap":{"KishenKumarrrrr":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"Duke Task Tracker is a **desktop application for managing your tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Duke Task Tracker can get your task management done faster than traditional GUI applications. "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"* [Features](#features)"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Viewing help : **`--help`**](#viewing-help-----help)"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Adding a basic task : **`todo`**](#adding-a-basic-task--todo)"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Adding a task with a deadline : **`deadline`**](#adding-a-task-with-a-deadline--deadline)"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Adding a task with a date : **`event`**](#adding-a-task-with-a-date--event)"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Listing all tasks : **`list`**](#listing-all-tasks--list)"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Setting a task as done  : **`done`**](#setting-a-task-as-done--done)"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Deleting a task : **`delete`**](#deleting-a-task--delete)"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Searching for tasks : **`search`**](#searching-for-tasks--search)"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Adding a task to reminders : **`remind`**](#adding-a-task-to-reminders--remind)"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Retrieving events on a date : **`getEvents`**](#retrieving-events-on-a-date--getevents)"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Retrieving reminders : **`getReminders`**](#retrieving-reminders--getreminders)"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Exiting the program :  **`bye`**](#exiting-the-program--bye)"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"  * [Saving the data ](#saving-the-data)"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"----------------------------"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"### Features"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"- words in `\u003c....\u003e` are the user input."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"- items that have `/` before them are keywords for that command"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"### Viewing help : `-- help`"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"Shows a message explaining what commands Duke Task Tracker accepts and what the command formats are."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"Format : --help"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"### Adding a basic task : `todo`"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"Adds a task that only has a task description to the list of tasks."},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: todo \\\u003ctask description\u003e"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples: "},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"- todo A new Task "},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"- todo CS2100 Tutorial 4"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"### Adding a task with a deadline : `deadline`"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"Adds a task that has a deadline associated with it."},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: deadline \\\u003ctask description\u003e /by \\\u003cdeadline description\u003e"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"- deadline new task /by 2020-06-05"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"- deadline new deadline /by Tomorrow"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003cdeadline description\u003e can either be text or a date in YYYY-MM-DD format."},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"### Adding a task with a date : `event`"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"Adds a task that has an event date associated with it."},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: event \\\u003ctask description\u003e /at \\\u003cevent date description\u003e"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"- event new task /at 2020-09-18"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"- event new event /at Tonight 8pm"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003cevent date description\u003e can either be text or a date in YYYY-MM-DD format."},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"### Listing all tasks : `list`"},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":"Shows a list of all tasks currently in the task list."},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: list"},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"### Setting a task as done : `done`"},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"Edits an existing task and marks it as done."},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"Format : done \\\u003ctask number\u003e"},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"- done 1"},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"- done 3"},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003ctask number\u003e is the number that appears on the left of a task when the list of tasks is displayed."},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"### Deleting a task : `delete`"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"Deletes an existing task from the task list."},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":101,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: delete \\\u003ctask number\u003e"},{"lineNumber":102,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":103,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":104,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":105,"author":{"gitId":"KishenKumarrrrr"},"content":"- delete 2"},{"lineNumber":106,"author":{"gitId":"KishenKumarrrrr"},"content":"- delete 4"},{"lineNumber":107,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":108,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":109,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":110,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003ctask number\u003e is the number that appears on the left of a task when the list of tasks is displayed."},{"lineNumber":111,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":112,"author":{"gitId":"KishenKumarrrrr"},"content":"### Searching for tasks : `search`"},{"lineNumber":113,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":114,"author":{"gitId":"KishenKumarrrrr"},"content":"Searches for tasks in the list that match the keywords."},{"lineNumber":115,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":116,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: search \\\u003ckeyword1 keyword2 etc...\u003e"},{"lineNumber":117,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":118,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":119,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":120,"author":{"gitId":"KishenKumarrrrr"},"content":"- search CS2103T"},{"lineNumber":121,"author":{"gitId":"KishenKumarrrrr"},"content":"- search homework tutorial"},{"lineNumber":122,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":123,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":124,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":125,"author":{"gitId":"KishenKumarrrrr"},"content":"- search takes in multiple keywords as arguments and tasks are matched to each keyword individually."},{"lineNumber":126,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":127,"author":{"gitId":"KishenKumarrrrr"},"content":"### Adding a task to reminders : `remind`"},{"lineNumber":128,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":129,"author":{"gitId":"KishenKumarrrrr"},"content":"Adds a task to the list of reminders"},{"lineNumber":130,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":131,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: remind \\\u003ctask number\u003e"},{"lineNumber":132,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":133,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":134,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":135,"author":{"gitId":"KishenKumarrrrr"},"content":"- remind 3"},{"lineNumber":136,"author":{"gitId":"KishenKumarrrrr"},"content":"- remind 5"},{"lineNumber":137,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":138,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":139,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":140,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003ctask number\u003e is the number that appears on the left of a task when the list of tasks is displayed."},{"lineNumber":141,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":142,"author":{"gitId":"KishenKumarrrrr"},"content":"### Retrieving events on a date : `getEvents`"},{"lineNumber":143,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":144,"author":{"gitId":"KishenKumarrrrr"},"content":"Retrieves all tasks that take place or have deadlines on the corresponding date."},{"lineNumber":145,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":146,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: getEvents \\\u003cdate\u003e"},{"lineNumber":147,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":148,"author":{"gitId":"KishenKumarrrrr"},"content":"Examples:"},{"lineNumber":149,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":150,"author":{"gitId":"KishenKumarrrrr"},"content":"- getEvents 2020-06-05"},{"lineNumber":151,"author":{"gitId":"KishenKumarrrrr"},"content":"- getEvents 2020-09-18"},{"lineNumber":152,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":153,"author":{"gitId":"KishenKumarrrrr"},"content":"Notes:"},{"lineNumber":154,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":155,"author":{"gitId":"KishenKumarrrrr"},"content":"- \\\u003cdate\u003e must be a valid date in YYYY-MM-DD format."},{"lineNumber":156,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":157,"author":{"gitId":"KishenKumarrrrr"},"content":"### Retrieving reminders : `getReminders`"},{"lineNumber":158,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":159,"author":{"gitId":"KishenKumarrrrr"},"content":"Retrieves all reminders."},{"lineNumber":160,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":161,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: getReminders"},{"lineNumber":162,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":163,"author":{"gitId":"KishenKumarrrrr"},"content":"### Exiting the program : `bye`"},{"lineNumber":164,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":165,"author":{"gitId":"KishenKumarrrrr"},"content":"Exits the program."},{"lineNumber":166,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":167,"author":{"gitId":"KishenKumarrrrr"},"content":"Format: bye"},{"lineNumber":168,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":169,"author":{"gitId":"KishenKumarrrrr"},"content":"### Saving the data "},{"lineNumber":170,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":171,"author":{"gitId":"KishenKumarrrrr"},"content":"Duke Task Tracker automatically saves data in the hard disk every time a change is made. "},{"lineNumber":172,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":173,"author":{"gitId":"KishenKumarrrrr"},"content":"----------------------"},{"lineNumber":174,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":175,"author":{"gitId":"KishenKumarrrrr"},"content":"## Command Summary"},{"lineNumber":176,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":177,"author":{"gitId":"KishenKumarrrrr"},"content":"|          Action          |                          Format                          |"},{"lineNumber":178,"author":{"gitId":"KishenKumarrrrr"},"content":"| :----------------------: | :------------------------------------------------------: |"},{"lineNumber":179,"author":{"gitId":"KishenKumarrrrr"},"content":"|           Help           |                         `--help`                         |"},{"lineNumber":180,"author":{"gitId":"KishenKumarrrrr"},"content":"|      Add Basic Task      |                `todo \u003ctask description\u003e`                 |"},{"lineNumber":181,"author":{"gitId":"KishenKumarrrrr"},"content":"|  Add Task with Deadline  | `deadline \u003ctask description\u003e /by \u003cdeadline description\u003e` |"},{"lineNumber":182,"author":{"gitId":"KishenKumarrrrr"},"content":"| Add Task with Event Date | `event \u003ctask description\u003e /at \u003cevent date description\u003e`  |"},{"lineNumber":183,"author":{"gitId":"KishenKumarrrrr"},"content":"|           List           |                          `list`                          |"},{"lineNumber":184,"author":{"gitId":"KishenKumarrrrr"},"content":"|           Done           |                   `done \u003ctask number\u003e`                   |"},{"lineNumber":185,"author":{"gitId":"KishenKumarrrrr"},"content":"|          Delete          |                  `delete \u003ctask number\u003e`                  |"},{"lineNumber":186,"author":{"gitId":"KishenKumarrrrr"},"content":"|          Remind          |                  `remind \u003ctask number\u003e`                  |"},{"lineNumber":187,"author":{"gitId":"KishenKumarrrrr"},"content":"|          Search          |           `search \u003ckeyword1 keyword2 etc...\u003e`            |"},{"lineNumber":188,"author":{"gitId":"KishenKumarrrrr"},"content":"|        getEvents         |                    `getEvents \u003cdate\u003e`                    |"},{"lineNumber":189,"author":{"gitId":"KishenKumarrrrr"},"content":"|       getReminders       |                      `getReminders`                      |"},{"lineNumber":190,"author":{"gitId":"KishenKumarrrrr"},"content":"|           Exit           |                          `bye`                           |"}],"authorContributionMap":{"KishenKumarrrrr":179,"-":11}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a command that is received from the user via the command line."},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Command {"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    protected String commandDescription;"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    private boolean isExit;"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Command."},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandDescription Description of the command body."},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param isExit Determines if the command causes Duke to exit."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Command(String commandDescription, boolean isExit) {"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.commandDescription \u003d commandDescription;"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns whether the command will cause Duke to exit."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return true if command causes Duke to exit, false otherwise."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        return this.isExit;"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command and returns Duke\u0027s response."},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        return ui.showError(\"Can\u0027t execute generic command\");"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":45}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Deadline;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a Deadline Command when the user inputs"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":" * a new task with a deadline."},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String deadlineDate;"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    private LocalDate deadlineLocalDate;"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    private boolean hasLocalDate;"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a new instance of a Deadline Command with the appropriate"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     * deadline description and date of deadline given in non standard format."},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandDescription Description of the command body."},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param deadlineDate Date of deadline."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"    public DeadlineCommand(String commandDescription, String deadlineDate) {"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(commandDescription, false);"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.hasLocalDate \u003d false;"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a new instance of a Deadline Command with the appropriate"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     * command description and date of deadline given in standard format."},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandDescription Description of the command body."},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param deadlineLocalDate Date of deadline as a LocalDate object."},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"    public DeadlineCommand(String commandDescription, LocalDate deadlineLocalDate) {"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(commandDescription, false);"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.deadlineLocalDate \u003d deadlineLocalDate;"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.hasLocalDate \u003d true;"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command and returns Duke\u0027s response."},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a new Deadline object and adds it to the list"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"     * of tasks."},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadlineTask;"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (this.hasLocalDate) {"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"                deadlineTask \u003d new Deadline(commandDescription, deadlineLocalDate);"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"            } else {"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"                deadlineTask \u003d new Deadline(commandDescription, deadlineDate);"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"            taskList.addToList(deadlineTask);"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"            storage.saveData(taskList, ui);"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayAddedTask(deadlineTask, taskList.getListSize());"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (DukeException e) {"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"Invalid deadline task!\");"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":73}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a delete command for when the user wants to"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":" * delete a specific task."},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static final int SIZE_OFFSET \u003d -1;"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a DeleteCommand with the appropriate"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * task to be deleted as the command description."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandDescription Task to be deleted."},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    public DeleteCommand(String commandDescription) {"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(commandDescription, false);"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command and returns Duke\u0027s response."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Deletes the appropriate task from the task list."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert storage !\u003d null;"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d taskList.getTaskAtIndex(Integer.parseInt(commandDescription) + SIZE_OFFSET);"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"            taskList.removeFromList(Integer.parseInt(commandDescription) + SIZE_OFFSET);"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"            storage.saveData(taskList, ui);"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayDeletedTask(task, taskList.getListSize());"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"There\u0027s no such element!\");"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"Looks like your input was invalid! Enter --help for more information\");"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":50}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a Done command for when the user wants to mark"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":" * a task as done."},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"done\";"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static final int SIZE_OFFSET \u003d -1;"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Done Command with the appropriate"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * task to be set as done as the command description."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandDescription Description of the command body."},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    public DoneCommand(String commandDescription) {"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(commandDescription, false);"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command and returns Duke\u0027s response."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Marks the appropriate task as done."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d taskList.getTaskAtIndex(Integer.parseInt(commandDescription) + SIZE_OFFSET);"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"            task.setDone();"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"            storage.saveData(taskList, ui);"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayDoneTask(task);"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"There\u0027s no such element!\");"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"Looks like your input was invalid! Enter --help for more information\");"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":48}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Event;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents an Event command when the user wants to add"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":" * a new Event."},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"public class EventCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"event\";"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String eventDate;"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    private LocalDate eventLocalDate;"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    private boolean isLocalDateFormatted;"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a new instance of a Event Command with the appropriate"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     * event description and date of event given in non standard format."},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandDescription Description of event."},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param eventDate Date of event."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"    public EventCommand(String commandDescription, String eventDate) {"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(commandDescription, false);"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.isLocalDateFormatted \u003d false;"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a new instance of a Event Command with the appropriate"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     * event description and date of event given in standard format."},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandDescription Description of the event."},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param eventLocalDate Date of event as a LocalDate object."},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"    public EventCommand(String commandDescription, LocalDate eventLocalDate) {"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(commandDescription, false);"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.eventLocalDate \u003d eventLocalDate;"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.isLocalDateFormatted \u003d true;"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command and returns Duke\u0027s response."},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a new Event and adds it to the list of tasks."},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert storage !\u003d null;"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event eventTask;"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (this.isLocalDateFormatted) {"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"                eventTask \u003d new Event(commandDescription, eventLocalDate);"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"            } else {"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"                eventTask \u003d new Event(commandDescription, eventDate);"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"            taskList.addToList(eventTask);"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"            storage.saveData(taskList, ui);"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayAddedTask(eventTask, taskList.getListSize());"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (DukeException e) {"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"Invalid event task!\");"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":74}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents an Exit command that causes Duke to terminate."},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates instance of ExitCommand."},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    public ExitCommand() {"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(\"\", true);"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command and returns Duke\u0027s response."},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Saves all current tasks in the list to the hard drive."},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert storage !\u003d null;"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        storage.saveData(taskList, ui);"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"        return ui.displayGoodbye();"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":36}},{"path":"src/main/java/duke/commands/GetEventsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a getEvents command when the user"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":" * wants to search for tasks that have a particular due date."},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"public class GetEventsCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"getEvents\";"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    private LocalDate localDate;"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a GetEvents command with the appropriate"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * date the user is looking for."},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param localDate Date which user wants to search for."},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    public GetEventsCommand(LocalDate localDate) {"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(\"GetEvents command called\", false);"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.localDate \u003d localDate;"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command."},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Searches the list of tasks for tasks that have a due date"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"     * matching the date given as input and returns them."},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert storage !\u003d null;"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"            ArrayList\u003cTask\u003e listOfTasks \u003d getTasksMatchingDate(taskList, this.localDate);"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"            storage.saveData(taskList, ui);"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayEventsOnDate(listOfTasks, localDate);"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"Please input a valid date format\");"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"There\u0027s no such element!\");"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"    private ArrayList\u003cTask\u003e getTasksMatchingDate(TaskList taskList, LocalDate localDate) {"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d taskList.getTaskAtIndex(i);"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (task.hasDate() \u0026\u0026 task.getDate().isEqual(localDate)) {"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"                listOfTasks.add(task);"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"        return listOfTasks;"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":66}},{"path":"src/main/java/duke/commands/GetRemindersCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"public class GetRemindersCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"getReminders\";"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    public GetRemindersCommand() {"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(\"GetReminders command called\", false);"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Searches the list of tasks for tasks that have reminders set and returns them."},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert storage !\u003d null;"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"            ArrayList\u003cTask\u003e listOfTasks \u003d getTasksWithReminders(taskList);"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"            storage.saveData(taskList, ui);"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayTasksWithReminders(listOfTasks);"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"There\u0027s no such element!\");"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"    private ArrayList\u003cTask\u003e getTasksWithReminders(TaskList taskList) {"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d taskList.getTaskAtIndex(i);"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (task.getReminderStatus()) {"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"                listOfTasks.add(task);"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"        return listOfTasks;"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":49}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a help command when the user wants to see"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":" * the features Duke offers."},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"public class HelpCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"--help\";"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a HelpCommand."},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    public HelpCommand() {"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(\"Help command called\", false);"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command."},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Shows the help menu."},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        return ui.showHelp();"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":35}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents an Invalid command."},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    private final String message \u003d \"Invalid command/format! check --help for more info\";"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of an Invalid Command."},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    public InvalidCommand() {"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(\"Invalid command\", false);"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command."},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Shows the user an error message."},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"        return ui.showError(message);"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":34}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a list command when the user wants to see"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":" * a list of all tasks."},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"public class ListCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a List Command."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    public ListCommand() {"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(\"List command called\", false);"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command."},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Shows the user a list of all tasks."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui       User interface object."},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage  Storage object."},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"            getAllTasks(tasks, taskList);"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"There\u0027s no such element!\");"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        return ui.displayAllItems(tasks);"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"    private void getAllTasks(ArrayList\u003cTask\u003e tasks, TaskList taskList) throws IndexOutOfBoundsException {"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d taskList.getTaskAtIndex(i);"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"            tasks.add(task);"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":52}},{"path":"src/main/java/duke/commands/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"public class RemindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static final int SIZE_OFFSET \u003d -1;"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Remind Command with the appropriate"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"     * task to be flagged for reminder as the command description."},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandDescription Description of the command body."},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    public RemindCommand(String commandDescription) {"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(commandDescription, false);"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command and returns Duke\u0027s response."},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Marks the appropriate task for reminders."},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d taskList.getTaskAtIndex(Integer.parseInt(commandDescription) + SIZE_OFFSET);"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"            task.setReminder();"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"            storage.saveData(taskList, ui);"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayRemindTask(task);"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"There\u0027s no such element!\");"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"Looks like your input was invalid! Enter --help for more information\");"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":45}},{"path":"src/main/java/duke/commands/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a seach command when the user wants to"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":" * search for tasks with a specific keyword."},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"public class SearchCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"search\";"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String[] commandKeywords;"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Search Command with the appropriate"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     * search keyword."},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandKeywords Search Keywords."},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"    public SearchCommand(String... commandKeywords) {"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(\"Search Command\", false);"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.commandKeywords \u003d commandKeywords;"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the Command."},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Searches the list of tasks and prints the tasks that"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     * match the keyword."},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui       User interface object."},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage  Storage object."},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        Set\u003cTask\u003e tasksFound \u003d new HashSet\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"            for (String keyword : commandKeywords) {"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"                findTasksWithKeyword(keyword, tasksFound, taskList);"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(tasksFound);"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayAllItems(tasks);"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"There\u0027s no such element!\");"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"    private void findTasksWithKeyword(String keyword, Set\u003cTask\u003e taskSet, TaskList taskList)"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"            throws IndexOutOfBoundsException {"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"        String keywordPattern \u003d \"(.*)\" + keyword + \"(.*)\";"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d taskList.getTaskAtIndex(i);"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (task.toString().matches(keywordPattern)) {"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"                taskSet.add(task);"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":67}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.ToDo;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a Todo command when the user wants to add"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":" * a new todo item."},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"public class TodoCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a todo command with the appropriate description."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param commandBody Description of todo item."},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    public TodoCommand(String commandBody) {"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(commandBody, false);"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Executes the command."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a new todo item and adds it to the list of tasks."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskList List of tasks currently being tracked."},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui User interface object."},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param storage Storage object."},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return String of Duke response."},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert storage !\u003d null;"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d new ToDo(commandDescription);"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"            taskList.addToList(task);"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"            storage.saveData(taskList, ui);"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.displayAddedTask(task, taskList.getListSize());"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (DukeException e) {"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"Invalid todo task!\");"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":48}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a DukeException."},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the prefix to all Duke exception messages."},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Prefix to Duke exception message."},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"      ☹ OOPS!!!\";"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":16}},{"path":"src/main/java/duke/exceptions/InvalidDukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents an Invalid Duke command exception."},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"public class InvalidDukeCommand extends DukeException {"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Message shown to the user when they enter an invalid command."},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Error message string."},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"        return super.toString() + \" I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":17}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a dialog box that is displayed to the user in the GUI."},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"public class DialogBox extends HBox {"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Label text;"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    private ImageView displayPicture;"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a dialog box with the appropriate"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     * text and display picture."},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param l Label containing text to be displayed."},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param iv ImageView to be displayed next to text."},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"        text \u003d l;"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"        displayPicture \u003d iv;"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"        text.setWrapText(true);"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"    private void flip() {"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a dialog box for the user input."},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param l Label containing the user input."},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param iv ImageView of user display picture."},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return User input dialog box."},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"        db.setStyle(\"-fx-background-radius: 20px; -fx-background-color: #F7F07B;\");"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"        return db;"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a dialog box for the Duke response."},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param l Label containing Duke\u0027s response."},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param iv ImageView of Duke display picture."},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Duke output dialog box."},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"        db.flip();"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"        db.setStyle(\"-fx-background-radius: 20px; -fx-background-color: #35C9DD;\");"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"        return db;"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":68}},{"path":"src/main/java/duke/gui/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.Command;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.InvalidCommand;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.exceptions.InvalidDukeCommand;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.parser.Parser;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.application.Application;"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.geometry.Insets;"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.Scene;"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.control.Button;"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.control.Label;"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.image.Image;"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.stage.Stage;"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.util.Duration;"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents Duke object. Is responsible for the overall running of Duke."},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":" *"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":" * @author Kishen Ashok Kumar"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Duke extends Application {"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"    private VBox dialogContainer;"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"    private TextField userInput;"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Button sendButton;"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Scene scene;"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Storage store;"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"    private TaskList tasks;"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Ui ui;"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Image userImage;"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Image dukeImage;"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Image iconImage;"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"    private boolean isExit;"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a Duke object and sets all the attributes"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"     * to null."},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Duke() {"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"        store \u003d new Storage(\"./data\", \"duke.txt\");"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"        File loadFile \u003d store.loadData(ui);"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (loadFile \u003d\u003d null) {"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"            tasks \u003d new TaskList(loadFile);"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"        userImage \u003d new Image("},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"                this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"        dukeImage \u003d new Image("},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"                this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"        iconImage \u003d new Image("},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"                this.getClass().getResourceAsStream(\"/images/DaIcon.png\"));"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates a Duke object with the respective directory and file paths"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"     * for loading and saving of task list."},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param directoryPath directory path containing text file to load."},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param filePath name of text file to load."},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Duke(String directoryPath, String filePath) {"},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":"        ui \u003d new Ui();"},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"        store \u003d new Storage(directoryPath, filePath);"},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":"        File loadFile \u003d store.loadData(ui);"},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (loadFile !\u003d null) {"},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":"            tasks \u003d new TaskList(loadFile);"},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"        } else {"},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Runs the instance of Duke."},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Is responsible for the coordination of all Duke functions."},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void run() {"},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":"        ui.displayGreeting();"},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"        boolean isExit \u003d false;"},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":"        while (!isExit) {"},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"            try {"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"                Command command \u003d Parser.parse(fullCommand);"},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":"                command.execute(tasks, ui, store);"},{"lineNumber":101,"author":{"gitId":"KishenKumarrrrr"},"content":"                isExit \u003d command.isExit();"},{"lineNumber":102,"author":{"gitId":"KishenKumarrrrr"},"content":"                if (!isExit) {"},{"lineNumber":103,"author":{"gitId":"KishenKumarrrrr"},"content":"                    ui.displayBlankLine();"},{"lineNumber":104,"author":{"gitId":"KishenKumarrrrr"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"KishenKumarrrrr"},"content":"            } catch (InvalidDukeCommand e) {"},{"lineNumber":106,"author":{"gitId":"KishenKumarrrrr"},"content":"                new InvalidCommand().execute(tasks, ui, store);"},{"lineNumber":107,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":109,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":112,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Duke object and runs it."},{"lineNumber":114,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param args Command line arguments."},{"lineNumber":116,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static void main(String[] args) {"},{"lineNumber":118,"author":{"gitId":"KishenKumarrrrr"},"content":"        Duke duke \u003d new Duke(\"./data\", \"duke.txt\");"},{"lineNumber":119,"author":{"gitId":"KishenKumarrrrr"},"content":"        duke.run();"},{"lineNumber":120,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":122,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Starts JavaFX."},{"lineNumber":124,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param stage Stage object to show the user."},{"lineNumber":125,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":127,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void start(Stage stage) {"},{"lineNumber":128,"author":{"gitId":"KishenKumarrrrr"},"content":"        //Step 1. Setting up required components"},{"lineNumber":129,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":130,"author":{"gitId":"KishenKumarrrrr"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":131,"author":{"gitId":"KishenKumarrrrr"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":132,"author":{"gitId":"KishenKumarrrrr"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":133,"author":{"gitId":"KishenKumarrrrr"},"content":"        dialogContainer.setStyle(\"-fx-background-image: url(\\\"/images/DaBackground.png\\\");\");;"},{"lineNumber":134,"author":{"gitId":"KishenKumarrrrr"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":135,"author":{"gitId":"KishenKumarrrrr"},"content":"        dialogContainer.setSpacing(20);"},{"lineNumber":136,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":137,"author":{"gitId":"KishenKumarrrrr"},"content":"        userInput \u003d new TextField();"},{"lineNumber":138,"author":{"gitId":"KishenKumarrrrr"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":139,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":140,"author":{"gitId":"KishenKumarrrrr"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":141,"author":{"gitId":"KishenKumarrrrr"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":142,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":143,"author":{"gitId":"KishenKumarrrrr"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":144,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":145,"author":{"gitId":"KishenKumarrrrr"},"content":"        stage.setScene(scene);"},{"lineNumber":146,"author":{"gitId":"KishenKumarrrrr"},"content":"        stage.show();"},{"lineNumber":147,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":148,"author":{"gitId":"KishenKumarrrrr"},"content":"        // more code to be added here later"},{"lineNumber":149,"author":{"gitId":"KishenKumarrrrr"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":150,"author":{"gitId":"KishenKumarrrrr"},"content":"        stage.setTitle(\"Duke Task Tracker\");"},{"lineNumber":151,"author":{"gitId":"KishenKumarrrrr"},"content":"        stage.getIcons().add(iconImage);"},{"lineNumber":152,"author":{"gitId":"KishenKumarrrrr"},"content":"        stage.setResizable(false);"},{"lineNumber":153,"author":{"gitId":"KishenKumarrrrr"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":154,"author":{"gitId":"KishenKumarrrrr"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":155,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":156,"author":{"gitId":"KishenKumarrrrr"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":157,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":158,"author":{"gitId":"KishenKumarrrrr"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":159,"author":{"gitId":"KishenKumarrrrr"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":160,"author":{"gitId":"KishenKumarrrrr"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":161,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":162,"author":{"gitId":"KishenKumarrrrr"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":163,"author":{"gitId":"KishenKumarrrrr"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":164,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":165,"author":{"gitId":"KishenKumarrrrr"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":166,"author":{"gitId":"KishenKumarrrrr"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":167,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":168,"author":{"gitId":"KishenKumarrrrr"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":169,"author":{"gitId":"KishenKumarrrrr"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":170,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":171,"author":{"gitId":"KishenKumarrrrr"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":172,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":173,"author":{"gitId":"KishenKumarrrrr"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":174,"author":{"gitId":"KishenKumarrrrr"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":175,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":176,"author":{"gitId":"KishenKumarrrrr"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":177,"author":{"gitId":"KishenKumarrrrr"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":178,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":179,"author":{"gitId":"KishenKumarrrrr"},"content":"        ImageView dukePic \u003d new ImageView(dukeImage);"},{"lineNumber":180,"author":{"gitId":"KishenKumarrrrr"},"content":"        dukePic.setClip(new Circle(50, 50, 50));"},{"lineNumber":181,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":182,"author":{"gitId":"KishenKumarrrrr"},"content":"        DialogBox dukeGreeting \u003d DialogBox.getDukeDialog(new Label(ui.displayGreeting()), dukePic);"},{"lineNumber":183,"author":{"gitId":"KishenKumarrrrr"},"content":"        dukeGreeting.setStyle(\"-fx-background-radius: 20px; -fx-background-color: #35C9DD;\");"},{"lineNumber":184,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":185,"author":{"gitId":"KishenKumarrrrr"},"content":"        Insets padding \u003d new Insets(10, 0, 10, 0);"},{"lineNumber":186,"author":{"gitId":"KishenKumarrrrr"},"content":"        dukeGreeting.setPadding(padding);"},{"lineNumber":187,"author":{"gitId":"KishenKumarrrrr"},"content":"        dukeGreeting.setSpacing(10);"},{"lineNumber":188,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":189,"author":{"gitId":"KishenKumarrrrr"},"content":"        dialogContainer.getChildren().addAll(dukeGreeting);"},{"lineNumber":190,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":191,"author":{"gitId":"KishenKumarrrrr"},"content":"        // more code to be added here later"},{"lineNumber":192,"author":{"gitId":"KishenKumarrrrr"},"content":"        //Step 3. Add functionality to handle user input."},{"lineNumber":193,"author":{"gitId":"KishenKumarrrrr"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":194,"author":{"gitId":"KishenKumarrrrr"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":195,"author":{"gitId":"KishenKumarrrrr"},"content":"            userInput.clear();"},{"lineNumber":196,"author":{"gitId":"KishenKumarrrrr"},"content":"        });"},{"lineNumber":197,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":198,"author":{"gitId":"KishenKumarrrrr"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":199,"author":{"gitId":"KishenKumarrrrr"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":200,"author":{"gitId":"KishenKumarrrrr"},"content":"            userInput.clear();"},{"lineNumber":201,"author":{"gitId":"KishenKumarrrrr"},"content":"        });"},{"lineNumber":202,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":203,"author":{"gitId":"KishenKumarrrrr"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":204,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":205,"author":{"gitId":"KishenKumarrrrr"},"content":"        //Part 3. Add functionality to handle user input."},{"lineNumber":206,"author":{"gitId":"KishenKumarrrrr"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":207,"author":{"gitId":"KishenKumarrrrr"},"content":"            handleUserInput();"},{"lineNumber":208,"author":{"gitId":"KishenKumarrrrr"},"content":"        });"},{"lineNumber":209,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":210,"author":{"gitId":"KishenKumarrrrr"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":211,"author":{"gitId":"KishenKumarrrrr"},"content":"            handleUserInput();"},{"lineNumber":212,"author":{"gitId":"KishenKumarrrrr"},"content":"        });"},{"lineNumber":213,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":215,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":216,"author":{"gitId":"KishenKumarrrrr"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":217,"author":{"gitId":"KishenKumarrrrr"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":218,"author":{"gitId":"KishenKumarrrrr"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":219,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":220,"author":{"gitId":"KishenKumarrrrr"},"content":"        return textToAdd;"},{"lineNumber":221,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":223,"author":{"gitId":"KishenKumarrrrr"},"content":"    private void handleUserInput() {"},{"lineNumber":224,"author":{"gitId":"KishenKumarrrrr"},"content":"        String invalidInput \u003d \"Looks like your input was invalid! Enter --help for more information\";"},{"lineNumber":225,"author":{"gitId":"KishenKumarrrrr"},"content":"        String invalidCommand \u003d \"Invalid command/format! check --help for more info\";"},{"lineNumber":226,"author":{"gitId":"KishenKumarrrrr"},"content":"        String invalidDeadline \u003d \"Invalid deadline task!\";"},{"lineNumber":227,"author":{"gitId":"KishenKumarrrrr"},"content":"        String invalidEvent \u003d \"Invalid event task!\";"},{"lineNumber":228,"author":{"gitId":"KishenKumarrrrr"},"content":"        String invalidTodo \u003d \"Invalid todo task!\";"},{"lineNumber":229,"author":{"gitId":"KishenKumarrrrr"},"content":"        String noSuchElement \u003d \"There\u0027s no such element!\";"},{"lineNumber":230,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":231,"author":{"gitId":"KishenKumarrrrr"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":232,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":233,"author":{"gitId":"KishenKumarrrrr"},"content":"        String response \u003d getResponse((userInput.getText()));"},{"lineNumber":234,"author":{"gitId":"KishenKumarrrrr"},"content":"        boolean isInvalidCommandOrElement \u003d response.equals(invalidCommand) || response.equals(noSuchElement)"},{"lineNumber":235,"author":{"gitId":"KishenKumarrrrr"},"content":"                                                    || response.equals(invalidInput);"},{"lineNumber":236,"author":{"gitId":"KishenKumarrrrr"},"content":"        boolean isInvalidTaskFormat \u003d response.equals(invalidDeadline) || response.equals(invalidEvent)"},{"lineNumber":237,"author":{"gitId":"KishenKumarrrrr"},"content":"                                              || response.equals(invalidTodo);"},{"lineNumber":238,"author":{"gitId":"KishenKumarrrrr"},"content":"        Label dukeText \u003d new Label(response);"},{"lineNumber":239,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (isInvalidCommandOrElement || isInvalidTaskFormat) {"},{"lineNumber":240,"author":{"gitId":"KishenKumarrrrr"},"content":"            dukeText.setStyle(\"-fx-text-fill: rgb(100%, 0%, 0%);\");"},{"lineNumber":241,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":242,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":243,"author":{"gitId":"KishenKumarrrrr"},"content":"        ImageView dukePicture \u003d new ImageView(dukeImage);"},{"lineNumber":244,"author":{"gitId":"KishenKumarrrrr"},"content":"        ImageView userPicture \u003d new ImageView(userImage);"},{"lineNumber":245,"author":{"gitId":"KishenKumarrrrr"},"content":"        Insets padding \u003d new Insets(10, 0, 10, 0);"},{"lineNumber":246,"author":{"gitId":"KishenKumarrrrr"},"content":"        dukePicture.setClip(new Circle(50, 50, 50));"},{"lineNumber":247,"author":{"gitId":"KishenKumarrrrr"},"content":"        userPicture.setClip(new Circle(50, 50, 50));"},{"lineNumber":248,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":249,"author":{"gitId":"KishenKumarrrrr"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(userText, userPicture);"},{"lineNumber":250,"author":{"gitId":"KishenKumarrrrr"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(dukeText, dukePicture);"},{"lineNumber":251,"author":{"gitId":"KishenKumarrrrr"},"content":"        userDialog.setPadding(padding);"},{"lineNumber":252,"author":{"gitId":"KishenKumarrrrr"},"content":"        dukeDialog.setPadding(padding);"},{"lineNumber":253,"author":{"gitId":"KishenKumarrrrr"},"content":"        userDialog.setSpacing(10);"},{"lineNumber":254,"author":{"gitId":"KishenKumarrrrr"},"content":"        dukeDialog.setSpacing(10);"},{"lineNumber":255,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":256,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":257,"author":{"gitId":"KishenKumarrrrr"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":258,"author":{"gitId":"KishenKumarrrrr"},"content":"                userDialog,"},{"lineNumber":259,"author":{"gitId":"KishenKumarrrrr"},"content":"                dukeDialog"},{"lineNumber":260,"author":{"gitId":"KishenKumarrrrr"},"content":"        );"},{"lineNumber":261,"author":{"gitId":"KishenKumarrrrr"},"content":"        userInput.clear();"},{"lineNumber":262,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":263,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (isExit) {"},{"lineNumber":264,"author":{"gitId":"KishenKumarrrrr"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));"},{"lineNumber":265,"author":{"gitId":"KishenKumarrrrr"},"content":"            pause.setOnFinished(event -\u003e System.exit(0));"},{"lineNumber":266,"author":{"gitId":"KishenKumarrrrr"},"content":"            pause.play();"},{"lineNumber":267,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":268,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":271,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String getResponse(String input) {"},{"lineNumber":272,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":273,"author":{"gitId":"KishenKumarrrrr"},"content":"            Command command \u003d Parser.parse(input);;"},{"lineNumber":274,"author":{"gitId":"KishenKumarrrrr"},"content":"            String response \u003d command.execute(tasks, ui, store);"},{"lineNumber":275,"author":{"gitId":"KishenKumarrrrr"},"content":"            isExit \u003d command.isExit();"},{"lineNumber":276,"author":{"gitId":"KishenKumarrrrr"},"content":"            return response;"},{"lineNumber":277,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (InvalidDukeCommand e) {"},{"lineNumber":278,"author":{"gitId":"KishenKumarrrrr"},"content":"            String response \u003d new InvalidCommand().execute(tasks, ui, store);"},{"lineNumber":279,"author":{"gitId":"KishenKumarrrrr"},"content":"            return response;"},{"lineNumber":280,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":281,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":282,"-":1}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":12}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.regex.Matcher;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.Command;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.DeadlineCommand;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.EventCommand;"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.ExitCommand;"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.GetEventsCommand;"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.GetRemindersCommand;"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.HelpCommand;"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.InvalidCommand;"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.ListCommand;"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.RemindCommand;"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.SearchCommand;"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.exceptions.InvalidDukeCommand;"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a Parser that will read User Input from the command"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":" * line and identify the appropriate command to be executed."},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Parser {"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S+)(?\u003cbody\u003e.*)\");"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Tries to identify the format of the date input by the user"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"     * and returns a LocalDate object if it has the correct format."},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param date Date input by the user."},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return LocalDate object if date has the correct format. Otherwise, null."},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static LocalDate parseDate(String date) {"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"        LocalDate localDate;"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"            localDate \u003d LocalDate.parse(date);"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"            localDate \u003d null;"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"        return localDate;"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Parses the user input and identifies which command"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"     * to execute."},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param s User input through command line."},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Appropriate Command to be executed."},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"    public static Command parse(String s) throws InvalidDukeCommand {"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher((s.trim()));"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (!matcher.matches()) {"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new InvalidCommand();"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"        String commandWord \u003d matcher.group(\"command\");"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"        String commandBody \u003d matcher.group(\"body\");"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"        switch (commandWord) {"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"        case TodoCommand.COMMAND_WORD:"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"            return prepareTodo(commandBody.strip());"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"        case DeadlineCommand.COMMAND_WORD:"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"            return prepareDeadline(commandBody.strip());"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"        case EventCommand.COMMAND_WORD:"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"            return prepareEvent(commandBody.strip());"},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":"        case DeleteCommand.COMMAND_WORD:"},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new DeleteCommand(commandBody.strip());"},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":"        case HelpCommand.COMMAND_WORD:"},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new HelpCommand();"},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":"        case DoneCommand.COMMAND_WORD:"},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new DoneCommand(commandBody.strip());"},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"        case RemindCommand.COMMAND_WORD:"},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new RemindCommand(commandBody.strip());"},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":"        case ListCommand.COMMAND_WORD:"},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new ListCommand();"},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"        case ExitCommand.COMMAND_WORD:"},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new ExitCommand();"},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"        case GetEventsCommand.COMMAND_WORD:"},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":"            return prepareGetEvents(commandBody.strip());"},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":"        case GetRemindersCommand.COMMAND_WORD:"},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new GetRemindersCommand();"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":"        case SearchCommand.COMMAND_WORD:"},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"            return prepareSearch(commandBody.strip());"},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":"            //Fallthrough"},{"lineNumber":101,"author":{"gitId":"KishenKumarrrrr"},"content":"        default:"},{"lineNumber":102,"author":{"gitId":"KishenKumarrrrr"},"content":"            throw new InvalidDukeCommand();"},{"lineNumber":103,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":104,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":107,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Ensures todo command has the correct format and creates a TodoCommand object if it does."},{"lineNumber":108,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Otherwise, returns an InvalidCommand object."},{"lineNumber":109,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static Command prepareTodo(String commandBody) {"},{"lineNumber":110,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (commandBody.length() \u003c\u003d 0) {"},{"lineNumber":111,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new InvalidCommand();"},{"lineNumber":112,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"KishenKumarrrrr"},"content":"        return new TodoCommand(commandBody.strip());"},{"lineNumber":114,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":116,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Ensures deadline command has the correct format and creates a DeadlineCommand object if it does."},{"lineNumber":117,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Otherwise, returns an InvalidCommand object."},{"lineNumber":118,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static Command prepareDeadline(String commandBody) {"},{"lineNumber":119,"author":{"gitId":"KishenKumarrrrr"},"content":"        String[] splitParts \u003d commandBody.split((\" /by \"));"},{"lineNumber":120,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"KishenKumarrrrr"},"content":"            boolean insufficientArguments \u003d splitParts.length !\u003d 2;"},{"lineNumber":122,"author":{"gitId":"KishenKumarrrrr"},"content":"            boolean argumentsEmpty \u003d splitParts[0].strip().length() \u003d\u003d 0 || splitParts[1].strip().length() \u003d\u003d 0;"},{"lineNumber":123,"author":{"gitId":"KishenKumarrrrr"},"content":"            boolean isNotValid \u003d insufficientArguments || argumentsEmpty;"},{"lineNumber":124,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (isNotValid) {"},{"lineNumber":125,"author":{"gitId":"KishenKumarrrrr"},"content":"                return new InvalidCommand();"},{"lineNumber":126,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"KishenKumarrrrr"},"content":"            LocalDate localDate \u003d Parser.parseDate(splitParts[1].strip());"},{"lineNumber":128,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (localDate !\u003d null) {"},{"lineNumber":129,"author":{"gitId":"KishenKumarrrrr"},"content":"                return new DeadlineCommand(splitParts[0].stripLeading(), localDate);"},{"lineNumber":130,"author":{"gitId":"KishenKumarrrrr"},"content":"            } else {"},{"lineNumber":131,"author":{"gitId":"KishenKumarrrrr"},"content":"                return new DeadlineCommand(splitParts[0].stripLeading(), splitParts[1].strip());"},{"lineNumber":132,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":134,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new InvalidCommand();"},{"lineNumber":135,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":138,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Ensures event command has the correct format and creates a EventCommand object if it does."},{"lineNumber":139,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Otherwise, returns an InvalidCommand object."},{"lineNumber":140,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static Command prepareEvent(String commandBody) {"},{"lineNumber":141,"author":{"gitId":"KishenKumarrrrr"},"content":"        String[] splitParts \u003d commandBody.split((\" /at \"));"},{"lineNumber":142,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":143,"author":{"gitId":"KishenKumarrrrr"},"content":"            boolean insufficientArguments \u003d splitParts.length !\u003d 2;"},{"lineNumber":144,"author":{"gitId":"KishenKumarrrrr"},"content":"            boolean argumentsEmpty \u003d splitParts[0].strip().length() \u003d\u003d 0 || splitParts[1].strip().length() \u003d\u003d 0;"},{"lineNumber":145,"author":{"gitId":"KishenKumarrrrr"},"content":"            boolean isNotValid \u003d insufficientArguments || argumentsEmpty;"},{"lineNumber":146,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (isNotValid) {"},{"lineNumber":147,"author":{"gitId":"KishenKumarrrrr"},"content":"                return new InvalidCommand();"},{"lineNumber":148,"author":{"gitId":"KishenKumarrrrr"},"content":"            } else {"},{"lineNumber":149,"author":{"gitId":"KishenKumarrrrr"},"content":"                LocalDate localDate \u003d Parser.parseDate(splitParts[1].strip());"},{"lineNumber":150,"author":{"gitId":"KishenKumarrrrr"},"content":"                if (localDate !\u003d null) {"},{"lineNumber":151,"author":{"gitId":"KishenKumarrrrr"},"content":"                    return new EventCommand(splitParts[0].stripLeading(), localDate);"},{"lineNumber":152,"author":{"gitId":"KishenKumarrrrr"},"content":"                } else {"},{"lineNumber":153,"author":{"gitId":"KishenKumarrrrr"},"content":"                    return new EventCommand(splitParts[0].stripLeading(), splitParts[1].strip());"},{"lineNumber":154,"author":{"gitId":"KishenKumarrrrr"},"content":"                }"},{"lineNumber":155,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":157,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new InvalidCommand();"},{"lineNumber":158,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":161,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Ensures getEvents command has the correct format and creates a GetEventsCommand object if it does."},{"lineNumber":162,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Otherwise, returns an InvalidCommand object."},{"lineNumber":163,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static Command prepareGetEvents(String commandBody) {"},{"lineNumber":164,"author":{"gitId":"KishenKumarrrrr"},"content":"        String date \u003d commandBody.strip();"},{"lineNumber":165,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":166,"author":{"gitId":"KishenKumarrrrr"},"content":"            LocalDate localDate \u003d LocalDate.parse(date);"},{"lineNumber":167,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new GetEventsCommand(localDate);"},{"lineNumber":168,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":169,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new InvalidCommand();"},{"lineNumber":170,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":173,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Ensures the search keyword is a non-empty string and creates a SearchCommand object if it is."},{"lineNumber":174,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Otherwise, returns an InvalidCommand object."},{"lineNumber":175,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static Command prepareSearch(String commandBody) {"},{"lineNumber":176,"author":{"gitId":"KishenKumarrrrr"},"content":"        String[] keywords \u003d commandBody.split(\" \");"},{"lineNumber":177,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (keywords.length \u003d\u003d 0) {"},{"lineNumber":178,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new InvalidCommand();"},{"lineNumber":179,"author":{"gitId":"KishenKumarrrrr"},"content":"        } else {"},{"lineNumber":180,"author":{"gitId":"KishenKumarrrrr"},"content":"            return new SearchCommand(keywords);"},{"lineNumber":181,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":184,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":184}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents the storage capabilities of Duke."},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String directoryPath;"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String fileName;"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Storage object with the appropriate"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     * directory path and file name to use."},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param directoryPath directory path containing text file to load."},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param fileName name of text file to load."},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Storage(String directoryPath, String fileName) {"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.directoryPath \u003d directoryPath;"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Tries to load data from the given path."},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"     * If unable, creates a new file for Duke to use."},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui Ui object."},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return File that Duke will use to read/write data."},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"    public File loadData(Ui ui) {"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert directoryPath !\u003d null;"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert fileName !\u003d null;"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        File directory \u003d new File(directoryPath);"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (!directory.exists()) {"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"            directory.mkdirs();"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"        File file \u003d new File(directoryPath + \"/\" + fileName);"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"            file.createNewFile();"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IOException e) {"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"            ui.showLoadingError(e.getMessage());"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"        return file;"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Tries to save data to the given path."},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"     * If unable, displays and error to the user."},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param tasks List of tasks."},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param ui Ui object."},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String saveData(TaskList tasks, Ui ui) {"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert ui !\u003d null;"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert tasks !\u003d null;"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert directoryPath !\u003d null;"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert fileName !\u003d null;"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"        File file \u003d new File(directoryPath + \"/\" + fileName);"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"            resetFileContents(directoryPath + \"/\" + fileName);"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"            appendTasksToFile(tasks);"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IOException e) {"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"Something went wrong while trying to save your data... :/\");"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"            return ui.showError(\"There\u0027s no such element!\");"},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"\";"},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":"    private void appendTasksToFile(TaskList tasks) throws IOException {"},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"        for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {"},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":"            Task task \u003d tasks.getTaskAtIndex(i);"},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"            appendToFile(directoryPath + \"/\" + fileName, task.getSaveFormat() + \"\\n\");"},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Resets the contents of the file at the given file path."},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":"    private void resetFileContents(String filePath) throws IOException {"},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":"        fileWriter.write(\"\");"},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"        fileWriter.close();"},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"    //Appends data to file."},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":"    private void appendToFile(String filePath, String lineToAdd) throws IOException {"},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert lineToAdd.length() \u003e 0;"},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, true);"},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"        fileWriter.write(lineToAdd);"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":"        fileWriter.close();"},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":100}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a deadline task saved by the user."},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String deadlineDate;"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Deadline object with the appropriate"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"     * deadline name and date of deadline given in non standard format."},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param deadlineName Description of task."},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param deadlineDate Date of deadline."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Deadline(String deadlineName, String deadlineDate) {"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(deadlineName);"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Deadline object with the appropriate"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * deadline name and date of deadline given in standard format."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param deadlineName Description of task."},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param localDate Date of deadline as a LocalDate object."},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Deadline(String deadlineName, LocalDate localDate) {"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(deadlineName, true, localDate);"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns description of deadline."},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Description of deadline."},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"                + (super.hasDate()"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"                        ? localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"                        : deadlineDate) + \")\";"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Converts deadline to a savable format."},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Savable format of deadline."},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String getSaveFormat() {"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"D\" + \" | \" + super.getSaveFormat() + \" | \" + (super.hasDate() ? localDate : deadlineDate);"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":58}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a event task saved by the user."},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String eventDate;"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Event object with the appropriate"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"     * event name and date of event given in non standard format."},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param eventName Description of task."},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param eventDate Date of event."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Event(String eventName, String eventDate) {"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(eventName);"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Event object with the appropriate"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * event name and date of event given in standard format."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param eventName Description of task."},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param localDate Date of event as a LocalDate object."},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Event(String eventName, LocalDate localDate) {"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(eventName, true, localDate);"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns description of event."},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Description of event."},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"                + (super.hasDate()"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"                        ? localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"                        : eventDate) + \")\";"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Converts event to a savable format."},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Savable format of event."},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String getSaveFormat() {"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"E\" + \" | \" + super.getSaveFormat() + \" | \" + (super.hasDate() ? localDate : eventDate);"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":58}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a Task object that the user wants"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":" * to keep track of."},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    protected LocalDate localDate;"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    private String taskName;"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    private boolean isDone;"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"    private boolean hasFormattedDate;"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    private boolean hasReminderSet;"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Task object with the appropriate"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     * task name."},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskName Name of the task."},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Task(String taskName) {"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.hasFormattedDate \u003d false;"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.hasReminderSet \u003d false;"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a Task object with the appropriate"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"     * task name. Receives date that task is due as a LocalDate object."},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskName Name of the task."},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param hasFormattedDate true if the task has a formatted date. Otherwise, false."},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param localDate LocalDate object representing task deadline."},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Task(String taskName, boolean hasFormattedDate, LocalDate localDate) {"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.isDone \u003d false;"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.hasFormattedDate \u003d hasFormattedDate;"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.localDate \u003d localDate;"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.hasReminderSet \u003d false;"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns whether the task has a due date."},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return true if task has a due date. Otherwise, false."},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"    public boolean hasDate() {"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"        return hasFormattedDate;"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the date of the task as a LocalDate object."},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Date of object as a LocalDate object. If no date is"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"     * present, returns null."},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"    public LocalDate getDate() {"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"        return hasDate() ? localDate : null;"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Sets task as one."},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void setDone() {"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"        isDone \u003d true;"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the prefix to task display."},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Prefix of task display."},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (isDone) {"},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"            return \"[\" + \"\\u2713\" + \"] \" + taskName;"},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"            return \"[\" + \"\\u2718\" + \"] \" + taskName;"},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Converts the task to a savable format."},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Savable format of task."},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String getSaveFormat() {"},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":"        String done \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"        String reminder \u003d hasReminderSet ? \"1\" : \"0\";"},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":"        return done + \" | \" + reminder + \" | \" + taskName;"},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"    public boolean getReminderStatus() {"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":"        return this.hasReminderSet;"},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":101,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void setReminder() {"},{"lineNumber":102,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.hasReminderSet \u003d true;"},{"lineNumber":103,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":105,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":105}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.parser.Parser;"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a list of all tasks the user"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":" * wants to keep track of."},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a list of tasks."},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    public TaskList() {"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a list of tasks from"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * a file containing saved tasks."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param file File that user wants tasks to be loaded from."},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    public TaskList(File file) {"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"                String[] line \u003d scanner.nextLine().split(\"\\\\|\");"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"                Task newTask \u003d getDataFromLine(line);"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"                boolean isTaskDone \u003d line[1].strip().equals(\"1\");"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"                boolean hasReminder \u003d line[2].strip().equals(\"1\");"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"                if (isTaskDone) {"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"                    newTask.setDone();"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"                if (hasReminder) {"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"                    newTask.setReminder();"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"                tasks.add(newTask);"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"            e.printStackTrace();"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Task getDataFromLine(String[] line) {"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task newTask;"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"        LocalDate localDate;"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"        switch (line[0].strip()) {"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"        case \"T\":"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"            newTask \u003d new ToDo(line[3].strip());"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"        case \"D\":"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"            localDate \u003d Parser.parseDate(line[4].strip());"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (localDate !\u003d null) {"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"                newTask \u003d new Deadline(line[3].strip(), localDate);"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"                newTask \u003d new Deadline(line[3].strip(), line[4].strip());"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"        case \"E\":"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"            localDate \u003d Parser.parseDate(line[4].strip());"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"            if (localDate !\u003d null) {"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"                newTask \u003d new Event(line[3].strip(), localDate);"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"            } else {"},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"                newTask \u003d new Event(line[3].strip(), line[4].strip());"},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"            break;"},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":"        default:"},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":"            newTask \u003d null;"},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"        return newTask;"},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Adds a task to the list."},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param task Task to be added."},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void addToList(Task task) throws DukeException {"},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (task \u003d\u003d null) {"},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"            throw new DukeException();"},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":"        tasks.add(task);"},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Removes a task from the list."},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskIndex Index of task to be removed."},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void removeFromList(int taskIndex) throws IndexOutOfBoundsException {"},{"lineNumber":101,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {"},{"lineNumber":102,"author":{"gitId":"KishenKumarrrrr"},"content":"            throw new IndexOutOfBoundsException(\"Invalid Index!\");"},{"lineNumber":103,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"KishenKumarrrrr"},"content":"        tasks.remove(taskIndex);"},{"lineNumber":105,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":107,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Gets the number of tasks in the list."},{"lineNumber":109,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Number of tasks in the list."},{"lineNumber":111,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"KishenKumarrrrr"},"content":"    public int getListSize() {"},{"lineNumber":113,"author":{"gitId":"KishenKumarrrrr"},"content":"        return tasks.size();"},{"lineNumber":114,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":116,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the task at a particular index."},{"lineNumber":118,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param taskIndex Index of task to be retrieved."},{"lineNumber":120,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Retrived task."},{"lineNumber":121,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Task getTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {"},{"lineNumber":123,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {"},{"lineNumber":124,"author":{"gitId":"KishenKumarrrrr"},"content":"            throw new IndexOutOfBoundsException(\"Invalid Index!\");"},{"lineNumber":125,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"KishenKumarrrrr"},"content":"        return tasks.get(taskIndex);"},{"lineNumber":127,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":128}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents a todo task saved by the user."},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instace of a todo task with the appropriate task description."},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param toDoName Description of todo task."},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    public ToDo(String toDoName) {"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"        super(toDoName);"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns description of todo task."},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Description of todo task."},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Converts todo task to a savable format."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Savable format of todo task."},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String getSaveFormat() {"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"T\" + \" | \" + super.getSaveFormat();"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":36}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":" * Represents the User Interface that the user interacts with."},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":" */"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"public class Ui {"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    private static final String BLANK_LINE \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    private Scanner scanner;"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Creates an instance of a User Interface."},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    public Ui() {"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"        this.scanner \u003d new Scanner(System.in);"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the display greeting."},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Display greeting as a String."},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayGreeting() {"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"I am duke, keeper of all tasks. How may I help you?\";"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the goodbye message."},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Goodbye message as a String."},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayGoodbye() {"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"Bye! Hope to see you again :)\";"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns a loading error."},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param s Error message to be printed."},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Error message as a String."},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String showLoadingError(String s) {"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert s.length() \u003e 0;"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"Looks like there was an error retrieving your data\\n\""},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + s;"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns an error message."},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param s Error message to be printed."},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Error message as a String."},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String showError(String s) {"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert s.length() \u003e 0;"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        return s;"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the added task."},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param task Task that was added."},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param listSize Size of the list of tasks."},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Task added message as a String."},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayAddedTask(Task task, int listSize) {"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert listSize \u003e 0;"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert task !\u003d null;"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + task + \"\\n\" + \"Now you have \\n\""},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + listSize + \" tasks in the list.\";"},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the deleted task."},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param task Task that was deleted."},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param listSize Size of the list of tasks."},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Task deleted message as a String."},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayDeletedTask(Task task, int listSize) {"},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert listSize \u003e\u003d 0;"},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert task !\u003d null;"},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\" + \"Now you have \" + listSize + \" tasks in the list.\";"},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the done task."},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param task Task that was set as done."},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Task done message as a String."},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayDoneTask(Task task) {"},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert task !\u003d null;"},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;"},{"lineNumber":101,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":103,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns the task added to reminders."},{"lineNumber":105,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param task Task to be reminded of."},{"lineNumber":107,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Task remind message as a String."},{"lineNumber":108,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayRemindTask(Task task) {"},{"lineNumber":110,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert task !\u003d null;"},{"lineNumber":111,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"Nice! I\u0027ve added this task to your reminders:\\n\" + task;"},{"lineNumber":112,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":114,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns all tasks that are due on the given date."},{"lineNumber":116,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param tasks List of current tasks."},{"lineNumber":118,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param localDate Due date."},{"lineNumber":119,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Tasks with corresponding due date as a String."},{"lineNumber":120,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayEventsOnDate(ArrayList\u003cTask\u003e tasks, LocalDate localDate) {"},{"lineNumber":122,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":123,"author":{"gitId":"KishenKumarrrrr"},"content":"            return \"Whoops! Looks like there are no events on \""},{"lineNumber":124,"author":{"gitId":"KishenKumarrrrr"},"content":"                           + localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":125,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert tasks.size() \u003e 0;"},{"lineNumber":127,"author":{"gitId":"KishenKumarrrrr"},"content":"        String answer \u003d \"Here are your events on \""},{"lineNumber":128,"author":{"gitId":"KishenKumarrrrr"},"content":"                + localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \":\\n\";"},{"lineNumber":129,"author":{"gitId":"KishenKumarrrrr"},"content":"        for (Task task : tasks) {"},{"lineNumber":130,"author":{"gitId":"KishenKumarrrrr"},"content":"            answer +\u003d task + \"\\n\";"},{"lineNumber":131,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"KishenKumarrrrr"},"content":"        return answer;"},{"lineNumber":133,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":135,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns all tasks that have reminders."},{"lineNumber":137,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param tasks List of current tasks."},{"lineNumber":139,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Tasks with reminders as a String."},{"lineNumber":140,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayTasksWithReminders(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":142,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":143,"author":{"gitId":"KishenKumarrrrr"},"content":"            return \"Whoops! Looks like there are no events with reminders!\";"},{"lineNumber":144,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert tasks.size() \u003e 0;"},{"lineNumber":146,"author":{"gitId":"KishenKumarrrrr"},"content":"        String answer \u003d \"Here are your tasks with reminders: \\n\";"},{"lineNumber":147,"author":{"gitId":"KishenKumarrrrr"},"content":"        for (Task task : tasks) {"},{"lineNumber":148,"author":{"gitId":"KishenKumarrrrr"},"content":"            answer +\u003d task + \"\\n\";"},{"lineNumber":149,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"KishenKumarrrrr"},"content":"        return answer;"},{"lineNumber":151,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":153,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns all items currently in the list."},{"lineNumber":155,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":156,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @param tasks List of current tasks."},{"lineNumber":157,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return All tasks in the list as a String."},{"lineNumber":158,"author":{"gitId":"KishenKumarrrrr"},"content":"     * */"},{"lineNumber":159,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String displayAllItems(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":160,"author":{"gitId":"KishenKumarrrrr"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":161,"author":{"gitId":"KishenKumarrrrr"},"content":"            return \"This is a very empty list... UwU\";"},{"lineNumber":162,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"KishenKumarrrrr"},"content":"        assert tasks.size() \u003e 0;"},{"lineNumber":164,"author":{"gitId":"KishenKumarrrrr"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":165,"author":{"gitId":"KishenKumarrrrr"},"content":"        int taskCount \u003d 1;"},{"lineNumber":166,"author":{"gitId":"KishenKumarrrrr"},"content":"        for (Task task : tasks) {"},{"lineNumber":167,"author":{"gitId":"KishenKumarrrrr"},"content":"            result +\u003d (taskCount) + \". \" + task + \"\\n\";"},{"lineNumber":168,"author":{"gitId":"KishenKumarrrrr"},"content":"            taskCount++;"},{"lineNumber":169,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"KishenKumarrrrr"},"content":"        return result;"},{"lineNumber":171,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":173,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Displays blank line on screen."},{"lineNumber":175,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void displayBlankLine() {"},{"lineNumber":177,"author":{"gitId":"KishenKumarrrrr"},"content":"        System.out.println(Ui.BLANK_LINE);"},{"lineNumber":178,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":180,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Returns help information."},{"lineNumber":182,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return Help information as a String."},{"lineNumber":183,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String showHelp() {"},{"lineNumber":185,"author":{"gitId":"KishenKumarrrrr"},"content":"        return \"Welcome to Duke! these are the commands you can use: \\n\""},{"lineNumber":186,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"--help : Displays help information\\n\""},{"lineNumber":187,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":188,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"todo \u003ctask description\u003e : Adds task as Todo item\\n\""},{"lineNumber":189,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":190,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"remind  \u003cnumber\u003e : Adds task to list of reminders\\n\""},{"lineNumber":191,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":192,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"getReminders : Retrieves all tasks with reminders\\n\""},{"lineNumber":193,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":194,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"deadline \u003ctask description\u003e /by \u003cdue date\u003e : Adds task as Deadline\\n\""},{"lineNumber":195,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":196,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"event \u003ctask description\u003e /at \u003cevent date\u003e : Adds task as Event\\n\""},{"lineNumber":197,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":198,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"delete \u003cnumber\u003e : Deletes item with index \u003cnumber\u003e\\n\""},{"lineNumber":199,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":200,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"done \u003cnumber\u003e : Marks item at index \u003cnumber\u003e as done\\n\""},{"lineNumber":201,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":202,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"list : Lists all items currently being tracked\\n\""},{"lineNumber":203,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":204,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"getEvents \u003cdate\u003e : Retrieves all tasks with the corresponding date in YYYY-MM-DD format\\n\""},{"lineNumber":205,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":206,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"search \u003ckeyword1 keyword2....\u003e : Searches for all tasks matching the keywords\\n\""},{"lineNumber":207,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"\\n\""},{"lineNumber":208,"author":{"gitId":"KishenKumarrrrr"},"content":"                       + \"bye : Exits the program\";"},{"lineNumber":209,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":211,"author":{"gitId":"KishenKumarrrrr"},"content":"    /**"},{"lineNumber":212,"author":{"gitId":"KishenKumarrrrr"},"content":"     * Reads the user input."},{"lineNumber":213,"author":{"gitId":"KishenKumarrrrr"},"content":"     *"},{"lineNumber":214,"author":{"gitId":"KishenKumarrrrr"},"content":"     * @return User input."},{"lineNumber":215,"author":{"gitId":"KishenKumarrrrr"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"KishenKumarrrrr"},"content":"    public String readCommand() {"},{"lineNumber":217,"author":{"gitId":"KishenKumarrrrr"},"content":"        return scanner.nextLine();"},{"lineNumber":218,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":220,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":221,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":222,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":222}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"KishenKumarrrrr":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"KishenKumarrrrr":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"public class ParserTest {"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void localDateParsing_yyyymmdd_datePrinted() {"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"Jun 6 2020\","},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"                Parser.parseDate(\"2020-06-06\")"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"                        .format(DateTimeFormatter"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"                                .ofPattern(\"MMM d yyyy\")));"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void localDateParsing_notADate_null() {"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(null, Parser.parseDate(\"randomString\"));"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":25}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskNotDone_zeroPrinted() {"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"D | 0 | 0 | test1 | test1\", deadline.getSaveFormat());"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskDone_onePrinted() {"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"        deadline.setDone();"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"D | 1 | 0 | test1 | test1\", deadline.getSaveFormat());"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void deadlineDisplay_taskNotDone_crossPrinted() {"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"[D][\" + \"\\u2718\" + \"] test1 (by: test1)\", deadline.toString());"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void deadlineDisplay_taskDone_tickPrinted() {"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        deadline.setDone();"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"[D][\" + \"\\u2713\" + \"] test1 (by: test1)\", deadline.toString());"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskDoneNoReminder_oneZeroPrinted() {"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"        deadline.setDone();"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"D | 1 | 0 | test1 | test1\", deadline.getSaveFormat());"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskDoneHasReminder_oneOnePrinted() {"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"        deadline.setDone();"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"        deadline.setReminder();"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"D | 1 | 1 | test1 | test1\", deadline.getSaveFormat());"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskNotDoneHasReminder_zeroOnePrinted() {"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"        deadline.setReminder();"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"D | 0 | 1 | test1 | test1\", deadline.getSaveFormat());"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskNotDoneNoReminder_zeroZeroPrinted() {"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"D | 0 | 0 | test1 | test1\", deadline.getSaveFormat());"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":62}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskNotDone_zeroPrinted() {"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event event \u003d new Event(\"test1\", \"test1\");"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"E | 0 | 0 | test1 | test1\", event.getSaveFormat());"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskDone_onePrinted() {"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event event \u003d new Event(\"test1\", \"test1\");"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"        event.setDone();"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"E | 1 | 0 | test1 | test1\", event.getSaveFormat());"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void eventDisplay_taskNotDone_crossPrinted() {"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event event \u003d new Event(\"test1\", \"test1\");"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"[E][\" + \"\\u2718\" + \"] test1 (at: test1)\", event.toString());"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void eventDisplay_taskDone_tickPrinted() {"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event event \u003d new Event(\"test1\", \"test1\");"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        event.setDone();"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"[E][\" + \"\\u2713\" + \"] test1 (at: test1)\", event.toString());"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskDoneNoReminder_oneZeroPrinted() {"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event event \u003d new Event(\"test1\", \"test1\");"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"        event.setDone();"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"E | 1 | 0 | test1 | test1\", event.getSaveFormat());"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskNotDoneNoReminder_zeroZeroPrinted() {"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event event \u003d new Event(\"test1\", \"test1\");"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"E | 0 | 0 | test1 | test1\", event.getSaveFormat());"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskDoneHasReminder_oneOnePrinted() {"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event event \u003d new Event(\"test1\", \"test1\");"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"        event.setDone();"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"        event.setReminder();"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"E | 1 | 1 | test1 | test1\", event.getSaveFormat());"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void saveFormat_taskNotDoneHasReminder_zeroOnePrinted() {"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"        Event event \u003d new Event(\"test1\", \"test1\");"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"        event.setReminder();"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(\"E | 0 | 1 | test1 | test1\", event.getSaveFormat());"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":62}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"public class TaskListTest {"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void addTaskToList_addTestTask_addsTask() throws DukeException {"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"        TaskList testTaskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTaskList.addToList(new ToDo(\"test1\"));"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(1, testTaskList.getListSize());"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void addTaskToList_noTask_throwsException() {"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"        TaskList testTaskList \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"            testTaskList.addToList(null);"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert false;"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (DukeException e) {"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert true;"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void removeTaskFromList_withinIndex_listSizeDecrease() throws DukeException {"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"        TaskList testTaskList \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTaskList.addToList(new ToDo(\"test1\"));"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTaskList.removeFromList(0);"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(0, testTaskList.getListSize());"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void removeTaskFromList_negativeNumber_throwException() {"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        TaskList testTaskList \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"            testTaskList.removeFromList(-1);"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert false;"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert true;"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void removeTaskFromList_greaterThanSize_throwException() {"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"        TaskList testTaskList \u003d new TaskList();"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"            testTaskList.removeFromList(4);"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert false;"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert true;"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void geTaskFromList_greaterThanSize_throwException() {"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"        TaskList testTaskList \u003d new TaskList();"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"            testTaskList.getTaskAtIndex(4);"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert false;"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert true;"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void geTaskFromList_negativeNumber_throwException() {"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":"        TaskList testTaskList \u003d new TaskList();"},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"            testTaskList.getTaskAtIndex(-1);"},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert false;"},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":"            assert true;"},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void geTaskFromList_withinSize_returnsTask() throws DukeException {"},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":"        TaskList testTaskList \u003d new TaskList();"},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"        ToDo testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTaskList.addToList(testTodo);"},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(testTodo, testTaskList.getTaskAtIndex(0));"},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":91}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"public class TaskTest {"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskHasLocalDate_hasLocalDate_returnsTrue() {"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"        LocalDate correctFormat \u003d LocalDate.parse(\"2020-06-05\");"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\", true, correctFormat);"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(true, testTask.hasDate());"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskHasLocalDate_noLocalDate_returnsFalse() {"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(false, testTask.hasDate());"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskGetDate_hasLocalDate_returnsDate() {"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"        LocalDate correctFormat \u003d LocalDate.parse(\"2020-06-05\");"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\", true, correctFormat);"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(correctFormat, testTask.getDate());"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskGetDate_noLocalDate_returnsNull() {"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(null, testTask.getDate());"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskToString_doneTask_tickPrinted() {"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":"        String boxWithTick \u003d \"[\" + \"\\u2713\" + \"] \";"},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTask.setDone();"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(boxWithTick + \"test1\", testTask.toString());"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskToString_notDoneTask_crossPrinted() {"},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"        String boxWithCross \u003d \"[\" + \"\\u2718\" + \"] \";"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(boxWithCross + \"test1\", testTask.toString());"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_doneTask_onePrinted() {"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"1 | 0 | test1\";"},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTask.setDone();"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTask.getSaveFormat());"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_notDoneTask_zeroPrinted() {"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"0 | 0 | test1\";"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTask.getSaveFormat());"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskReminder_noReminder_falseReturned() {"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(false, testTask.getReminderStatus());"},{"lineNumber":71,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":73,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskReminder_hasReminder_trueReturned() {"},{"lineNumber":75,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":76,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTask.setReminder();"},{"lineNumber":77,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(true, testTask.getReminderStatus());"},{"lineNumber":78,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":80,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":81,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_doneTaskNoReminder_oneZeroPrinted() {"},{"lineNumber":82,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"1 | 0 | test1\";"},{"lineNumber":83,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":84,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTask.setDone();"},{"lineNumber":85,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTask.getSaveFormat());"},{"lineNumber":86,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":88,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_doneTaskHasReminder_oneOnePrinted() {"},{"lineNumber":90,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"1 | 1 | test1\";"},{"lineNumber":91,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":92,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTask.setDone();"},{"lineNumber":93,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTask.setReminder();"},{"lineNumber":94,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTask.getSaveFormat());"},{"lineNumber":95,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":97,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_notDoneTaskNoReminder_zeroZeroPrinted() {"},{"lineNumber":99,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"0 | 0 | test1\";"},{"lineNumber":100,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":101,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTask.getSaveFormat());"},{"lineNumber":102,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":104,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":105,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_notDoneTaskHasReminder_onePrinted() {"},{"lineNumber":106,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"0 | 1 | test1\";"},{"lineNumber":107,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTask \u003d new Task(\"test1\");"},{"lineNumber":108,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTask.setReminder();"},{"lineNumber":109,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTask.getSaveFormat());"},{"lineNumber":110,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":112,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":112}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskToString_doneTask_tickPrinted() {"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"        String boxWithTick \u003d \"[T][\" + \"\\u2713\" + \"] \";"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTodo.setDone();"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(boxWithTick + \"test1\", testTodo.toString());"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskToString_notDoneTask_crossPrinted() {"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"        String boxWithCross \u003d \"[T][\" + \"\\u2718\" + \"] \";"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(boxWithCross + \"test1\", testTodo.toString());"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_doneTask_onePrinted() {"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"T | 1 | 0 | test1\";"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTodo.setDone();"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTodo.getSaveFormat());"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":32,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_hasReminder_onePrinted() {"},{"lineNumber":34,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"T | 0 | 1 | test1\";"},{"lineNumber":35,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":36,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTodo.setReminder();"},{"lineNumber":37,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTodo.getSaveFormat());"},{"lineNumber":38,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":40,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_noReminder_zeroPrinted() {"},{"lineNumber":42,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"T | 0 | 0 | test1\";"},{"lineNumber":43,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":44,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTodo.getSaveFormat());"},{"lineNumber":45,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":47,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_notDoneTaskHasReminder_zeroOnePrinted() {"},{"lineNumber":49,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"T | 0 | 1 | test1\";"},{"lineNumber":50,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":51,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTodo.setReminder();"},{"lineNumber":52,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTodo.getSaveFormat());"},{"lineNumber":53,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":55,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_doneTaskHasReminder_oneOnePrinted() {"},{"lineNumber":57,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"T | 1 | 1 | test1\";"},{"lineNumber":58,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":59,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTodo.setDone();"},{"lineNumber":60,"author":{"gitId":"KishenKumarrrrr"},"content":"        testTodo.setReminder();"},{"lineNumber":61,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTodo.getSaveFormat());"},{"lineNumber":62,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":64,"author":{"gitId":"KishenKumarrrrr"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"KishenKumarrrrr"},"content":"    public void taskSaveFormat_notDoneTask_zeroPrinted() {"},{"lineNumber":66,"author":{"gitId":"KishenKumarrrrr"},"content":"        String expectedOutput \u003d \"T | 0 | 0 | test1\";"},{"lineNumber":67,"author":{"gitId":"KishenKumarrrrr"},"content":"        Task testTodo \u003d new ToDo(\"test1\");"},{"lineNumber":68,"author":{"gitId":"KishenKumarrrrr"},"content":"        assertEquals(expectedOutput, testTodo.getSaveFormat());"},{"lineNumber":69,"author":{"gitId":"KishenKumarrrrr"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"KishenKumarrrrr"},"content":"}"}],"authorContributionMap":{"KishenKumarrrrr":70}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"T | 0 | borrow book"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":"T | 0 | newItem"},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"E | 0 | CS2103T Tutorial | Wed 4-5pm"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"D | 0 | test1 | 2020-05-21"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"D | 0 | test2 | 2020-06-20"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"E | 0 | test3 | 2020-05-21"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"E | 0 | test4 | 2020-06-19"}],"authorContributionMap":{"KishenKumarrrrr":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KishenKumarrrrr"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"KishenKumarrrrr"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"KishenKumarrrrr"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"KishenKumarrrrr"},"content":"todo newItem"},{"lineNumber":5,"author":{"gitId":"KishenKumarrrrr"},"content":"deadline submit quiz /by Aug 20th"},{"lineNumber":6,"author":{"gitId":"KishenKumarrrrr"},"content":"event CS2103T Tutorial /at Wed 4-5pm"},{"lineNumber":7,"author":{"gitId":"KishenKumarrrrr"},"content":"list"},{"lineNumber":8,"author":{"gitId":"KishenKumarrrrr"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"done 3"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":"done 5"},{"lineNumber":11,"author":{"gitId":"KishenKumarrrrr"},"content":"list"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"todo"},{"lineNumber":13,"author":{"gitId":"KishenKumarrrrr"},"content":"invalidCommand"},{"lineNumber":14,"author":{"gitId":"KishenKumarrrrr"},"content":"deadline deadlineName /by"},{"lineNumber":15,"author":{"gitId":"KishenKumarrrrr"},"content":"deadline real /at aDate"},{"lineNumber":16,"author":{"gitId":"KishenKumarrrrr"},"content":"deadline /by Aug 5"},{"lineNumber":17,"author":{"gitId":"KishenKumarrrrr"},"content":"deadline"},{"lineNumber":18,"author":{"gitId":"KishenKumarrrrr"},"content":"event eventName /at"},{"lineNumber":19,"author":{"gitId":"KishenKumarrrrr"},"content":"event eventName /by aDate"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"event /at aDate"},{"lineNumber":21,"author":{"gitId":"KishenKumarrrrr"},"content":"event"},{"lineNumber":22,"author":{"gitId":"KishenKumarrrrr"},"content":"delete 5"},{"lineNumber":23,"author":{"gitId":"KishenKumarrrrr"},"content":"delete 3"},{"lineNumber":24,"author":{"gitId":"KishenKumarrrrr"},"content":"delete 2"},{"lineNumber":25,"author":{"gitId":"KishenKumarrrrr"},"content":"deadline test1 /by 2020-05-21"},{"lineNumber":26,"author":{"gitId":"KishenKumarrrrr"},"content":"deadline test2 /by 2020-06-20"},{"lineNumber":27,"author":{"gitId":"KishenKumarrrrr"},"content":"event test3 /at 2020-05-21"},{"lineNumber":28,"author":{"gitId":"KishenKumarrrrr"},"content":"event test4 /at 2020-06-19"},{"lineNumber":29,"author":{"gitId":"KishenKumarrrrr"},"content":"getEvents 2020-05-21"},{"lineNumber":30,"author":{"gitId":"KishenKumarrrrr"},"content":"bye"}],"authorContributionMap":{"KishenKumarrrrr":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"KishenKumarrrrr"},"content":"set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":10,"author":{"gitId":"KishenKumarrrrr"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":12,"author":{"gitId":"KishenKumarrrrr"},"content":"javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\duke\\*.java ..\\src\\main\\java\\duke\\commands\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":16,"author":{"gitId":"-"},"content":")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"KishenKumarrrrr"},"content":"java -classpath ..\\bin duke.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"KishenKumarrrrr":4,"-":19}}]
