[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Deadline(String name, LocalDate date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String date \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    List\u003cTask\u003e store;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void saveToDisk() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            new File(\"./data\").mkdirs();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(\"./data/duke.txt\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            oos.writeObject(store);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            oos.flush();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void loadFromDisk() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(\"./data/duke.txt\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            store \u003d (List\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            listTasks();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        for (Task task : store) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            System.out.println(String.format(\"%d. %s\", count, task));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void doneTask(int num) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        store.get(num - 1).setDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(store.get(num - 1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void deleteTask(int num) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Task task \u003d store.get(num - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        store.remove(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list\", store.size()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void addTaskToList(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        store.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list\", store.size()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void addTask(String command, String description) throws InvalidEventException, InvalidDeadlineException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String splitted[];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                addTaskToList(new Todo(description));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                splitted \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                if (splitted.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                date \u003d LocalDate.parse(splitted[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                addTaskToList(new Deadline(splitted[0], date));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                splitted \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                if (splitted.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    throw new InvalidEventException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                date \u003d LocalDate.parse(splitted[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                addTaskToList(new Event(splitted[0], date));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        loadFromDisk();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        boolean running \u003d true;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            String input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            String[] splitString \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            String command \u003d splitString[0];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            int num;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        running \u003d false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        listTasks();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                            throw new InvalidDescriptionException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        addTask(command, splitString[1].trim());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        num \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        doneTask(num);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        num \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        deleteTask(num);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                        throw new InvalidCommandException();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                saveToDisk();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sgn00"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "sgn00": 143
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        String date \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 19
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 6
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidDeadlineException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidDeadlineException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! Your deadline command format is wrong!\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 6
    }
  },
  {
    "path": "src/main/java/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidDescriptionException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! The description for a task command cannot be empty!\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 6
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class InvalidEventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(\"☹ OOPS!!! Your event command format is wrong!\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 6
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return String.format(\"[✓] %s\", name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sgn00"
        },
        "content": "            return String.format(\"[✗] %s\", name);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 24
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sgn00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sgn00"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sgn00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sgn00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sgn00": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sgn00"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sgn00"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sgn00"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sgn00"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sgn00"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sgn00": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sgn00"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "sgn00": 1
    }
  }
]
