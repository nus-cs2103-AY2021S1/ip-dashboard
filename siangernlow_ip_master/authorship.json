[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "task runCheckstyleJavaDocs(type: GradleBuild) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    tasks \u003d [\"javadoc\", \"checkstyleMain\", \"checkstyleTest\"]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "task cleanTest(type: GradleBuild) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    tasks \u003d [\"clean\", \"test\"]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    mainClassName \u003d \"taskbot.main.Main\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    archiveBaseName \u003d \"TaskBot\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 26,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "# User Guide for TaskBot, your virtual task-keeping assistant"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "## Getting Help "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Type \u0027help\u0027 in the search bar to get instructions on how to use TaskBot. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### You may add the feature\u0027s name to find out more about that feature."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`help todo`    | Adds a todo task to the tasks list |"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|               | Format: todo [desc] |"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|               | desc: The description of the todo task |"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "## Adding Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### TaskBot supports three types of tasks, `todo`, `deadline`and `event` tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Tasks are automatically saved for future viewing once they are inserted. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "A todo task is the most basic of tasks. \t"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### `todo (desc)` - TaskBot takes in the task description as a mandatory argument."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`todo go running`    | Adds a todo task with the description of \"go running\"|"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "A deadline task supports the inclusion of a deadline. \t"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### `deadline (desc) /by (time)` - The additional time parameter follows the format YYYY-MM-dd HHmm in 24 hour format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`deadline return book /by 2020-09-15 2200`    | Adds a deadline to return the book by the time specified|"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "An event task is a task that occurs by the specified time. \t"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### `event (desc) /at (time)` - The additional time parameter follows the format YYYY-MM-dd HHmm in 24 hour format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`event meet friends /at 2020-09-15 1000`    | Adds an event to meet friends by the time specified|"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "## Searching for tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### TaskBot supports viewing of the tasks added so far and also searching by keywords."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### List"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "Lists all the tasks that have been added, in order of when they were added. \t"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### `list` - No additional arguments needed"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`list`    | A numbered list of tasks. If the list is empty, TaskBot will notify you via a message.|"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "Allows you to find tasks which description matches the any of the given keywords\t"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### `find (keywords)` - Multiple keyword entries are supported, just seperate them using whitespaces."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`find run book`    | Shows a list of tasks with either \"run\", \"book\" or both in their descriptions.|"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Upcoming"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "Allows you to find tasks which happens in the next `n` days. Todo tasks are regarded to always happen and are always listed.\t"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### `upcoming (days)` - the number of days ahead to search for tasks, integer values only."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`upcoming 2`    | Shows a list of tasks happening within the next 2 days.|"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "## Editing tasks"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### You may edit the tasks in various ways."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "Completes the task at the index in the list provided by the `list` command.\t"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### `done (index)` - Completes a task at the index, if valid."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`done 2`    | Marks the task at index 2 as complete, as viewed when the `list` command is called.|"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "You may also delete any tasks that you no longer require.\t"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### `delete (index)` - Deletes a task at the index, if valid."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|Example usage: | Expected outcome:|"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|-------------- | -----------------|"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "|`delete 2`    | Deletes the task at index 2 as complete, as viewed when the `list` command is called.|"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "## Exiting the program"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### You may simply exit the program by typing the `exit` command."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "### A goodbye message will appear from TaskBot, and the application will close after a few seconds."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "siangernlow": 98,
      "-": 13
    }
  },
  {
    "path": "src/main/java/taskbot/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.TaskbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates the commands the user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * can give TaskBot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    // Flag for the ExitCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a Command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param isExit Signifies whether it is an ExitCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Performs the relevant operation tied to the Command type on the given task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param taskList The task list to be operated on."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A String describing the outcome of the execution."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws TaskbotException Any exception thrown by the Commands."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public abstract String execute(TaskList taskList) throws TaskbotException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A boolean saying whether it is an ExitCommand."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    };"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 38
    }
  },
  {
    "path": "src/main/java/taskbot/command/CommandHelp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This class gets the instruction from the specified command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class CommandHelp {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets help on the specific command given."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param command The command to retrieve instructions for."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The relevant command\u0027s instruction."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws InvalidCommandException if input command does not match any known command types."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getCommandInstruction(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return HelpCommand.getInstruction();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return TodoCommand.getInstruction();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return DeadlineCommand.getInstruction();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return EventCommand.getInstruction();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return ListCommand.getInstruction();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"upcoming\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return UpcomingCommand.getInstruction();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return FindCommand.getInstruction();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return DoneCommand.getInstruction();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return DeleteCommand.getInstruction();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return ExitCommand.getInstruction();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new InvalidCommandException(\"That was not a valid command.\\nPlease try again.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 42
    }
  },
  {
    "path": "src/main/java/taskbot/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.TaskbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to add a deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a command to make a deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public DeadlineCommand(String task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the deadline command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Adds a deadline task to the tasks list\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: deadline [desc] /by [time]\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"desc: The description of the deadline task\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"time: the date and time in the following format: dd-MM-YYYY hhMM\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Example: 02-10-2020 1430 will represent 2 Oct 2020 2:30pm\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets for task description."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return the task description stored in this command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) throws TaskbotException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskList.addDeadlineTask(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is an instance of this class"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!(obj instanceof DeadlineCommand)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Compare tasks and return accordingly"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return task.equals(((DeadlineCommand) obj).getTask());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 66
    }
  },
  {
    "path": "src/main/java/taskbot/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.TaskbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to delete a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    // The index at which to delete the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a DeleteCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param taskIndex The index where the task is at."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the delete command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Deletes the task at the given index.\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: delete [index]\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"index: the index in which the task appears on the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the task index."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The index of the list where the task is."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public int getTaskIndex() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) throws TaskbotException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is an instance of this class"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!(obj instanceof DeleteCommand)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Compare taskIndex and return accordingly"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskIndex \u003d\u003d ((DeleteCommand) obj).getTaskIndex();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 63
    }
  },
  {
    "path": "src/main/java/taskbot/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.TaskbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to complete a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    // The index of the task to be completed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a DoneCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param taskIndex The index of the task to be completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the done command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Completes the task at the given index.\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: done [index]\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"index: the index in which the task appears on the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the task index."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return An int representing the index in the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * where the task is at."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public int getTaskIndex() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) throws TaskbotException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskList.completeTask(taskIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is an instance of this class"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!(obj instanceof DoneCommand)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Compare taskIndex and return accordingly"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskIndex \u003d\u003d ((DoneCommand) obj).getTaskIndex();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 64
    }
  },
  {
    "path": "src/main/java/taskbot/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.TaskbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to add an event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    // The task description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a EventCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task The task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public EventCommand(String task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the event command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Adds an event task to the tasks list\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: event [desc] /at [time]\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"desc: The description of the event task\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"time: the date and time in the following format: dd-MM-YYYY hhMM\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Example: 02-10-2020 1430 will represent 2 Oct 2020 2:30pm\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the task description."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The task description."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) throws TaskbotException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskList.addEventTask(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is an instance of this class"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!(obj instanceof EventCommand)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Compare tasks and return accordingly"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return task.equals(((EventCommand) obj).getTask());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 65
    }
  },
  {
    "path": "src/main/java/taskbot/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to end the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates an ExitCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Exits the program.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: exit\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Returns a farewell message"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Goodbye, I await your next visit.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        /* Check if obj is an instance of this class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "           All ExitCommand instances are equal."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "         */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return obj instanceof ExitCommand;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 44
    }
  },
  {
    "path": "src/main/java/taskbot/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This command handles the find operation of TaskBot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /** The keyword used to match tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String[] keywords;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a FindCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param keywords The keywords used to find tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public FindCommand(String ... keywords) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        for (int i \u003d 0; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            keywords[i] \u003d keywords[i].toLowerCase();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the find command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Finds tasks matching the given keywords.\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: find keywords[,...]\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"keywords: the list of keywords, separated by whitespace\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Example: keyword key1 key2\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The keywords stored within this command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String[] getKeywords() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return keywords;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskList.findTasks(keywords);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Checks if obj is compared with itself"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Checks if obj is an instance of this class"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!(obj instanceof FindCommand)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Compares keywords and return accordingly"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return Arrays.equals(keywords, ((FindCommand) obj).getKeywords());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 67
    }
  },
  {
    "path": "src/main/java/taskbot/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.TaskbotException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to display help information."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    // The command to give help on."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a HelpCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param command The command to get instructions on."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public HelpCommand(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Informs the user on how to use the help function"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Use \u0027help\u0027 to learn about a specific command.\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"List of available commands: \\n\" + getCommandList()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"\\nFormat: help [command]\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"command: One of the commands specified in the list, in lower case.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Produces the list of available commands."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a list of commands the user can use."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getCommandList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        ArrayList\u003cString\u003e commands \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Add every available command to the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"DEADLINE\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"DELETE\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"DONE\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"EVENT\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"EXIT\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"FIND\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"LIST\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"TODO\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        commands.add(\"UPCOMING\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Returns the string in format \"[command1, command2, ...]\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return commands.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the name of the command that is being handled."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The command string stored in this class."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) throws TaskbotException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return CommandHelp.getCommandInstruction(command);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is an instance of this class"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!(obj instanceof HelpCommand)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Compare tasks and return accordingly"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return command.equals(((HelpCommand) obj).getCommand());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 90
    }
  },
  {
    "path": "src/main/java/taskbot/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to list all tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a ListCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the list command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Lists the tasks in the order of when they were added.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: list\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskList.listTasks();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        /* Check if obj is an instance of this class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "           All ListCommand instances are equal."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "         */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return obj instanceof ListCommand;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 43
    }
  },
  {
    "path": "src/main/java/taskbot/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to add a todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    // The task description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a TodoCommand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task The task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TodoCommand(String task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the todo command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Adds a todo task to the tasks list\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: todo [desc]\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"desc: The description of the todo task\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the task description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return the task description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskList.addTodoTask(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is an instance of this class"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!(obj instanceof TodoCommand)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Compare tasks and return accordingly"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return task.equals(((TodoCommand) obj).getTask());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 62
    }
  },
  {
    "path": "src/main/java/taskbot/command/UpcomingCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a command to get upcoming tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class UpcomingCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    // The number of days ahead to look"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private int days;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates an upcoming command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param days Number of days ahead to look."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public UpcomingCommand(int days) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.days \u003d days;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gives instructions on how to use the upcoming command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string of instructions to use the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static String getInstruction() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Gets upcoming tasks that occur within the given time frame.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Time frame is given in days ahead.\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Format: upcoming [days]\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"days: The number of days ahead to search for a task, up to just before midnight.\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"Example: upcoming 2 will search for tasks falling 2 days from now, up to 2359.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the number of days to look ahead."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The days ahead to look."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public int getDays() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return days;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return taskList.getUpcoming(days);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is compared with itself"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if obj is an instance of this class"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!(obj instanceof UpcomingCommand)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Compare taskIndex and return accordingly"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return days \u003d\u003d ((UpcomingCommand) obj).getDays();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 64
    }
  },
  {
    "path": "src/main/java/taskbot/exceptions/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This exception handles when the supplied argument is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class EmptyArgumentException extends TaskbotException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public EmptyArgumentException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 10
    }
  },
  {
    "path": "src/main/java/taskbot/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This exceptions handles when the user inputs an"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * incorrect command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class InvalidCommandException extends TaskbotException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public InvalidCommandException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 11
    }
  },
  {
    "path": "src/main/java/taskbot/exceptions/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This exception handles when user inputs"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * an invalid time or date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class InvalidDateTimeException extends TaskbotException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public InvalidDateTimeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 11
    }
  },
  {
    "path": "src/main/java/taskbot/exceptions/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This exception handles when the user tries to access a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * task from the list but gets IndexOutOfBounds error."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class InvalidIndexException extends TaskbotException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public InvalidIndexException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 12
    }
  },
  {
    "path": "src/main/java/taskbot/exceptions/TaskAlreadyCompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This exception handles when the user tries to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * complete an already complete class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class TaskAlreadyCompleteException extends TaskbotException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TaskAlreadyCompleteException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 11
    }
  },
  {
    "path": "src/main/java/taskbot/exceptions/TaskbotException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates all custom exceptions thrown"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * by TaskBot."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class TaskbotException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TaskbotException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 11
    }
  },
  {
    "path": "src/main/java/taskbot/exceptions/WrongFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This class handles the case where the command exists, but"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * wrong format is given."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class WrongFormatException extends TaskbotException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public WrongFormatException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 11
    }
  },
  {
    "path": "src/main/java/taskbot/logic/Taskbot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.TaskbotException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This class handles logical inputs."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class Taskbot {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Taskbot() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        taskList \u003d new TaskList(new Storage(System.getProperty(\"user.dir\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Returns appropriate response given user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param input User input containing a command to be executed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A line of text signifying success or failure of carrying out the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        assert input.length() \u003e 0 : \"Empty input\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Process user input and get the relevant command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Command cmd \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Execute the command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return cmd.execute(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (TaskbotException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 35
    }
  },
  {
    "path": "src/main/java/taskbot/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Starts the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param args Unused args."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Application.launch(Ui.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 14
    }
  },
  {
    "path": "src/main/java/taskbot/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.UpcomingCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.EmptyArgumentException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Parses the user input to give appropriate commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Determines the correct command to be used."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param command The string to be parsed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The command corresponding to the string parsed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws InvalidCommandException if the command given does not match any known commands."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws EmptyArgumentException if a command requires arguments but received none."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static Command parse(String command) throws InvalidCommandException, EmptyArgumentException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        assert command.length() \u003e 0 : \"Empty command string\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        /*Separates the command into the command keyword"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "          and the required arguments. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        String[] commandArgs \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Checks if there are empty arguments for commands."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        boolean isArgsEmpty \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (commandArgs.length \u003d\u003d 1 || commandArgs[1].strip().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            isArgsEmpty \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        switch (commandArgs[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createHelpCommand(commandArgs, isArgsEmpty);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createTodoCommand(commandArgs, isArgsEmpty);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createDeadlineCommand(commandArgs, isArgsEmpty);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createEventCommand(commandArgs, isArgsEmpty);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createListCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"upcoming\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createUpcomingCommand(commandArgs, isArgsEmpty);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createFindCommand(commandArgs, isArgsEmpty);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createDoneCommand(commandArgs, isArgsEmpty);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createDeleteCommand(commandArgs, isArgsEmpty);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return createExitCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new InvalidCommandException(\"That was not a valid command.\\nPlease try again.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static HelpCommand createHelpCommand(String[] commandArgs, boolean isArgsEmpty) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (isArgsEmpty) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // No arguments supplied, so we instruct the user on how to use the help command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return new HelpCommand(\"help\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return new HelpCommand(commandArgs[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static TodoCommand createTodoCommand(String[] commandArgs, boolean isArgsEmpty)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throws EmptyArgumentException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (isArgsEmpty) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new EmptyArgumentException("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    \"The description of a todo cannot be empty. Please input a valid description.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return new TodoCommand(commandArgs[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static DeadlineCommand createDeadlineCommand(String[] commandArgs, boolean isArgsEmpty)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throws EmptyArgumentException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (isArgsEmpty) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new EmptyArgumentException("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    \"The description of a deadline cannot be empty. Please input a valid description.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return new DeadlineCommand(commandArgs[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static EventCommand createEventCommand(String[] commandArgs, boolean isArgsEmpty)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throws EmptyArgumentException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (isArgsEmpty) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new EmptyArgumentException("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    \"The description of an event cannot be empty. Please input a valid description.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return new EventCommand(commandArgs[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static Command createListCommand() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static Command createUpcomingCommand(String[] commandArgs, boolean isArgsEmpty)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throws EmptyArgumentException, InvalidCommandException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (commandArgs.length \u003d\u003d 1 || commandArgs[1].strip().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new EmptyArgumentException(\"Please enter the number of days.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            int days \u003d Integer.parseInt(commandArgs[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return new UpcomingCommand(days);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new InvalidCommandException(\"Please enter a valid digit for days.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static Command createFindCommand(String[] commandArgs, boolean isArgsEmpty)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throws EmptyArgumentException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (commandArgs.length \u003d\u003d 1 || commandArgs[1].strip().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new EmptyArgumentException(\"Please enter a keyword to search for.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Splits the input into multiple keywords if possible"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        String[] keywords \u003d commandArgs[1].split(\" \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return new FindCommand(keywords);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static Command createDoneCommand(String[] commandArgs, boolean isArgsEmpty)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throws EmptyArgumentException, InvalidCommandException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (commandArgs.length \u003d\u003d 1 || commandArgs[1].strip().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new EmptyArgumentException(\"Please enter the index of the task you wish to complete.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(commandArgs[1]) - 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return new DoneCommand(taskIndex);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new InvalidCommandException(\"Please enter a valid index.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static Command createDeleteCommand(String[] commandArgs, boolean isArgsEmpty)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throws EmptyArgumentException, InvalidCommandException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (commandArgs.length \u003d\u003d 1 || commandArgs[1].strip().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new EmptyArgumentException(\"Please enter the index of the task you wish to delete.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(commandArgs[1]) - 1;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new InvalidCommandException(\"Please enter a valid index.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private static Command createExitCommand() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 166
    }
  },
  {
    "path": "src/main/java/taskbot/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * The database to store user tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /** Stores the loaded list of tasks */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /** The directory path to retrieve the tasks from */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String dirPath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a new Storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param dirPath The directory path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Storage(String dirPath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        assert dirPath.length() \u003e 0 : \"Empty directory path\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Path of project directory"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.dirPath \u003d dirPath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Outputs message from searching database"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        System.out.println(createStorage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Loads tasks from file into tasks array"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        loadTasks();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Saves the task list to list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param tasks The list to update the disk with."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void setTasksList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Sets the local tasks list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Saves the list to disk"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates directory and file for task storage."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * If directory and file already exists, this method"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * does nothing."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return Message describing outcome."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String createStorage() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Create directory and file paths for storage"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Path directoryName \u003d Paths.get(dirPath, \"data\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Path fileName \u003d Paths.get(directoryName.toString(), \"tasks.txt\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Directory/File to be created"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        File directory \u003d new File(directoryName.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        File file \u003d new File(fileName.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Check if directory was successfully created or the txt file does not exist"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (directory.mkdir() || !file.exists()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            //Creates the txt file to store tasks"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                //File creation successful"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                return \"Database for tasks list initialized at \" + directoryName"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                        + \"\\n------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return \"Database for tasks list found. Tasks will be loaded from that file.\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Code is not supposed to reach this point."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"Unexpected Error.\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Loads tasks from the database."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private void loadTasks() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            //Makes new file instance"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Path filePath \u003d Paths.get(dirPath, \"data\", \"tasks.txt\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            File file \u003d new File(filePath.toString());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            //Reads the file"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            //Adds each task to the tasks array"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String taskType;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            while ((taskType \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    boolean isDone \u003d bufferedReader.readLine().equals(\"1\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    String description \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    //Creates the todo"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    Todo todo \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    //Adds the task to the list"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    isDone \u003d bufferedReader.readLine().equals(\"1\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    description \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    LocalDateTime at \u003d LocalDateTime.parse(bufferedReader.readLine());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    //Creates the event"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    Event event \u003d new Event(description, at, isDone);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    //Adds the task to the list"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    isDone \u003d bufferedReader.readLine().equals(\"1\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    description \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    LocalDateTime by \u003d LocalDateTime.parse(bufferedReader.readLine());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    //Creates the deadline"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    //Adds the task to the list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                            \"Error has occured. This is a placeholder to be replaced by an InvalidFileException\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            //Closes the reader"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Writes the tasks to the database."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private void saveTasks() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Makes new file instance"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Path filePath \u003d Paths.get(dirPath, \"data\", \"tasks.txt\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath.toString());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            //Parses the tasks and writes them to disk in readable format"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(\"todo\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(task.getIsDone() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(task.getTask());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(\"event\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(task.getIsDone() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(task.getTask());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(((Event) task).getOccursAt().toString());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(\"deadline\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(task.getIsDone() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(task.getTask());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.write(((Deadline) task).getDueBy().toString());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 208
    }
  },
  {
    "path": "src/main/java/taskbot/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Creates a task which must be completed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * by a specified time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param by Time to complete by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Deadline(String task, LocalDateTime by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task, by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a deadline task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param by Time to complete by."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param isDone Whether the task is complete."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Deadline(String task, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task, by, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the time of the deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The time of the deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public LocalDateTime getDueBy() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return getTime();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"[\" + super.getStatusIcon() + \"] \" + \"Deadline: \" + super.getTask()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"(by: \" + getTime().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\")) + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 46
    }
  },
  {
    "path": "src/main/java/taskbot/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Creates a task which happens at a specified time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates an Event task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param at Time when task occurs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Event(String task, LocalDateTime at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task, at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates an Event task given its completeness."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param at Time when task occurs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param isDone Whether the task is complete."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Event(String task, LocalDateTime at, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task, at, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the time the event occurs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The time of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public LocalDateTime getOccursAt() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return getTime();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"[\" + super.getStatusIcon() + \"] \" + \"Event: \" + super.getTask()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"(at: \" + getTime().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\")) + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 45
    }
  },
  {
    "path": "src/main/java/taskbot/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This class encapsulates the functionality of a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates an incomplete task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        assert task.length() \u003e 0 : \"Empty task length\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a Task given its completeness."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param isDone Whether the task is complete."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Task(String task, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Marks this task as complete."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the task description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The task to be completed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets the icon signifying completeness."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return The icon representing a complete task or not."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Gets whether the task is complete."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return True if complete, false otherwise."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getTask();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 71
    }
  },
  {
    "path": "src/main/java/taskbot/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.util.LinkedHashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.InvalidDateTimeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.InvalidIndexException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.TaskAlreadyCompleteException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.exceptions.WrongFormatException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.storage.Storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param storage The database to retrieve the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.tasks \u003d storage.getTasksList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a task list given the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * This constructor is to be used for"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * testing purposes only."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param tasks The task list to initialize with."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.storage \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Lists all the tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a String representing the list of tasks, or no tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Checks if list is empty"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return \"You currently have no tasks pending.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"These are the following task(s) to complete:\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Size of the tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Builds the list of tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        for (int i \u003d 0; i \u003c size - 1; i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            sb.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        sb.append(size).append(\". \").append(tasks.get(size - 1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Returns the list of tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Informs the user of the number of tasks in the current list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return A string describing how many tasks there are in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getNumberOfTasks() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"You now have \" + tasks.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Adds a todo Task to the list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task The task to be added"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a String informing the task has been added."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String addTodoTask(String task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Makes a new todo task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Todo newTodo \u003d new Todo(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //Adds the new task to the list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        tasks.add(newTodo);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Update the storage"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (storage !\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            storage.setTasksList(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Informs the user that the task has been added"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"I have added a Todo:\\n\" + newTodo"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"\\n\" + getNumberOfTasks();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Adds an event Task to the list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param input The task to be added followed by time."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a String informing the task has been added."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws InvalidDateTimeException if the given date time argument has a wrong format."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws WrongFormatException if the given input does not match the required format for an event."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String addEventTask(String input) throws InvalidDateTimeException, WrongFormatException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Splits the input according to whitespace"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        String[] parsedString \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (parsedString.length !\u003d 2) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new WrongFormatException("
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    \"Wrong format for event. Please ensure that you provide a description and time, delimited by /at\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        LocalDateTime dateTime \u003d parseDateTime(parsedString[1].stripLeading());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Makes a new Event task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Event newEvent \u003d new Event(parsedString[0], dateTime);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Adds the new task to the list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Update the storage"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (storage !\u003d null) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            storage.setTasksList(tasks);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Informs the user that the task has been added"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"I have added an Event:\\n\" + newEvent"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"\\n\" + getNumberOfTasks();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Adds a deadline Task to the list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param input The task to be added followed by time."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a String informing the task has been added."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws InvalidDateTimeException if the given date time argument has a wrong format."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws WrongFormatException if the given input does not match the required format for a deadline."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String addDeadlineTask(String input) throws InvalidDateTimeException, WrongFormatException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Splits the input according to whitespace"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        String[] parsedString \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (parsedString.length !\u003d 2) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new WrongFormatException("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    \"Wrong format for deadline. \""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"Please ensure that you provide a description and time, delimited by /by\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        LocalDateTime dateTime \u003d parseDateTime(parsedString[1].stripLeading());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Makes a new Deadline task"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(parsedString[0], dateTime);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Adds the new task to the list"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Update the storage"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (storage !\u003d null) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            storage.setTasksList(tasks);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Informs the user that the task has been added"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"I have added a Deadline:\\n\" + newDeadline"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"\\n\" + getNumberOfTasks();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Checks if the given dateTime is valid."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param str Localized date and time."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private LocalDateTime parseDateTime(String str) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return LocalDateTime.parse(str, formatter);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new InvalidDateTimeException(\"Invalid format of date and time.\\n\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"Please follow the format: YYYY-mm-dd hhmm\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Completes a task in the given index."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param taskIndex Index of the task in the list."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a String informing the task has been completed."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws InvalidIndexException when the given index is not within the size of the list."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws TaskAlreadyCompleteException when the task to complete is already completed."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String completeTask(int taskIndex) throws InvalidIndexException, TaskAlreadyCompleteException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            if (tasks.get(taskIndex).getStatusIcon().equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                throw new TaskAlreadyCompleteException(\"The specified task has already been completed.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.get(taskIndex).completeTask();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Update the storage"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            if (storage !\u003d null) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                storage.setTasksList(tasks);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String message \u003d \"Understood. The following task is now marked as done:\\n\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            message +\u003d \"    \" + tasks.get(taskIndex);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new InvalidIndexException("
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    \"You have specified an index not within the ranges of the list. Please try again.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Deletes the task at the specified index."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param taskIndex Index of the task in the list."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a String informing the task has been deleted."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @throws InvalidIndexException when the given index is not within the size of the list."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String deleteTask(int taskIndex) throws InvalidIndexException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                return \"You currently have no tasks pending.\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String message \u003d \"Understood. The following task has been deleted.\\n\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            message +\u003d \"    \" + tasks.get(taskIndex) + \"\\n\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Update the storage"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            if (storage !\u003d null) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                storage.setTasksList(tasks);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            message +\u003d getNumberOfTasks();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            throw new InvalidIndexException("
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    \"You have specified an index not within the ranges of the list. Please try again.\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Lists the upcoming tasks in the given time frame."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tasks without time limits are included as well."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param days Number of days ahead to check for tasks."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a String containing tasks occuring in the upcoming days."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String getUpcoming(int days) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        //If tasks is empty"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return \"You currently have no tasks pending.\\n\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"These are the following task(s) to complete:\\n\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Size of the tasks"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Threshold for time of tasks"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        LocalDateTime threshold \u003d LocalDate.now().plusDays(days + 1).atTime(LocalTime.MIN);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Builds the list of tasks"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            if (task instanceof TimedTask) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                if (((TimedTask) task).getTime().isAfter(threshold)) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            sb.append(i + 1).append(\". \").append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Returns the list of tasks that fall within the time frame"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Finds tasks containing the given keyword."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * This method ignores casing."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param keywords Keywords within a task\u0027s description"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a String describing the tasks matching the keywords."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String findTasks(String[] keywords) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // If tasks is empty"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return \"You currently have no tasks pending.\\n\";"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Set to contain tasks"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Set\u003cString\u003e uniqueTasks \u003d new LinkedHashSet\u003cString\u003e();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Flag for when a match is found"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Builds the list of tasks"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            for (String keyword : keywords) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                if (task.getTask().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    if (!found) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                        found \u003d true;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    uniqueTasks.add(task.toString());"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Printed if no matches found"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return \"Sorry, that keyword did not return any results. Please try another.\";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            for (String task : uniqueTasks) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                stringBuilder.append(counter).append(\". \").append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Returns the lists of tasks found matching the keyword"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            return stringBuilder.toString();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 311
    }
  },
  {
    "path": "src/main/java/taskbot/task/TaskStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Simulates a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class TaskStub extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TaskStub(String task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 14
    }
  },
  {
    "path": "src/main/java/taskbot/task/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a task with time limits."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public abstract class TimedTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /** Time limit of the task */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a timed task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task The task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param time LocalDateTime associated with the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TimedTask(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a timed task given its completeness."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param time Time when task occurs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param isDone Whether the task is complete."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TimedTask(String task, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return LocalDateTime of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 41
    }
  },
  {
    "path": "src/main/java/taskbot/task/TimedTaskStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * A stub to simulate tasks with time limits."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class TimedTaskStub extends TimedTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TimedTaskStub(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task, time);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"[\" + super.getStatusIcon() + \"] \" + \"Timed Task(test): \" + super.getTask()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                + \"(Time: \" + getTime().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 19
    }
  },
  {
    "path": "src/main/java/taskbot/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Encapsulates a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates an incomplete Todo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a Todo task based on its completeness."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param task Description of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param isDone Whether the task is done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public Todo(String task, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return \"[\" + super.getStatusIcon() + \"] \" + \"Todo: \" + super.getTask() + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 29
    }
  },
  {
    "path": "src/main/java/taskbot/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private DialogBox(String text, Image image, Color color, Color dropShadow) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(DialogBox.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        displayPicture.setStroke(color);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        displayPicture.setFill(new ImagePattern(image));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        displayPicture.setEffect(new DropShadow(+25d, 0d, +2d, dropShadow));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a DialogBox representing the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param text The text the user has input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param image The image representing the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a DialogBox with the given text and image."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return new DialogBox(text, image, Color.SEAGREEN, Color.DARKSEAGREEN);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates a DialogBox representing TaskBot\u0027s response."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param text The response given by TaskBot."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @param image The image representing TaskBot."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * @return a DialogBox to be displayed as TaskBot\u0027s answer to the user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public static DialogBox getTaskbotDialog(String text, Image image) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(text, image, Color.BLUE, Color.DARKBLUE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 79
    }
  },
  {
    "path": "src/main/java/taskbot/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.logic.Taskbot;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private ImageView title;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Taskbot taskbot;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Image taskbotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Taskbot.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Image titleImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/TitleCard.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Initializes the main window to be displayed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Making the scroll bar dynamically update by binding"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Setting the title card to be displayed"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        title.setImage(titleImage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Setting up Taskbot to greet the user"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        String greeting \u003d \"Hello there, my name is TaskBot.\\nHow may I be of assistance today?\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getTaskbotDialog(greeting, taskbotImage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void setTaskbot(Taskbot taskbot) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        this.taskbot \u003d taskbot;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Check if exit is called"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        if (input.equals(\"exit\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Pauses for 1.5s for goodbye text to be read before exiting"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1.5f));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            pause.setOnFinished(event -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            pause.play();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        String response \u003d taskbot.getResponse(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                DialogBox.getTaskbotDialog(response, taskbotImage)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        );"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 81
    }
  },
  {
    "path": "src/main/java/taskbot/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.logic.Taskbot;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * A GUI for TaskBot using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class Ui extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private Taskbot taskbot \u003d new Taskbot();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            AnchorPane anchorPane \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Scene scene \u003d new Scene(anchorPane);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Setting up background"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            BackgroundFill backgroundFill \u003d new BackgroundFill(Color.CORNFLOWERBLUE,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    CornerRadii.EMPTY, Insets.EMPTY);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Background background \u003d new Background(backgroundFill);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            anchorPane.setBackground(background);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            stage.setTitle(\"TaskBot\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setTaskbot(taskbot);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 48
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" wrappingWidth\u003d\"300.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            \u003cFont name\u003d\"Constantia\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003c/Text\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" pickOnBounds\u003d\"true\" radius\u003d\"30.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"taskbot.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"48.0\" maxHeight\u003d\"600.0\" prefHeight\u003d\"509.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"510.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003cImageView fx:id\u003d\"title\" fitHeight\u003d\"62.0\" fitWidth\u003d\"299.0\" layoutX\u003d\"51.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"458.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 21
    }
  },
  {
    "path": "src/test/java/taskbot/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.DeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.EventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.HelpCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.TodoCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import taskbot.command.UpcomingCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Tests the various commands that Parser handles."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private String testCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns a TodoCommand."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseTodo() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"todo todoTask\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new TodoCommand(\"todoTask\"), Parser.parse(testCommand));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns a DeadlineCommand."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseDeadline() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"deadline deadlineTask /by 2020-08-03 0845\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new DeadlineCommand(\"deadlineTask /by 2020-08-03 0845\"),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    Parser.parse(testCommand));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns an EventCommand."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseEvent() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"event eventTask /at 2020-08-03 0845\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new EventCommand(\"eventTask /at 2020-08-03 0845\"),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    Parser.parse(testCommand));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns a ListCommand."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseList() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"list\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new ListCommand(), Parser.parse(testCommand));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns an UpcomingCommand."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseUpcoming() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"upcoming 2\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new UpcomingCommand(2), Parser.parse(testCommand));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns a FindCommand."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseFind() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"find book\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new FindCommand(\"book\"),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    Parser.parse(testCommand));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns a DoneCommand."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseDone() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"done 2\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Index of tasks list will be 2 - 1 \u003d 1"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new DoneCommand(1), Parser.parse(testCommand));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns a DeleteCommand."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseDelete() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"delete 2\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Index of tasks list will be 2 - 1 \u003d 1"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new DeleteCommand(1), Parser.parse(testCommand));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns an ExitCommand."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseExit() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"exit\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new ExitCommand(), Parser.parse(testCommand));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns a correct HelpCommand given no arguments."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseHelpNoArgs() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"help \";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(new HelpCommand(\"help\"), Parser.parse(testCommand));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * Tests if Parser returns a correct HelpCommand given"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     * the command argument."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testParseHelpArgs() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            testCommand \u003d \"help \";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String[] testCommands \u003d new String[]{"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                \"deadline\", \"delete\", \"done\", \"event\", \"exit\","
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                \"find\", \"list\", \"todo\", \"upcoming\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            };"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            for (String command : testCommands) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                assertEquals(new HelpCommand(command),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                        Parser.parse(testCommand + command));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 182
    }
  },
  {
    "path": "src/test/java/taskbot/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "package taskbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " * Tests the methods of the TaskList class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public TaskListTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        // Adds task stubs"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        for (int i \u003d 1; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"Task \" + i));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testListTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            StringBuilder expectedOutput \u003d new StringBuilder(\"These are the following task(s) to complete:\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            for (int i \u003d 1; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                expectedOutput.append(i).append(\". \").append(\"[\\u2718] Task \").append(i).append(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            expectedOutput.append(\"3. [\\u2718] Task 3\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput.toString(), taskList.listTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testListTasksSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        String expectedOutput \u003d \"You now have 3 task(s) in the list.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        assertEquals(expectedOutput, taskList.getNumberOfTasks());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testAddTodo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String task \u003d \"TodoTask 1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Todo todoTask \u003d new Todo(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String expectedOutput \u003d \"I have added a Todo:\\n\" + todoTask"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"\\n\" + \"You now have 4 task(s) in the list.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput, taskList.addTodoTask(task));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Reset the TaskList"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testAddEvent() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String task \u003d \"EventTask /at 2020-08-03 0845\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Event eventTask \u003d new Event(\"EventTask \", LocalDateTime.parse(\"2020-08-03T08:45:00\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String expectedOutput \u003d \"I have added an Event:\\n\" + eventTask"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"\\n\" + \"You now have 4 task(s) in the list.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput, taskList.addEventTask(task));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Reset the TaskList"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testAddDeadline() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String task \u003d \"DeadlineTask /by 2020-08-03 0845\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            Deadline deadlineTask \u003d new Deadline(\"DeadlineTask \", LocalDateTime.parse(\"2020-08-03T08:45:00\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String expectedOutput \u003d \"I have added a Deadline:\\n\" + deadlineTask"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"\\n\" + \"You now have 4 task(s) in the list.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput, taskList.addDeadlineTask(task));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Reset the TaskList"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testCompleteTask() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String expectedOutput \u003d \"Understood. The following task is now marked as done:\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"    [\\u2713] Task 3\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput, taskList.completeTask(2));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Reset the TaskList"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String expectedOutput \u003d \"Understood. The following task has been deleted.\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"    [\\u2718] Task 3\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"You now have 2 task(s) in the list.\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput, taskList.deleteTask(2));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Reset the TaskList"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testGetUpcoming() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            LocalDateTime currentDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Task without any time"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"Task 1\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Current time"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TimedTaskStub(\"Timed Task 1\", currentDateTime));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // 1 Day later"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TimedTaskStub(\"Timed Task 2\", currentDateTime.plusDays(1)));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // 7 Days later"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TimedTaskStub(\"Timed Task 3\", currentDateTime.plusDays(7)));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String expectedOutput \u003d \"These are the following task(s) to complete:\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"1. [\\u2718] Task 1\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"2. [\\u2718] Timed Task(test): Timed Task 1(Time: \""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + currentDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\")) + \")\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"3. [\\u2718] Timed Task(test): Timed Task 2(Time: \""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + currentDateTime.plusDays(1).format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\"))"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \")\\n\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput, taskList.getUpcoming(3));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            // Reset the TaskList"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testFindTasks() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"Run\"));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"run\"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"run away\"));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"not printed\"));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String[] keywords \u003d new String[]{\"run\"};"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String expectedOutput \u003d \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"1. [\\u2718] Run\\n\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"2. [\\u2718] run\\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"3. [\\u2718] run away\\n\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput, taskList.findTasks(keywords));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            //Reset the TaskList"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    public void testFindTasksMultipleKeywords() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"walk\"));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"run\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"run away\"));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            tasks.add(new TaskStub(\"not printed\"));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String[] keywords \u003d new String[]{\"run\", \"walk\"};"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            String expectedOutput \u003d \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"1. [\\u2718] walk\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"2. [\\u2718] run\\n\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "                    + \"3. [\\u2718] run away\\n\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            assertEquals(expectedOutput, taskList.findTasks(keywords));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            //Reset the TaskList"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 214
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "event project meeting /at 3:30 pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "todo buy milk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "deadline orange"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "delete 90"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "javac  -cp ..\\src\\taskbot\\ -Xlint:none -d ..\\bin ..\\src\\taskbot\\exceptions\\*.java ..\\src\\taskbot\\task\\*.java ..\\src\\taskbot\\logic\\*.java ..\\src\\taskbot\\main\\Main.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, error level \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "java -classpath ..\\bin taskbot/main/Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siangernlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siangernlow"
        },
        "content": "cmd /k"
      }
    ],
    "authorContributionMap": {
      "siangernlow": 5,
      "-": 18
    }
  }
]
