[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 19,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "This is a user guide for the personalised task manager, Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "1. Add"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "2. Delete"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "3. Complete"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "4. Find"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "5. List"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "6. View statistics"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "7. Exit"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `todo {name}` - Adds a new todo task to Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Todos are tasks without any date attached to it."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Adds a todo to Duke. Name of task has to be specified after the todo command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`todo eat`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`added!`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`[todo][x] eat`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`total task: 1`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`:o`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `deadline {name} /by {date}` - Adds a new deadline task to Duke"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Deadlines are tasks that has to be done before a specific date."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Adds a deadline to Duke. Name of task and date of task has to be specified after the todo command. Date has to be specified in YYYY-MM-DD format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`deadline homework /by 2020-09-20`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`added!`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`[deadline][x] homework (by: 20 Sep 2020)`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`total task: 2`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`:o`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `event {name} /at {date}` - Adds a new event task to Duke"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Events are tasks that occur on a specific date."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Adds an event to Duke. Name of task and date of task has to be specified after the todo command. Date has to be specified in YYYY-MM-DD format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`event birthday /at 2020-10-10`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`added!`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`[event][x] birthday (at: 10 Oct 2020)`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`total task: 3`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`:o`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `delete {task number}` - Deletes a task in Duke"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Deletes a task in Duke. Task number has to be specified."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`removed!! ^^`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`[event][x] birthday (at: 10 Oct 2020)`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`total task: 2`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`:o`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `done {task number}` - Completes a task in Duke"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Completes a task in Duke. Task number has to be specified."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`done 5`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`gfy youve managed to finish the following...`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`[todo][o] read book`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `find {keyword}` - Finds a task in Duke"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Finds task matching specified keyword in Duke. Keyword has to be specified."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`1. [todo][o] eat`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`2. [event][x] book club (at: 11 Oct 2020)`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `list` - List all tasks added to Duke"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Lists all tasks added to Duke."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`1. [todo][x] book review`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`2. [event][x] book club (at: 11 Oct 2020)`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`3. [todo][o] eat`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`4. [deadline][x] homework (by: 20 Sep 2020)`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `statistics` - Show statistics of tasks in Duke"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Shows weekly statistics."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`total tasks added: 3`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`total tasks completed: 1`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "`total tasks deleted: 1`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "### `bye` - Terminates Duke"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "Terminates Duke."
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 111,
      "-": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Deadline(String s, String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Deadline(String name, boolean completed, String deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Deadline(String name, boolean completed, LocalDate deadline) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return deadline.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Deadline completeTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Deadline(this.name, true, this.deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"[deadline]\" + super.toString()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 42
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static final String HOME \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static final java.nio.file.Path PATH \u003d java.nio.file.Paths.get(HOME, \"ip\", \"data.txt\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static boolean pathExists \u003d java.nio.file.Files.exists(PATH);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static TaskList tasklist;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.exit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.list();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                statistics \u003d statistics.addCompletedTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                tasklist.updateStatistics(statistics);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                int n \u003d parser.getTaskNumber(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                Task t \u003d tasklist.complete(n);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.complete(t);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                statistics \u003d statistics.addDeletedTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                tasklist.updateStatistics(statistics);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                int n \u003d parser.getTaskNumber(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                Task t \u003d tasklist.delete(n);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.delete(t, tasklist.getTotal());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                statistics \u003d statistics.addTask();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                tasklist.updateStatistics(statistics);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                Task t \u003d tasklist.add(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.add(t, tasklist.getTotal());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String keyword \u003d parser.getKeyword(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.find(keyword);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"statistics\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return statistics.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                // unknown input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                throw new UnknownInputException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return ui.handleException(e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static void initialize() throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (!pathExists) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            File file \u003d new File(String.valueOf(PATH));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            tasklist \u003d new TaskList(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            tasklist.initialize();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Scanner myReader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        int total \u003d myReader.nextInt();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        tasklist \u003d new TaskList(total);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        myReader.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        statistics \u003d new Statistics(data);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        statistics \u003d statistics.reset();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        // use launcher to launch"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 74,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Event(String s, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Event(String name, boolean completed, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Event(String name, boolean completed, LocalDate time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"event\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return time.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Event completeTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Event(this.name, true, this.time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"[event]\" + super.toString()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \" (at: \" + this.time.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 42
    }
  },
  {
    "path": "src/main/java/IncompleteInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class IncompleteInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    IncompleteInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(\"please finish your sentence.. :(\\neither your task name is blank or youre missing the time!!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            duke.initialize();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (input.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1.5));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            pause.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            pause.play();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 58
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This is a class that parses string to return relevant information."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns task number that user wants to edit."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s User input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task number that user wants to edit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public int getTaskNumber(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(s.split(\" \")[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns Task after reading string representation stored in save file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s String representation of task in save file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task based on data provided in String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task stringToTask(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String[] arr \u003d s.split(\" @\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String type \u003d arr[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String status \u003d arr[1].substring(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Boolean completed;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String name \u003d arr[2].substring(1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String time \u003d arr[3].substring(1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (status.equals(\"x\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            completed \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            completed \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return new Todo(name, completed);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return new Deadline(name, completed, time);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return new Event(name, completed, time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns Task that user wants to add."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s User input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task based on user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IncompleteInputException If user input is incomplete."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task commandToTask(String s) throws IncompleteInputException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            if (s.contains(\"/\")) { // event or deadline"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String[] arr \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String[] typeAndName \u003d arr[0].split(\" \", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                type \u003d typeAndName[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                name \u003d typeAndName[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                time \u003d arr[1].split(\" \")[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                    return new Deadline(name, time);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                    return new Event(name, time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else { // to-do"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                assert s.startsWith(\"todo\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String[] arr \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                name \u003d arr[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return new Todo(name);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            throw new IncompleteInputException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getKeyword(String s) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return s.substring(5);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 83
    }
  },
  {
    "path": "src/main/java/Statistics.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Statistics {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private int totalTasksAdded;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private int totalTasksCompleted;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private int totalTasksDeleted;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private DayOfWeek day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private boolean isMonday;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Statistics(int added, int completed, int deleted) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.totalTasksAdded \u003d added;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.totalTasksCompleted \u003d completed;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.totalTasksDeleted \u003d deleted;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.day \u003d LocalDate.now().getDayOfWeek();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (this.day.equals(DayOfWeek.MONDAY)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            this.isMonday \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            this.isMonday \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Statistics(String data) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String[] arr \u003d data.split(\" @\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.totalTasksAdded \u003d Integer.parseInt(arr[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.totalTasksCompleted \u003d Integer.parseInt(arr[1].substring(1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.totalTasksDeleted \u003d Integer.parseInt(arr[2].substring(1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.day \u003d LocalDate.now().getDayOfWeek();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (this.day.equals(DayOfWeek.MONDAY)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            this.isMonday \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            this.isMonday \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Statistics reset() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (isMonday) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return new Statistics(0, 0, 0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    int getTotalTasksAdded() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return this.totalTasksAdded;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    int getTotalTasksCompleted() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return this.totalTasksCompleted;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    int getTotalTasksDeleted() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return this.totalTasksDeleted;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Statistics addTask() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Statistics(this.totalTasksAdded + 1, this.totalTasksCompleted, this.totalTasksDeleted);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Statistics addCompletedTask() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Statistics(this.totalTasksAdded, this.totalTasksCompleted + 1, this.totalTasksDeleted);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Statistics addDeletedTask() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Statistics(this.totalTasksAdded, this.totalTasksCompleted, this.totalTasksDeleted + 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String statisticsToData() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return this.totalTasksAdded + \" @ \" + this.totalTasksCompleted + \" @ \" + this.totalTasksDeleted;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"total tasks added: \" + this.totalTasksAdded + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \"total tasks completed: \" + this.totalTasksCompleted + \"\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \"total tasks deleted: \" + this.totalTasksDeleted;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 81
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This is a class to represent tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /** Name of task */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /** Status of task, can either be complete or incomplete */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Task(String name, boolean completed) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.isCompleted \u003d completed;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns symbol used to represent status of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return o if task is complete, x if task is incomplete."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return (this.isCompleted ? \"o\" : \"x\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Updates the status of the task to completed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Completed task with same name."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task completeTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Task(this.name, true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 55
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This is a class to edit data in the save file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static final String HOME \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static final java.nio.file.Path PATH \u003d java.nio.file.Paths.get(HOME, \"ip\", \"data.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /** Total number of tasks in the task list */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private int total;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    TaskList(int total) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assert total \u003e\u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.total \u003d total;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    int getTotal() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assert total \u003e\u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return this.total;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    void initialize() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter fw \u003d new FileWriter(PATH.toFile());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        fw.write(\"0\\n0 @ 0 @ 0\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns String representation of data of Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param t Task to be converted into String."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return String representation of data."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String taskToString(Task t) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String type \u003d t.getType();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String status \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String name \u003d t.getName();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String time \u003d t.getTime();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return type + \" @ \" + status + \" @ \" + name + \" @ \" + time;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Adds Task to save file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void writeData(Task t) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter fw \u003d new FileWriter(PATH.toFile(), true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        pw.println(taskToString(t));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        pw.flush();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Updates total number of Tasks in save file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param newTotal New total number of tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void updateTotal(int newTotal) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        File fileToBeModified \u003d PATH.toFile();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String newText \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        newText \u003d newTotal + System.lineSeparator();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.readLine(); // skips the first line (total)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            newText \u003d newText + line + System.lineSeparator();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.write(newText);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Updates Statistics for user."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s New statistics."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void updateStatistics(Statistics s) throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String newStatistics \u003d s.statisticsToData();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        File fileToBeModified \u003d PATH.toFile();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String newText \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        newText \u003d line + System.lineSeparator();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.readLine(); // skips the second line (statistics)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        newText \u003d newText + newStatistics + System.lineSeparator();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        line \u003d reader.readLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            newText \u003d newText + line + System.lineSeparator();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.write(newText);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Replaces specified line of text with another line of text."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param prevTask Text to be replaced."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param newTask Text to be added."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void replaceText(String prevTask, String newTask) throws IOException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        File fileToBeModified \u003d PATH.toFile();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String oldText \u003d \"\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            oldText \u003d oldText + line + System.lineSeparator();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String newText \u003d oldText.replaceAll(prevTask, newTask);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.write(newText);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Deletes specified line of text from file."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param task Task to be deleted."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void deleteText(String task) throws IOException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        File fileToBeModified \u003d PATH.toFile();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String newText \u003d \"\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            if (line.equals(task)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                newText \u003d newText + line + System.lineSeparator();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.write(newText);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Completes specified Task."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param taskNumber Number of task to be completed."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Completed task."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task complete(int taskNumber) throws IOException, UnknownNumberException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (taskNumber \u003c\u003d 0 || taskNumber \u003e total) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            throw new UnknownNumberException();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Scanner myReader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String taskData \u003d \"\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        for (int i \u003d -1; i \u003c\u003d taskNumber; i++) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            taskData \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Task t \u003d parser.stringToTask(taskData);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        t \u003d t.completeTask();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        replaceText(taskData, taskToString(t));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Deletes specified Task from save file."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param taskNumber Number of task to be deleted."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task to be deleted."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task delete(int taskNumber) throws IOException, UnknownNumberException {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (taskNumber \u003c\u003d 0 || taskNumber \u003e total) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            throw new UnknownNumberException();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Scanner myReader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String taskData \u003d \"\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        for (int i \u003d -1; i \u003c\u003d taskNumber; i++) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            taskData \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Task t \u003d parser.stringToTask(taskData);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        deleteText(taskToString(t));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        total--;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        updateTotal(total);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Adds new Task to save file."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task to be added."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IncompleteInputException If user input is incomplete."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task add(String s) throws IOException, IncompleteInputException {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Task t \u003d parser.commandToTask(s);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writeData(t);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        total++;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        updateTotal(total);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 266
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Todo(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Todo(String name, boolean completed) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Todo completeTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Todo(this.name, true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"[todo]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Todo test \u003d (Todo) obj;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else if (obj \u003d\u003d null || obj.getClass() !\u003d this.getClass()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else if (this.name.equals(test.name) \u0026\u0026 (this.isCompleted \u003d\u003d test.isCompleted)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 43
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This is class to interact with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static final String HOME \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private static final java.nio.file.Path PATH \u003d java.nio.file.Paths.get(HOME, \"ip\", \"data.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private String enter \u003d \"\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Bids user farewell."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"ok u can leave lmao\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * List all Tasks in save file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            Scanner myReader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            myReader.nextLine(); // skip first line (total)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            myReader.nextLine(); // skip second line (statistics)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                result +\u003d counter + \". \" + parser.stringToTask(data) + enter;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of completed task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String complete(Task t) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"gfy youve managed to finish the following...\" + enter;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        t \u003d t.completeTask();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d t + enter;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of deleted task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String delete(Task t, int total) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"removed!! ^^\" + enter;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d t + enter;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"total task: \" + total + \"\\n:o\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of added task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String add(Task t, int total) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"added!\" + enter;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d t + enter;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"total task: \" + total + \"\\n:o\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of exception."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String handleException(Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d e.getMessage();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of all results found with specified keyword."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param keyword Keyword user is interested in."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return String of all tasks with user keyword."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If Scanner is unable to find file."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String find(String keyword) throws IOException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Scanner reader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        int total \u003d reader.nextInt(); // to skip the first integer"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            if (line.contains(keyword)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                result +\u003d counter + \". \" + parser.stringToTask(line) + enter;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (line.contains(keyword)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            result +\u003d counter + \". \" + parser.stringToTask(line) + enter;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 138
    }
  },
  {
    "path": "src/main/java/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class UnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    UnknownInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(\"i dont know what youre tryna say T.T\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5
    }
  },
  {
    "path": "src/main/java/UnknownNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class UnknownNumberException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    UnknownNumberException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(\"this task does not exist!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void testGetTaskNumber() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(1, p.getTaskNumber( \"done 1\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(17, p.getTaskNumber( \"delete 17\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(299, p.getTaskNumber( \"done 299\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void testCommandToTask_completeInput_success() throws IncompleteInputException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(new Todo(\"eat\"), p.commandToTask(\"todo eat\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        /*assertEquals(new Deadline(\"homework\", \"2020-08-30\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                p.commandToTask(\"deadline homework /by 2020-08-30\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(new Event(\"birthday\", \"2020-12-04\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                p.commandToTask(\"event birthday /at 2020-12-4\"));*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void testCommandToTask_incompleteInput_exceptionThrown() throws IncompleteInputException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            assertEquals(new Todo(\"eat\"), p.commandToTask(\"todo\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            assertEquals(\"please finish your sentence.. :(\\neither your task name is blank \" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                    \"or youre missing the time!!\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        /*assertEquals(new Deadline(\"homework\", \"2020-08-30\"),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                p.commandToTask(\"deadline homework /by 2020-08-30\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(new Event(\"birthday\", \"2020-12-04\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                p.commandToTask(\"event birthday /at 2020-12-4\"));*/"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 39
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "deadline cry /by tonight"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "event hackathon /at 30 august"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/IncompleteInputException.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/UnknownInputException.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 8
    }
  }
]
