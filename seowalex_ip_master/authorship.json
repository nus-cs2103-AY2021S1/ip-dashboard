[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public AddCommand(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    protected void showAddTask(TaskList tasks, Ui ui, Task task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ui.showPrompt(\"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + task + \"\\n\" + \"Now you have \" + tasks.getTasks().size()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + (tasks.getTasks().size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 13
    }
  },
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDateTime by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public AddDeadlineCommand(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        showAddTask(tasks, ui, deadline);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 21
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDateTime at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public AddEventCommand(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        showAddTask(tasks, ui, event);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 21
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        showAddTask(tasks, ui, todo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 16
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, by, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isDue(LocalDate date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return by.toLocalDate().equals(date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"D | \" + super.toSaveData() + \" | \" + by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 33
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final int taskNo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DeleteCommand(int taskNo) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d tasks.deleteTask(taskNo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ui.showPrompt(\"Noted. I\u0027ve removed this task:\\n  \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + task + \"\\n\" + \"Now you have \" + tasks.getTasks().size()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + (tasks.getTasks().size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 15
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final int taskNo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DoneCommand(int taskNo) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d tasks.doTask(taskNo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ui.showPrompt(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 13
    }
  },
  {
    "path": "src/main/java/DueCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DueCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DueCommand(LocalDate date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cTask\u003e dueTasks \u003d tasks.getDueTasks(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (dueTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"There are no tasks in your list occurring on \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    + date.format(formatter) + \".\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list occurring on \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + date.format(formatter) + \":\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        for (Task task : dueTasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            output.append(tasks.getTasks().indexOf(task) + 1).append(\".\").append(task).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ui.showPrompt(output.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(\"\\u2639 OOPS!!! \" + message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, at, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Event(String description, LocalDateTime at, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isDue(LocalDate date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return at.toLocalDate().equals(date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"E | \" + super.toSaveData() + \" | \" + at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 33
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ui.showPrompt(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (tasks.getTasks().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            output.append(tasks.getTasks().indexOf(task) + 1).append(\".\").append(task).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        ui.showPrompt(output.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.MonthDay;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.Year;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static LocalDateTime parseDateTime(String input) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        int index \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String date \u003d index \u003d\u003d -1 ? input : input.substring(0, index);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String time \u003d index \u003d\u003d -1 ? \"\" : input.substring(index + 1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return LocalDateTime.of(parseDate(date), parseTime(time));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static LocalDate parseDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d/M[/yyyy][/yy]\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            TemporalAccessor result \u003d dateFormatter.parseBest(input, LocalDate::from, MonthDay::from);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            if (result instanceof LocalDate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                date \u003d ((LocalDate) result);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                date \u003d ((MonthDay) result).atYear(Year.now().getValue());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Unable to parse date.\\n \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    + \"Please input your date in one of the following formats:\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    + \"26/08\\n\" + \"26/08/20\\n\" + \"26/08/2020\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static LocalTime parseTime(String input) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        LocalTime time \u003d LocalTime.MIDNIGHT;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String[] params \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                if (params.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"H:m\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    time \u003d timeFormatter.parse(params[0], LocalTime::from);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:m a\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    time \u003d timeFormatter.parse(params[0] + \" \" + params[1], LocalTime::from);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Unable to parse time.\\n \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        + \"Please input your time in one of the following formats:\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        + \"1:19\\n\" + \"1:19 AM\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String[] commands \u003d fullCommand.split(\"\\\\s\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String command \u003d commands[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String args \u003d commands.length \u003e 1 ? String.join(\" \", Arrays.copyOfRange(commands, 1, commands.length)) : \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                if (!args.isBlank()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                if (!args.isBlank()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            case \"due\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                if (args.isBlank()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    throw new DukeException(\"Date required for the due command.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                return new DueCommand(parseDate(args));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                if (args.isBlank()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    throw new DukeException(\"Task number required for the delete command.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                } else if (!args.chars().allMatch(Character::isDigit)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    throw new DukeException(\"Only positive integers allowed for the delete command.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                return new DoneCommand(Integer.parseInt(args));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                if (args.isBlank()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    throw new DukeException(\"Task number required for the delete command.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                } else if (!args.chars().allMatch(Character::isDigit)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    throw new DukeException(\"Only positive integers allowed for the delete command.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(args));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                return new AddTodoCommand(args);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                String[] deadlineArgs \u003d args.split(\"\\\\s/by\\\\s\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                String description \u003d deadlineArgs[0];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                String by \u003d deadlineArgs.length \u003e 1"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        ? String.join(\" \", Arrays.copyOfRange(deadlineArgs, 1, deadlineArgs.length))"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        : \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                return new AddDeadlineCommand(description, parseDateTime(by));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                String[] eventArgs \u003d args.split(\"\\\\s/at\\\\s\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                String description \u003d eventArgs[0];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                String at \u003d eventArgs.length \u003e 1"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        ? String.join(\" \", Arrays.copyOfRange(eventArgs, 1, eventArgs.length))"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        : \"\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                return new AddEventCommand(description, parseDateTime(at));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 129
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.filePath \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Files.createDirectories(filePath.getParent());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            List\u003cString\u003e data \u003d tasks.stream().map(Task::toSaveData).collect(Collectors.toList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            Files.write(filePath, data);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Unable to save file! Exiting without saving :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (Files.exists(filePath)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                List\u003cString\u003e lines \u003d Files.readAllLines(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                for (String line : lines) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    String[] params \u003d line.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    String type \u003d params[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    String description \u003d params[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    boolean isDone \u003d params[1].equals(\"1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    if (!params[1].equals(\"0\") \u0026\u0026 !params[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        case \"T\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                            tasks.add(new Todo(description, isDone));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                            tasks.add(new Deadline(description, LocalDateTime.parse(params[3]), isDone));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        case \"E\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                            tasks.add(new Event(description, LocalDateTime.parse(params[3]), isDone));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                            throw new DukeException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } catch (DukeException | IOException | ArrayIndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                throw new DukeException(\"Data file is corrupt. Ignoring saved tasks :-(\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 69
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public abstract boolean isDue(LocalDate date);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task getTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Task \" + taskNo + \" does not exist.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task doTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d getTask(taskNo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task deleteTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d getTask(taskNo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public List\u003cTask\u003e getDueTasks(LocalDate date) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return tasks.stream().filter(task -\u003e task.isDue(date)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 51
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public boolean isDue(LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"T | \" + super.toSaveData();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        showPrompt(LOGO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        );"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void showPrompt(String promptText) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String[] lines \u003d promptText.split(\"[\\\\r\\\\n]+\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(INDENTATION + HORIZONTAL_LINE + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            output.append(INDENTATION).append(line).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        output.append(INDENTATION).append(HORIZONTAL_LINE).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        System.out.println(output.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void showError(String errorText) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        showPrompt(errorText);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 41
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline test /by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event test /at"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done something"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "blah"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "seowalex": 22
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "seowalex": 1,
      "-": 37
    }
  }
]
