[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 17,
      "-": 45
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * main class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    // Initialise my variables for duke backend data handling"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    Ui myDukeBot \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    Storage myStorage \u003d new Storage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    Parser myParser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    TaskList myTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    // Added 2 image items for use later in duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/SeanDuke.JPG\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/JARVIS.JPG\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String response \u003d myParser.listenerForUI(myTaskList, myDukeBot,input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myStorage.updateDirectory(myTaskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 36,
      "-": 3
    }
  },
  {
    "path": "src/main/java/InSuffArgsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class InSuffArgsException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        Application.launch(Main.class,args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        duke.myStorage.createDirectory(\"ToDo\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        duke.myStorage.populateList(duke.myTaskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    // Added 2 image items for use later in duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/SeanDuke.JPG\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/JARVIS.JPG\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        assert userImage!\u003dnull:\"duke image cannot be null\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        assert duke!\u003dnull:\"duke image cannot be null\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 54
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * Listener of inputs"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String listenerForUI(TaskList myTasklist, Ui myUi,String inputUI) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String currInput \u003d inputUI;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String response\u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            myUi.horizontalRule();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            String[] fullArg \u003d currInput.split(\"/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            String[] args1 \u003d fullArg[0].split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            if (currInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response +\u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                myUi.horizontalRule();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            if (args1[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                String findItem \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                for (int i \u003d 1; i \u003c args1.length; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    findItem +\u003d args1[i] + \" \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003dmyTasklist.findTaskUI(findItem);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } else if (args1[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                String task \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                for (int i \u003d 1; i \u003c args1.length; i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    task +\u003d args1[i] + \" \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    response+\u003dmyTasklist.addTaskUI(\"[T]\", task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                } catch (InSuffArgsException E) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a \" + args1[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003dmyTasklist.numTaskUI();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } else if (args1[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003dmyTasklist.deleteTaskUI(Integer.parseInt(args1[1]) - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } else if (args1[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                String task \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                for (int i \u003d 1; i \u003c args1.length; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    task +\u003d args1[i] + \" \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    if (fullArg.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        throw new InSuffArgsException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    if (fullArg.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        String day \u003d Integer.parseInt(fullArg[1].substring(fullArg[1].length() - 1)) + \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        String month \u003d Integer.parseInt(fullArg[2]) + \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        int year \u003d Integer.parseInt(fullArg[3].split(\" \")[0]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        //int time \u003d Integer.parseInt(fullArg[3].split(\" \")[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        //System.out.println(time);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        LocalDate d1 \u003d LocalDate.parse(year + \"-\" + month + \"-\" + day);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        response+\u003dmyTasklist.addTaskUI(\"[D]\", task, d1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        response+\u003dmyTasklist.addTaskUI(\"[D]\", task, fullArg[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                } catch (InSuffArgsException E) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a \" + args1[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003dmyTasklist.numTaskUI();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } else if (args1[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                String task \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                for (int i \u003d 1; i \u003c args1.length; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    task +\u003d args1[i] + \" \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    if (fullArg.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                        throw new InSuffArgsException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    response+\u003d myTasklist.addTaskUI(\"[E]\", task, fullArg[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                } catch (InSuffArgsException E) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a \" + args1[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003dmyTasklist.numTaskUI();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } else if (currInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003dmyTasklist.listUI();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } else if (args1[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                int index \u003d Integer.parseInt(args1[1]) - 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                myTasklist.getTasks().get(index).setDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003d\"Nice I\u0027ve marked this tasks as done\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003dmyTasklist.getTasks().get(index)+\"\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                response+\u003d\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            response+\u003dmyUi.horizontalRule();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 110
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.nio.file.FileSystems;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * class responsible for harddrive management"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * create directory if it doesnt exist"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param dirName name of desired directory"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void createDirectory(String dirName) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        File file \u003d new File(dirName);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            file.mkdir();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        assert file.exists();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * creating a td item from filename"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param fileName name of file wanted"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void createToDo(String fileName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        File file \u003d new File(fileName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        assert file!\u003dnull;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * create file then write object to it"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param myTask  task to convert into .txt"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param todoNum what to label the file as"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void writeToFile(Task myTask, int todoNum) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        createToDo(\"ToDo/item\" + todoNum + \".txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(new FileOutputStream(\"ToDo/item\" + todoNum + \".txt\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            out.writeObject(myTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * gets instance back from a .txt file"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param fileDir the location of object in .txt"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @return the java instance of object"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public Task readFromFile(String fileDir) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        Task myTask \u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(fileDir));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            myTask \u003d (Task) in.readObject();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return myTask;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * my (To Do) directory synced with arraylist items"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param myTaskList the items to copy from"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void updateDirectory(TaskList myTaskList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        // deleting all files in directory"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        File dir \u003d new File(\"ToDo\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        File[] myItems \u003d dir.listFiles();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        for (File child : myItems) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            if (child.toString().substring(0, 9).equals(\"ToDo/item\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                Path path \u003d FileSystems.getDefault().getPath(child.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    Files.delete(path);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                } catch (NoSuchFileException x) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    System.err.format(\"%s: no such\" + \" file or directory%n\", path);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                } catch (IOException x) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                    System.err.println(x);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        // repopulating directory with that in arraylist taks"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        for (int i \u003d 0; i \u003c myTaskList.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            writeToFile(myTaskList.getTasks().get(i), i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * method to fill up the list with harddrive data"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param myList the list to fill"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void populateList(TaskList myList) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        File dir \u003d new File(\"ToDo\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        File[] myItems \u003d dir.listFiles();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        for (File child : myItems) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            if (child.toString().substring(0, 9).equals(\"ToDo/item\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                myList.getTasks().add(readFromFile(child.toString()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            // Do something with child"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 134
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * Task class that stores what to do, type, deadline and if finished"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private String type;// can be [T] [E] or [D]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private boolean done \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private String deadLine \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public LocalDate localDeadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * Tells if tasks is finish"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @return boolean of whether task is finished"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public boolean finished() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * Sets done to true. Used when finished task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * Constructor to create task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param type    string value of [\"T\"] etc"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param details consists of task information"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public Task(String type, String details) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public boolean relevant(String keyWord) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        if (details.contains(keyWord)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * Constructor to create task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param type     string value of [\"T\"] etc"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param details  consists of task information"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param deadLine deadline of task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public Task(String type, String details, String deadLine) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.deadLine \u003d deadLine;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * Constructor to create task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param type          string value of [\"T\"] etc"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param details       consists of task information"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param localDeadline deadline of task in LocalDate instance"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public Task(String type, String details, LocalDate localDeadline) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.localDeadline \u003d localDeadline;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        deadLine \u003d localDeadline.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * properly formats string value"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @returns string of all relevant information of myTasks"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String checkbox \u003d done ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String myDeadline \u003d deadLine \u003d\u003d null ? \"\" : \"-------\" + deadLine;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return this.type + checkbox + \" \" + this.details + \" \" + myDeadline;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 99
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * Task list to store an manage all tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * gives the list of all tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @return arrayList of my tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public static TaskList TaskList(Task ... myTasks){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        TaskList myList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        for(int i \u003d 0 ;i\u003cmyTasks.length;i++){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            myList.getTasks().add(myTasks[i]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return myList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String findTaskUI(String keyword) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String myStr \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        ArrayList\u003cTask\u003e fTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            Task currTask \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            if (currTask.relevant(keyword)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                fTasks.add(currTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        for (int i \u003d 0; i \u003c fTasks.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "           myStr+\u003d\"\" + (i + 1) + \".\" + fTasks.get(i)+\"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return myStr;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    // 4 type ways to add task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    // UI"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String addTaskUI(Task myTask) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.tasks.add(myTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return \"added: \" + myTask+\"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * convenient way to add tasks. Helps to create task first then add"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param type type of task to add"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param task task details"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @throws InSuffArgsException if not enough arguments"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String addTaskUI(String type, String task) throws InSuffArgsException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            throw new InSuffArgsException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        Task myTask \u003d new Task(type, task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return addTaskUI(myTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * convenient way to add tasks. Helps to create task first then add"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param type type of task to add"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param task task details"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param d1   localDate object"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @throws InSuffArgsException if not enough arguments"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String addTaskUI(String type, String task, LocalDate d1) throws InSuffArgsException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            throw new InSuffArgsException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        Task myTask \u003d new Task(type, task, d1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return addTaskUI(myTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * convenient way to add tasks. Helps to create task first then add"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param type     type of task to add"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param task     task details"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @param deadLine string representation of deadline"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @throws InSuffArgsException if not enough arguments"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String addTaskUI(String type, String task, String deadLine) throws InSuffArgsException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            throw new InSuffArgsException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        Task myTask \u003d new Task(type, task, deadLine);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.tasks.add(myTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return \"added: \" + myTask +\"\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    //"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String deleteTaskUI(int index) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        Task myTask \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return \"removed: \" + myTask;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    // prints number of tasks in two diff ways"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * lists out all the tasks in the list in a nice format"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * prints out number of finished and unfinished task"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String numTaskUI() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String myStr \u003d \"\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        int done \u003d 0;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        int undone \u003d 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            boolean finished \u003d tasks.get(i).finished();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            if (finished) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                done++;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                undone++;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myStr +\u003ddone + \" finished tasks in the list.\\n\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myStr +\u003dundone + \" unfinished tasks in the list.\\n\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return myStr;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String listUI() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String myStr \u003d \"\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            myStr+\u003d\"\" + (i + 1) + \".\" + this.tasks.get(i)+\"\\n\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return myStr;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 161
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.nio.file.FileSystems;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " * manages user interfacce interactions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * creates line"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @return a string of line"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String horizontalRule() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String myLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "       // System.out.println(myLine);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return myLine;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * A cool duke image"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     * @return string of a Duke image"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public String greeting() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "      //  System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        return logo;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dcchan98": 50
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 19
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    TaskList myTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    Task task1 \u003d new Task(\"[T]\",\"Task1\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    Task task2 \u003d new Task(\"[T]\",\"Task2\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    Task task3 \u003d new Task(\"[T]\",\"Task3\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void addTest(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myTaskList.addTaskUI(task1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myTaskList.addTaskUI(task2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myTaskList.addTaskUI(task3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        assertEquals(myTaskList.getTasks().size(),3);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void deleteTest(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myTaskList.addTaskUI(task1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myTaskList.addTaskUI(task2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myTaskList.addTaskUI(task3);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        myTaskList.deleteTaskUI(1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        assertEquals(myTaskList.getTasks().size(),2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 33
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    Ui myUi \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void horizontalRuleTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        assertEquals(myUi.horizontalRule(),\"____________________________________________________________\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    public void greetingTest(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "        assertEquals(myUi.greeting(),logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    find ../src/main/java -name \"*java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "    )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcchan98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 7,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "../src/main/java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "../src/main/java/DukeBot.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcchan98"
        },
        "content": "../src/main/java/Duke.java"
      }
    ],
    "authorContributionMap": {
      "dcchan98": 3
    }
  }
]
