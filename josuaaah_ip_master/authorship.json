[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 23,
      "-": 44
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 11
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "D | 0 | read book | Dec 20 2020 8:20 PM"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 2
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to add a Task to the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Task to be added to the task list */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to add a Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param task The task to be added to the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Adds the Task to the task list, saves the task list and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displays a message indicating completion of the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The storage object that saves the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return A String that indicates that a task has been successfully added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If task contains an invalid date and time format."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String execute(Tasklist tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + \"  \" + task.toDisplayString() + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + \"Now you have \" + tasks.size() + \" tasks in the list\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (DateTimeException dateTimeException) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_DATE_TIME_FORMAT.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns false as it is not an ExitCommand."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 55
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command that can be executed by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Command() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public abstract String execute(Tasklist tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 14
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Task that is accompanied by a specific deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Date of the deadline of the Task */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Time of the deadline of the Task */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final DateTimeFormatter TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"h:mm a\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Task with a deadline which has not been marked as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param dateTime Date and time of the deadline of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.date \u003d dateTime.toLocalDate();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.time \u003d dateTime.toLocalTime();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Task with a deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param isDone Boolean value that indicates if the Task has been completed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param dateTime Date and time of the deadline of the Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.date \u003d dateTime.toLocalDate();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.time \u003d dateTime.toLocalTime();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Deadline"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed on the UI."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Deadline to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * be displayed on the UI."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"[D]\" + super.toDisplayString() + \" (by: \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + date.format(DATE_FORMAT) + \" \" + time.format(TIME_FORMAT) + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Deadline"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed in the storage of the task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the String representation"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * of the Deadline to be displayed in the storage of the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"D\" + \" | \" + super.toSavedString() + \" | \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + date.format(DATE_FORMAT) + \" \" + time.format(TIME_FORMAT);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 74
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to delete a Task from the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** The index of the task to be deleted */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to delete a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param taskNumber The index of the task to be deleted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Deletes the task with the task number from the task list,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * saves the task list and displays a message indicating"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * completion of the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The Storage object that saves the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return A String that indicates that the task has been successfully deleted."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If task number entered is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String execute(Tasklist tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Task removedTask \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\\n\" + \"  \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + removedTask.toDisplayString() + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            assert(taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_TASK_NUMBER.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns false as it is not an ExitCommand."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 56
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private final double IMAGE_TEXT_SPACING \u003d 5.0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        setSpacing(IMAGE_TEXT_SPACING);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final Background DUKE_BACKGROUND \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            new Background(new BackgroundFill(Color.LIGHTBLUE, CornerRadii.EMPTY, Insets.EMPTY));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final Background USER_BACKGROUND \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            new Background(new BackgroundFill(Color.LIGHTGRAY, CornerRadii.EMPTY, Insets.EMPTY));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        setSpacing(IMAGE_TEXT_SPACING);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        db.setBackground(USER_BACKGROUND);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        db.setBackground(DUKE_BACKGROUND);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 75
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to mark a Task in the task list as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** The index of the task to be marked as done */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to mark a Task as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param taskNumber The index of the task to be marked as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Marks the task with the task number as done, saves the task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * and displays a message indicating completion of the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The Storage object that saves the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return A String that indicates that the task has been marked as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If task number entered is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String execute(Tasklist tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Task completedTask \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + completedTask.toDisplayString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            assert(taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_TASK_NUMBER.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns false as it is not an ExitCommand."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 54
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents the Duke bot, which has a task list, a storage space and a user interface."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Storage space to save and load task list */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** List of tasks saved by Duke */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Tasklist tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Duke object with a default filepath."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Duke object with the given filepath."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param filepath The path of the file where the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *                 list of tasks is stored in a .txt file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Command command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return command.execute(tasks, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return dukeException.getMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 48,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents an Exception that is made when executing Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates an Exception with a message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param message Message to be displayed on the UI in the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *                that an Exception is thrown."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 18
    }
  },
  {
    "path": "src/main/java/duke/ErrorMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public enum ErrorMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    INVALID_COMMAND_TYPE(\"Please enter a valid command type!\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    INVALID_COMMAND_FORMAT(\"Please enter your command in the correct format!\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    INVALID_DATE_TIME_FORMAT(\"Please enter a valid date and time in the format \u0027DD-MM-YYYY HHMM\u0027!\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    INVALID_TASK_NUMBER(\"Please enter a valid task number!\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    INVALID_QUERY(\"Please enter a valid query!\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    MISSING_TASKS_FILE(\"Warning: Unable to find file containing task history. \" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \"Please carry on if this is the first time using Duke.\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    UNABLE_READ_TASK_HISTORY(\"Warning: Unable to read task history.\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    UNABLE_SAVE_TASK_LIST(\"Warning: Unable to save task list.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    ErrorMessage(final String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 23
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents an Event that is accompanied by a specific date"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * and time of occurrence."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Date of the occurrence of the Event */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Time of the occurrence of the Event */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final DateTimeFormatter TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"h:mm a\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates an Event which has not been marked as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of the Event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param dateTime Date and time of the occurrence of the Event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.date \u003d dateTime.toLocalDate();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.time \u003d dateTime.toLocalTime();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates an Event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of the Event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param isDone Boolean value that indicates if the Task has been completed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param dateTime Date and time of the occurrence of the Event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.date \u003d dateTime.toLocalDate();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.time \u003d dateTime.toLocalTime();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Event to be"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed on the UI."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Event to be"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed on the UI."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"[E]\" + super.toDisplayString() + \" (at: \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + date.format(DATE_FORMAT) + \" \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + time.format(TIME_FORMAT) + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Event to be"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed in the storage of the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Event to be"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed in the storage of the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"E\" + \" | \" + super.toSavedString() + \" | \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + date.format(DATE_FORMAT) + \" \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + time.format(TIME_FORMAT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 77
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to exit Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to exit Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Exits Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The Storage object that saves the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return An empty String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String execute(Tasklist tasks, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns true as it is an instance of an ExitCommand."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 38
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private String query;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public FindCommand(String query) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String execute(Tasklist tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        if (query.isBlank()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_QUERY.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + tasks.matchedTasksOnly(query);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 26
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 12
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to display all Tasks from the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to display all Tasks from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Displays all the tasks from the task list onto the user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The Storage object that saves the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The list of all tasks as a String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String execute(Tasklist tasks, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return tasks.toDisplayString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns false as it is not an ExitCommand."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 37
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private final double DIALOG_BOX_SPACING \u003d 5.0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * containing Duke\u0027s reply and then appends them to the dialog"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        dialogContainer.setSpacing(DIALOG_BOX_SPACING);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 64
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Parser responsible for parsing Strings"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * to generate tasks and commands for the Duke bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final String DEADLINE_DELIMITER \u003d \"/by\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final String EVENT_DELIMITER \u003d \"/at\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Format for date and time used when user inputs a task */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Format for date and time used when Duke saves a task list */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final DateTimeFormatter SAVED_DATE_TIME_FORMAT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static LocalDateTime parseDate(String fullDateTime, DateTimeFormatter format) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return LocalDateTime.parse(fullDateTime, format);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Parses a line read from the task list from the storage space"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * and generates a corresponding Task to be added to the live TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param fullTask The line from the .txt file to be parsed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The corresponding Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If the line contains an incorrect format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public static Task parseTask(String fullTask) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String[] splitTask \u003d fullTask.split(\" \\\\| \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String type \u003d splitTask[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String description \u003d splitTask[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        boolean isDone \u003d Integer.parseInt(splitTask[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return new Todo(description, isDone);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return new Deadline(description, isDone, parseDate(splitTask[3], SAVED_DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return new Event(description, isDone, parseDate(splitTask[3], SAVED_DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.UNABLE_READ_TASK_HISTORY.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static Deadline parseDeadline(String fullDeadline) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String[] splitDeadline \u003d fullDeadline.split(DEADLINE_DELIMITER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String description \u003d splitDeadline[0].trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        LocalDateTime dateTime \u003d parseDate(splitDeadline[1].trim(), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static Event parseEvent(String fullEvent) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String[] splitEvent \u003d fullEvent.split(EVENT_DELIMITER);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String description \u003d splitEvent[0].trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        LocalDateTime dateTime \u003d parseDate(splitEvent[1].trim(), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return new Event(description, dateTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Parses a line read from the user input and generates a"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * corresponding Command to be executed by Duke."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param fullCommand The user input to be parsed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The corresponding Command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If the command type cannot be recognised or is in the wrong format"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public static Command parseCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String type \u003d splitCommand[0];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new AddCommand(new Todo(splitCommand[1]));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new FindCommand(splitCommand[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new AddCommand(parseDeadline(splitCommand[1]));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new AddCommand(parseEvent(splitCommand[1]));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new DoneCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                throw new DukeException(ErrorMessage.INVALID_COMMAND_TYPE.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (DateTimeException dateTimeException) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_DATE_TIME_FORMAT.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (Exception exception) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_COMMAND_FORMAT.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 110
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Storage space responsible for saving the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * for future use, or loading the task list for current use."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Path to the .txt file that contains the list of tasks */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Storage object to store the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param filepath Path to the .txt file that contains the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Loads the Tasklist from the Storage data for current use."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return Tasklist to be used currently."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If there is a problem faced with reading the .txt file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Tasklist load() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Tasklist tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filepath));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String nextLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            while (nextLine !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                Task nextTask \u003d Parser.parseTask(nextLine);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                tasks.add(nextTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                nextLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (FileNotFoundException fileNotFoundException) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            assert(!Paths.get(filepath).toFile().exists());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.MISSING_TASKS_FILE.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.UNABLE_READ_TASK_HISTORY.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Saves the data from current Tasklist into the Storage for future use."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks Current Tasklist in use."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If a problem was encountered when attempting to save the Tasklist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void save(Tasklist tasks) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            // Make data directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Path pathToDirectory \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            if (!pathToDirectory.toFile().exists()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                File data \u003d new File(\"data\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                data.mkdir();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String latestTaskListString \u003d tasks.toSavedString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            writer.write(latestTaskListString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            assert(Paths.get(filepath).toFile().exists());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(ErrorMessage.UNABLE_SAVE_TASK_LIST.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 82
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Task which can be added to or deleted from a task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * list, or marked as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Details of what has to be done in the Task */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Boolean value that indicates if the Task has been completed */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Task which has not been marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param isDone Boolean value that indicates if the Task has been completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the state of completion of a Task as a status icon."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return A tick symbol if the Task is done, or an X otherwise."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the details of what has to be done in the Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return Details of what has to be done in the Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Marks the completion status of the Task as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Task to be displayed on the UI."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Task to be displayed on the UI."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Task to be saved in"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * the storage of the task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Task to be saved in the"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * storage of the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        int isDoneInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return isDoneInt + \" | \" + getDescription();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 83
    }
  },
  {
    "path": "src/main/java/duke/Tasklist.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a list of tasks. The Tasklist supports operations to add or delete tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * and to mark tasks as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Tasklist {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates an empty Tasklist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Tasklist() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Adds a Task to the Tasklist."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param task The task to be added to the Tasklist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the number of Tasks currently stored in the Tasklist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The number of Tasks currently stored in the Tasklist."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the Task with the specified index within the Tasklist."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param taskNumber The index of the Task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The Task with the specified index within the Tasklist."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Task get(int taskNumber) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Removes the Task with the specified index within the Tasklist."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param taskNumber The index of the Task to be removed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the list of all Tasks,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed on the UI."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the list of all Tasks to be"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed on the UI."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return \"You have no tasks!\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String taskListString \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            while (taskNumber \u003c taskList.size() + 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                Task task \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                taskListString +\u003d taskNumber + \".\" + task.toDisplayString() + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                taskNumber++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return taskListString.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the list of all Tasks"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * that match the query String, to be displayed on the UI."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param query The search query String."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the list of all Tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * that match the query String, to be displayed on the UI."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String matchedTasksOnly(String query) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String matchedTasks \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            if (task.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                matchedTasks +\u003d index + \".\" + task.toDisplayString() + \"\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return matchedTasks.trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the list of all Tasks,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be saved in the storage of the Tasklist."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the list of all Tasks to"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * be saved in the storage of the Tasklist."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String taskListString \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            while (taskNumber \u003c taskList.size() + 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                Task task \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                taskListString +\u003d task.toSavedString() + \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                taskNumber++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return taskListString;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 121
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a simple Task without a deadline or time of occurrence."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a simple Task which has not been marked as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the simple Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a simple Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the simple Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param isDone Boolean value that indicates if the simple Task has been completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the simple Task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed on the UI."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the simple Task to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * be displayed on the UI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"[T]\" + super.toDisplayString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the simple Task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed in the storage of the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the String representation"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * of the simple Task to be displayed in the storage of the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"T\" + \" | \" + super.toSavedString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 52
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"11.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"61.0\" fitWidth\u003d\"63.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 23
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void parseTask_validDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String fullTask \u003d \"D | 0 | Sample Task | Oct 12 2020 8:00 PM\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task actualTask \u003d Parser.parseTask(fullTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task expectedTask \u003d new Deadline(\"Sample Task\", false,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                LocalDateTime.of(2020, 10, 12, 20, 0));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        assertEquals(expectedTask.toDisplayString(), actualTask.toDisplayString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void parseTask_validEvent_success() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String fullTask \u003d \"E | 1 | Sample Event | Oct 12 2020 8:00 PM\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task actualTask \u003d Parser.parseTask(fullTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task expectedTask \u003d new Event(\"Sample Event\", true,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                LocalDateTime.of(2020, 10, 12, 20, 0));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        assertEquals(expectedTask.toDisplayString(), actualTask.toDisplayString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void parseCommand_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String fullCommand \u003d \"blah\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Command command \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            assertEquals(\"Please enter your command in the correct format!\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void parseCommand_invalidDeadlineFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String fullCommand \u003d \"deadline Sample Task /by 121020202000\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Command command \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            assertEquals(\"Please enter a valid date and time in the format \u0027DD-MM-YYYY HHMM\u0027!\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 56
    }
  },
  {
    "path": "src/test/java/TasklistTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class TasklistTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void toDisplayString_emptyList_messageDisplayed() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Tasklist tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        assertEquals(\"You have no tasks!\", tasks.toDisplayString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void toDisplayString_filledList_tasksEnumerated() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Tasklist tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task task1 \u003d new Todo(\"Sample Task\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        tasks.add(task1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        assertEquals(\"1.[T][✘] Sample Task\", tasks.toDisplayString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 23
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "E | 0 | Sample Event | Jan 01 2020 12:00 am"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "T | 0 | Sample Todo Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "D | 0 | Sample Deadline Task | Jan 01 2020 12:00 am"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "E | 0 | Sample Event | Jan 01 2020 12:00 am"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "T | 0 | Sample Todo Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "D | 0 | Sample Deadline Task | Jan 01 2020 12:00 am"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "E | 0 | Sample Event | Jan 01 2020 12:00 am"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "todo Sample Todo Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "deadline Sample Deadline Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "deadline Sample Deadline Task /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "deadline Sample Deadline Task /by 010120200000"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "deadline Sample Deadline Task /by 01-01-2020 0000"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "event Sample Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "event Sample Event /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "event Sample Event /at 010120200000"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "event Sample Event /at 01-01-2020 0000"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "blah"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 1,
      "-": 37
    }
  }
]
