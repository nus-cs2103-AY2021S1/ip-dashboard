[
  {
    "path": "src/main/java/DateTimeParsing.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "public class DateTimeParsing {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    static LocalDate parseDate(String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return LocalDate.parse(date);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    static String localDateToFormattedString(LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    static String localDateToString(LocalDate date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        int day \u003d date.getDayOfMonth();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String dayStr \u003d day \u003c 10 ? \"0\" + day : Integer.toString(day);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        int month \u003d date.getMonthValue();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String monthStr \u003d month \u003c 10 ? \"0\" + month : Integer.toString(month);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        int year \u003d date.getYear();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return year + \"-\" + monthStr + \"-\" + dayStr;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    static String to12HTimeFormat(String time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return LocalTime"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            .parse(time, DateTimeFormatter.ofPattern(\"HH:mm\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            .format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    static String to24HTimeFormat(String time) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return LocalTime"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            .parse(time, DateTimeFormatter.ofPattern(\"hh:mm a\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            .format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 35
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private final String TIME12H;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private final LocalDate DATE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private Deadline(String description, String time12h, LocalDate date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        this.TIME12H \u003d time12h;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        this.DATE \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    protected static Deadline createDeadline(String details) throws InvalidDeadlineException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String[] info \u003d details.split(\"/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        if (info.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String desc \u003d info[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String[] dateTime \u003d info[1].replaceFirst(\"by \", \"\").split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            LocalDate date \u003d DateTimeParsing.parseDate(dateTime[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            String time12h \u003d DateTimeParsing.to12HTimeFormat(dateTime[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return new Deadline(desc, time12h, date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        } catch(DateTimeParseException | NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public boolean isDueOn(LocalDate date) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return this.DATE.equals(date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String date \u003d DateTimeParsing.localDateToString(DATE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String time \u003d DateTimeParsing.to24HTimeFormat(TIME12H);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return (isDone ? 1 : 0) + \"deadline \" + description + \"/by \" + date + \" \" + time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String formattedDate \u003d DateTimeParsing.localDateToFormattedString(DATE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + formattedDate + \" \" + TIME12H + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 47
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        InputHandler handler \u003d new InputHandler(sc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        handler.run();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 6,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    protected DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public InvalidCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "abstract class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public InvalidTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "class InvalidDeadlineException extends InvalidTaskException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public InvalidDeadlineException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"Please input the correct details for the deadline task.\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"deadline *description* /by *yyyy-mm-dd* *HH:mm*\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "class InvalidEventException extends InvalidTaskException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"Please input the correct details for the event task.\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"event *description* /at *yyyy-mm-dd* *HH:mm*\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "class InvalidTodoException extends InvalidTaskException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public InvalidTodoException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"Please input the correct details for the event task.\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"todo *description*\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 44
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String TIME12H;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private LocalDate DATE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private Event(String description, String TIME12H, LocalDate DATE) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        this.TIME12H \u003d TIME12H;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        this.DATE \u003d DATE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    protected static Event createEvent(String details) throws InvalidEventException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String[] info \u003d details.split(\"/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        if (info.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            throw new InvalidEventException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String desc \u003d info[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String[] dateTime \u003d info[1].replaceFirst(\"at \", \"\").split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            LocalDate date \u003d DateTimeParsing.parseDate(dateTime[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            String time12h \u003d DateTimeParsing.to12HTimeFormat(dateTime[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return new Event(desc, time12h, date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        } catch(DateTimeParseException | NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            throw new InvalidEventException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public boolean isDueOn(LocalDate date) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return this.DATE.equals(date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String date \u003d DateTimeParsing.localDateToString(DATE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String time \u003d DateTimeParsing.to24HTimeFormat(TIME12H);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return (isDone ? 1 : 0) + \"event \" + description + \"/at \" + date + \" \" + time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String formattedDate \u003d DateTimeParsing.localDateToFormattedString(DATE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + formattedDate + \" \" + TIME12H + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 47
    }
  },
  {
    "path": "src/main/java/InputHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "public class InputHandler {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static final ArrayList\u003cTask\u003e TASK_LIST \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static final String CMD_EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static final String CMD_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static final String CMD_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static final String CMD_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static final String CMD_DUE \u003d \"due\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static final Path SAVE_FOLDER_PATH \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static final Path SAVE_FILE_PATH \u003d Paths.get(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private final Scanner SC;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public InputHandler(Scanner sc) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        this.SC \u003d sc;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        handleStart();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static void handleStart() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String startMsg \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            generateMessage("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                \"What can I do for you?\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        System.out.println(startMsg);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        createSaveFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        loadSaveFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        while (!(input \u003d SC.nextLine()).equals(CMD_EXIT)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                String reply \u003d handleInput(input, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                System.out.println(reply);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                System.out.println(generateMessage(e.getMessage()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        System.out.println(handleExit());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private void createSaveFile() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        if (!java.nio.file.Files.exists(SAVE_FOLDER_PATH)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "             new File(SAVE_FOLDER_PATH.toString()).mkdir();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        if (!java.nio.file.Files.exists(SAVE_FILE_PATH)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                new File(SAVE_FILE_PATH.toString()).createNewFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            } catch(IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                System.out.println(\"An error has occurred when creating the save file.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private void loadSaveFile() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            BufferedReader in \u003d new BufferedReader(new FileReader(SAVE_FILE_PATH.toString()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            in.lines().forEach((String s) -\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    handleInput(s.substring(1), false);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    if (s.charAt(0) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                        TASK_LIST.get(TASK_LIST.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    String msg \u003d \"A line in your save file seems to be formatted incorrectly!\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                        generateMessage(msg)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        } catch(FileNotFoundException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            System.out.println(\"An error has occurred when reading the save file.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String handleInput(String in, boolean shouldSave) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String[] input \u003d in.split(\" \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String cmdWord \u003d input[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        switch (cmdWord) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case (CMD_LIST):"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return handleList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case (CMD_DONE):"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return handleDone(Integer.parseInt(input[1]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case (CMD_DELETE):"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return handleDelete(in);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case (CMD_DUE):"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return handleDue(in);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        default: // for invalid commands and adding of tasks"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return handleTask(in, cmdWord, shouldSave);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String handleDue(String in) throws InvalidCommandException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String dateStr \u003d in.replaceFirst(\"due \", \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            LocalDate date \u003d DateTimeParsing.parseDate(dateStr);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            String formattedDate \u003d DateTimeParsing.localDateToFormattedString(date);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            ArrayList\u003cString\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            int len \u003d TASK_LIST.size();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d len; i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                Task task \u003d TASK_LIST.get(i - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                if (task.isDueOn(date)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    String output \u003d i + \".\" + task.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    filteredTasks.add(output);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            String firstLine \u003d filteredTasks.size() \u003d\u003d 0"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    ? \"There are no tasks due on \" + formattedDate + \"!\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    : \"These are the tasks due on \" + formattedDate + \":\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            String msg \u003d firstLine + \"\\n\" + String.join(\"\\n\", filteredTasks);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return generateMessage(msg);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        } catch (DateTimeParseException | NumberFormatException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            String errMsg \u003d"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                \"Please key in a valid date format.\\n\" +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                \"due *yyyy-mm-dd*\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            throw new InvalidCommandException(errMsg);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String handleDelete(String in) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            int index \u003d"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                Integer.parseInt("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                    in.replaceFirst(CMD_DELETE, \"\").trim()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                );"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            Task task \u003d TASK_LIST.remove(index - 1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            updateSaveFile();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            int len \u003d TASK_LIST.size();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return generateMessage("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                \"  \" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                \"Now you have \" + len + \" task\" + (len \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            );"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return  generateMessage(\"Please input a valid index.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String handleList() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        int len \u003d TASK_LIST.size();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        ArrayList\u003cString\u003e msgBody \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        msgBody.add("
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            len \u003d\u003d 0"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                ? \"There are no tasks in your list!\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                : \"Here are the tasks in your list:\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d len; i++) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            Task task \u003d TASK_LIST.get(i - 1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            String line \u003d i + \".\" + task.toString();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            msgBody.add(line);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return generateMessage(String.join(\"\\n\", msgBody));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String handleDone(int index) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        Task task \u003d TASK_LIST.get(index - 1);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return generateMessage(\"Nice! I\u0027ve marked this task as done\\n  \" + task.toString());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String handleTask(String in, String cmdWord, boolean shouldSave) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        switch (cmdWord) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return addNewTask(TaskType.Deadline, in, shouldSave);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return addNewTask(TaskType.Event, in, shouldSave);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case \"todo\": // todo task"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return addNewTask(TaskType.Todo, in, shouldSave);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String addNewTask(TaskType type, String in, boolean shouldSave) throws InvalidTaskException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String taskDetails \u003d"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            in.replaceFirst(type.toString().toLowerCase(), \"\").trim();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        Task task \u003d Task.createTask(type, taskDetails);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        TASK_LIST.add(task);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        if (shouldSave) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            updateSaveFile();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return handleTaskCreated(task);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String handleTaskCreated(Task task) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        int len \u003d TASK_LIST.size();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return generateMessage("
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"  \" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            \"Now you have \" + len + \" task\" + (len \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private void updateSaveFile() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(SAVE_FILE_PATH.toString());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            for (Task task : TASK_LIST) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "                myWriter.write(task.toSaveString() + \"\\n\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            System.out.println(\"An error has occurred when updating the save file.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private String handleExit() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return generateMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private static String generateMessage(String reply) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        String divider \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return divider + \"\\n\" + reply + \"\\n\" + divider;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 237
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public static Task createTask(TaskType type, String details) throws InvalidTaskException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case Todo:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return Todo.createTodo(details);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        case Deadline:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return Deadline.createDeadline(details);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        default: // Event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            return Event.createEvent(details);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    abstract String toSaveString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public abstract boolean isDueOn(LocalDate date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 38
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    Event, Todo, Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 3
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    private Todo(String desc) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    protected static Todo createTodo(String details) throws InvalidTodoException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        if (details.equals(\"\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "            throw new InvalidTodoException();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return new Todo(details);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return (isDone ? 1 : 0) + \"todo \" + description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public boolean isDueOn(LocalDate date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "todo wake up"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "deadline brush teeth /by 2020-08-25 10:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "event online lecture /at 2020-08-25 12:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "event some event without event time"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "deadline submit assignment /by 2020-08-29 17:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "due 2020-08-25"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "delete abc"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "todo eat lunch"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "event project meeting /at 2020-08-30 20:00"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "some invalid command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "due 2018-08-09"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "REM delete any exisiting save file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "if exist data\\duke.txt del data\\duke.txt"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "if exist data rmdir data"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "del sources.txt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "del data\\duke.txt"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wong-ZZ"
        },
        "content": "rmdir data"
      }
    ],
    "authorContributionMap": {
      "Wong-ZZ": 10,
      "-": 20
    }
  }
]
