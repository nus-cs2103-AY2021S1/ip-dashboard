[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    archiveBaseName \u003d \"Duke_shadowJar\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 16,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "[T][0] watch anime"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "[E][1] play badminton (at: Aug 19 2020)"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "# Individual Project DUKE"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Overview "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "DUKE is an interactive chat bot that not only has the function of user interaction, "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "but also the function of helping users keep a list of different types of tasks "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "(namely todos, events, deadlines). Users are also able to manipulate the tasks (namely"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "done, delete)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Feature 1: Greetings"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Upon initiating this program, the chat bot prints its unique introductory greeting to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "welcome the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Usage: Upon running the program"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     _______________________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      ***Welcome to Project DUKE***"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      CS2103T Individual Project 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      What can I do for you?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     _______________________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Feature 2: Task Creation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "The task creation commands is followed by a space character and then the description to "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "the task. This adds a todo task to the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Usage 1: Creates a todo task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "The todo task only requires `todo` keyword and description."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`todo return book`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [T][✘] return book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Usage 2: Creates a event task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "The event task only requires `event` keyword, `/at` keyword and description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`event return storybook /at 6th June 2020`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [E][✘] return storybook (at: 6th June 2020)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Usage 3: Creates a deadline task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "The deadline task only requires `deadline` keyword, `/by` keyword and description."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`deadline finish CS2103T project /by 7th July 2020`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [D][✘] finish CS2103T project (by: 7th July 2020)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Feature 3: List Manipulation"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "The list manipulation commands changes the tasks states in the list recorded"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Usage 1: Marks the specific task as done"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "This function only requires `done` keyword and task index."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [E][✓] return storybook (at: 6th June 2020)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Usage 2: Deletes the specific task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "This function only requires `delete` keyword and task index."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [D][✘] finish CS2103T project (by: 7th July 2020)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "   "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Usage 3: Displays all current tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "This function only requires `list ` keyword and a space character."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     1.[T][✘] return book"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     2.[E][✓] return storybook (at: 6th June 2020)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 100,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Deadline task which is a subclass of Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private LocalDate timeDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String formattedTimeDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file writing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param timeDescription is the LocalDate input representing date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Deadline(String description, LocalDate timeDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, \"D\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.formattedTimeDescription \u003d this.timeDescription.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file reading."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param formattedTimeDescription is the LocalDate input representing date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param isDone states if the Deadline object is completed or not."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Deadline(String description, String formattedTimeDescription, boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, \"D\", isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.formattedTimeDescription \u003d formattedTimeDescription;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a String representation of Deadline object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Deadline object description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + description"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"(by: \" + this.formattedTimeDescription + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 47
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a DialogBox for GUI conversation between user and Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param img Image to add in DialogBox."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param text to display text in DialogBox."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Uses a factory method to create DialogBox objects"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Uses a factory method to create flipped DialogBox objects"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 73
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Duke object that acts like a program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Contains the main method."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private boolean isLoadingSuccess;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is to start the Duke program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Variable filepath is directory to the duke.txt file where"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * reading and writing of the file occurs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Initialises Ui, Storage classes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Sets isLoadingSuccess to true, assuming no errors."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Loads the file contents."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Path path \u003d Paths.get(home, \"Desktop\", \"CS2103T\", \"ip\", \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.filepath \u003d path.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.isLoadingSuccess \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.storage.loadFileContent();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.tasks \u003d new TaskList(this.storage.getTaskList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.isLoadingSuccess \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Runs the bulk of the Duke program."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Prints the greetings using Ui object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Tells the user if file loading is successful or not."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Continues off data from the file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Edit the file as user types in the console."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.ui.displayWelcome();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (!isLoadingSuccess) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.ui.displayLoadFileError();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.ui.displayLoadFileSuccess();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Parser parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            while (parser.isRunning()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    parser.checkUserInput(userInput);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    ui.displayUserInputError(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    storage.writeToFile(parser.getTasks());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    ui.displayUpdateFileError(e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Runs the the Duke program by terminal / .jar file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Gets response from Duke based on user input."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param input represents user input in String format."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return String represents Duke\u0027s output in String format."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            output \u003d parser.parseUserInput(input);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                storage.writeToFile(parser.getTasks());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                ui.displayUpdateFileError(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String exceptionMessage \u003d e.toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (exceptionMessage.equals(\"bye\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                output \u003d \"See you again!\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                output \u003d e.toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 125,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a DukeException object which is a subclass of java Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * For printing of Duke program related error messages."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is used for Duke error printing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param message is the description of the Duke errors."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Prints out DukeException object in String format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a string representation of DukeException object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 27
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents an Event task which is a subclass of Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private LocalDate timeDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String formattedTimeDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates an Event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file writing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param timeDescription is the LocalDate input representing date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Event(String description, LocalDate timeDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, \"E\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.formattedTimeDescription \u003d this.timeDescription.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates an Event object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file reading."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param formattedTimeDescription is the LocalDate input representing date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param isDone states if the Event object is completed or not."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Event(String description, String formattedTimeDescription, boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, \"E\", isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.formattedTimeDescription \u003d formattedTimeDescription;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a String representation of Event object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Event object description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + description"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"(at: \" + this.formattedTimeDescription + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 47
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Launcher object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * To run Duke GUI."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a GUI stage for user to use."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (response.equals(\"See you again!\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 56
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Parser object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Handles the user input commands and executes them."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static boolean isProgramRunning \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Parser object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is used for identifying String inputs from user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param tasks TaskList object, required to interact with it."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Parser(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a boolean value for others to know if the Parser"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * object is still running."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return boolean value of isRunning."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public boolean isRunning() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.isProgramRunning;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Processes user input for classification and execution."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param str is the line of String obtained from user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Reads and makes sense of user input commands which includes:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * (bye, list, todo, deadline, event, delete)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It then executes the commands."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @throws DukeException when command is wrong, unidentifiable or missing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void checkUserInput(String str) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int commandSpace \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            displayList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"     Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 5).equals(\"done \")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String index \u003d str.substring(5, length);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int realIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (realIndex \u003e\u003d this.tasks.getLength() || realIndex \u003c 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Invalid task index, please try again.*\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            markDone(realIndex);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 5).equals(\"todo \")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in todo description*\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Todo newTodo \u003d new Todo(str.substring(5, length));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            store(newTodo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 5).equals(\"find \")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in a keyword to find*\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String stringToFind \u003d str.substring(5, length);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            findTask(stringToFind);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d 4) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"     Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 6).equals(\"event \")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in event description*\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int timePrefix \u003d str.indexOf(\"/at\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (timePrefix \u003c 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in event completion time in the following format:*\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                        + \"     eg. event CCA meeting /at YYYY-MM-DD\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            LocalDate date;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String dateString \u003d str.substring(timePrefix + 4, length);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in the time in the YYYY-MM-DD format*\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Event newEvent \u003d new Event(str.substring(6, timePrefix), date);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            store(newEvent);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d 5) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"     Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String index \u003d str.substring(7, length);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int realIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (realIndex \u003e\u003d this.tasks.getLength() || realIndex \u003c 0) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"       *Invalid task index, please try again.*\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            delete(realIndex);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d 6) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"       *Invalid command.*\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"     Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 9).equals(\"deadline \")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (length \u003d\u003d 9) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"       *Please fill in deadline description*\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int timePrefix \u003d str.indexOf(\"/by\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (timePrefix \u003c 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in deadline completion time in the following format:*\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                        + \"     eg. deadline return book to Jurong Regional Library /by YYYY-MM-DD\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            LocalDate date;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String dateString \u003d str.substring(timePrefix + 4, length);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in the time in the YYYY-MM-DD format*\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(str.substring(9, timePrefix), date);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            store(newDeadline);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"     Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Communicates with TaskList class and passes current Task object"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * to TaskList class for storing."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param task to pass over Task object for storage."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void store(Task task) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.tasks.store(task);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"       \" + task);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"     Now you have \" + this.tasks.getLength() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Communicates with TaskList class and gets current Task list"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * to print for user to see."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        List\u003cTask\u003e currLst \u003d this.tasks.getTasks();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int size \u003d currLst.size();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"     Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            System.out.println(\"     \" + index + \".\" + currLst.get(i));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Communicates with TaskList class and passes current Task object"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * to TaskList class for marking the Task as done."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param index of the particular Task in Task list."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task taskSubject \u003d this.tasks.markDone(index);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"       \" + taskSubject);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Communicates with TaskList class and passes current Task object"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * to TaskList class for removal."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param index of the particular Task in Task list."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task taskSubject \u003d this.tasks.remove(index);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"       \" + taskSubject"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     Now you have \" + this.tasks.getLength() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A command to close the Parser object for it to stop running."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Sets isProgramRunning to false."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.isProgramRunning \u003d false;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Communicates with TaskList class and to get the current stored Task list."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return tasks.getTasks();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Communicates with TaskList class and to get the current stored Task list."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Filters the tasks based on the keyword searched"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param keyword String will be searched within all tasks"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * If matched, it will be printed."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void findTask(String keyword) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        List\u003cTask\u003e allTasks \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int fullSize \u003d tasks.getLength();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        for (int i \u003d 0; i \u003c fullSize; i++) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task task \u003d allTasks.get(i);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (taskString.contains(keyword)) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"     Here are the matching task(s) in your list:\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int partialSize \u003d filteredTasks.size();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        for (int i \u003d 0; i \u003c partialSize; i++) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            System.out.println(\"     \" + index + \".\" + filteredTasks.get(i));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Processes user input for classification and execution."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param str is the line of String obtained from user input."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Reads and makes sense of user input commands which includes:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * (bye, list, todo, deadline, event, delete)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It then executes the commands."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a String representation of Duke output."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @throws DukeException when command is wrong, unidentifiable or missing."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String parseUserInput(String str) throws DukeException {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int commandSpace \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"bye\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            List\u003cTask\u003e currLst \u003d this.tasks.getTasks();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int size \u003d currLst.size();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String output \u003d \"Here are the task(s) in your list:\\n\";"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                output \u003d output + \"  \" + index + \".\" + currLst.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c 0) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 5).equals(\"done \")) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String index \u003d str.substring(5, length);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int realIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (realIndex \u003e\u003d this.tasks.getLength() || realIndex \u003c 0) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Invalid task index, please try again.*\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task taskSubject \u003d this.tasks.markDone(realIndex);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  \" + taskSubject;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 5).equals(\"todo \")) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in todo description*\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Todo newTodo \u003d new Todo(str.substring(5, length));"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.tasks.store(newTodo);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  \" + newTodo + \"\\n\""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"Now you have \" + this.tasks.getLength() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 5).equals(\"find \")) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in a keyword to find*\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String keyword \u003d str.substring(5, length);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            List\u003cTask\u003e allTasks \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int fullSize \u003d tasks.getLength();"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            for (int i \u003d 0; i \u003c fullSize; i++) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                Task task \u003d allTasks.get(i);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                if (taskString.contains(keyword)) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    filteredTasks.add(task);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String output \u003d \"Here are the matching task(s) in your list:\\n\";"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int partialSize \u003d filteredTasks.size();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            for (int i \u003d 0; i \u003c partialSize; i++) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                output \u003d output + \"  \" + index + \".\" + filteredTasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d 4) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 6).equals(\"event \")) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in event description*\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int timePrefix \u003d str.indexOf(\"/at\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (timePrefix \u003c 0) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in event completion time in the following format:*\\n\""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                        + \"  eg. event CCA meeting /at YYYY-MM-DD\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            LocalDate date;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String dateString \u003d str.substring(timePrefix + 4, length);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in the time in the YYYY-MM-DD format*\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Event newEvent \u003d new Event(str.substring(6, timePrefix), date);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.tasks.store(newEvent);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  \" + newEvent + \"\\n\""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"Now you have \" + this.tasks.getLength() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d 5) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String index \u003d str.substring(7, length);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int realIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (realIndex \u003e\u003d this.tasks.getLength() || realIndex \u003c 0) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Invalid task index, please try again.*\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task taskSubject \u003d this.tasks.remove(realIndex);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  \" + taskSubject + \"\\n\""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"Now you have \" + this.tasks.getLength() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d 6) {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(0, 9).equals(\"deadline \")) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int length \u003d str.length();"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (length \u003d\u003d 9) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in deadline description*\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int timePrefix \u003d str.indexOf(\"/by\");"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (timePrefix \u003c 0) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in deadline completion time in the following format:*\\n\""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                        + \"  eg. deadline return book to Jurong Regional Library /by YYYY-MM-DD\");"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            LocalDate date;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String dateString \u003d str.substring(timePrefix + 4, length);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(\"*Please fill in the time in the YYYY-MM-DD format*\");"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(str.substring(9, timePrefix), date);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.tasks.store(newDeadline);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  \" + newDeadline + \"\\n\""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"Now you have \" + this.tasks.getLength() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(\"*Invalid command.*\\n\""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"     Commands: bye, list, todo, event, deadline, delete\");"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 437
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Storage object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * For reading and writing of the specified file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static List\u003cTask\u003e savedTasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Storage object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is used reading a file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param filePath is a relative directory to the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.savedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Loads the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A java Scanner object is used to read the .txt file and temporarily"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * stores the data."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @throws FileNotFoundException when file is not found from the"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * given file path."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void loadFileContent() throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String taskSummary \u003d s.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Storage.lineReader(taskSummary);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * File line parser."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Reads and identifies the tasks specified in the file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param task is the line String representation of task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * read from the file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void lineReader(String task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String type \u003d task.substring(1, 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String timeDescription \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (task.substring(4, 5).equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int end \u003d task.length();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            description \u003d task.substring(7, end);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Todo newTodo \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Storage.savedTasks.add(newTodo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int start \u003d task.indexOf(\"(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int end \u003d task.lastIndexOf(\")\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            timeDescription \u003d task.substring(start + 5, end);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            description \u003d task.substring(7, start);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Event newEvent \u003d new Event(description, timeDescription, isDone);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Storage.savedTasks.add(newEvent);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int start \u003d task.indexOf(\"(\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int end \u003d task.lastIndexOf(\")\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            timeDescription \u003d task.substring(start + 5, end);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            description \u003d task.substring(7, start);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(description, timeDescription, isDone);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Storage.savedTasks.add(newDeadline);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a list of Tasks object stored after reading the file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a list of Task objects."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return Storage.savedTasks;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Writes the data to the file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param tasksToWrite is the list of Tasks."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * This method will convert Task to their String representation,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * modify them and write in the file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @throws IOException if file is somehow not found."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void writeToFile(List\u003cTask\u003e tasksToWrite) throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int totalTasks \u003d tasksToWrite.size();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        for (int i \u003d 0; i \u003c totalTasks; i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task writeTask \u003d tasksToWrite.get(i);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String taskString \u003d writeTask.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String replacement1 \u003d taskString.replace(\u0027\\u2713\u0027, \u00271\u0027);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String replacement2 \u003d replacement1.replace(\u0027\\u2718\u0027, \u00270\u0027);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fw.write(replacement2 + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 119
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Task object which is a parent class of:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Deadline, Event and Todo."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file writing."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param type is the type of subclass task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Task(String description, String type) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Task object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file reading."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param type is the type of subclass task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param isDone states if the Task object is completed or not."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Task(String description, String type, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a String representation of a tick or a cross."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Based on the Task\u0027s isDone status."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a tick or a cross."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the String description of the Task object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Changes the state of completion of a Task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Not done to Done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the String representation of Task type."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Task type."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the String representation of Task object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Task object overall description."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 82
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a TaskList object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Stores the List of Tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a TaskList object to store tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param tasks is the list of Task objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the list of Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return current list of Tasks stored."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the number of Tasks stored."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return current number of Tasks stored."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A command to store a Task object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param newTask is the new Task to be stored."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void store(Task newTask) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A command to remove a Task object from current list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a Task object that is removed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param index specifies the position of Task in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task removedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A command to mark a Task object from current list as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param index identifies the Task object to be marked as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Task markDone(int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task doneTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 68
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Todo task which is a subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Todo object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file writing."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, \"T\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Todo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file reading."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param isDone states if the Todo object is completed or not."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, \"T\", isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Ui object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Prints hardcoded designs that prompts the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the welcome greetings when user runs Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void displayWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"     ***Welcome to Project DUKE***\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"     CS2103T Individual Project 1\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     Hello! I\u0027m Duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     What can I do for you?\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n    _______________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the error message when there is error loading the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void displayLoadFileError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n       *Error: File not found*\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     Please specify the correct file location relative to your project\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     root directory\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n    _______________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the message when file is loaded successfully."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void displayLoadFileSuccess() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n       File has successfully loaded!\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     Duke Commands: bye, list, todo, event, deadline, delete\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n    _______________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the message when user inputs an unrecognisable command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param message is the essence of error."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void displayUserInputError(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"       \" + message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n    _______________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the error message when there is error updating the file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param message is the essence of error."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void displayUpdateFileError(String message) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n       *Error: Unable to save changes to file*\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     Please check if your file still exists in your directory\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     \" + message"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n    _______________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 62
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 19
    }
  },
  {
    "path": "test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"Play Maplestory \", LocalDate.parse(\"2019-10-25\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[D][✘] Play Maplestory (by: Oct 25 2019)\", newDeadline.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testFileTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"Play Summoners War \", \"Dec 15 2018\", true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[D][✓] Play Summoners War (by: Dec 15 2018)\", newDeadline.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testAddTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"Play Brawl Stars \", LocalDate.parse(\"2019-10-25\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[D][✘] Play Brawl Stars (by: Oct 25 2019)\", newDeadline.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 24
    }
  },
  {
    "path": "test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.yaml.snakeyaml.events.AliasEvent;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Event newEvent \u003d new Event(\"Read Douluo Dalu \", LocalDate.parse(\"2019-10-25\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[E][✘] Read Douluo Dalu (at: Oct 25 2019)\", newEvent.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testFileTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Event newEvent \u003d new Event(\"Read Doupo Cangqiong \", \"Dec 15 2018\", true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[E][✓] Read Doupo Cangqiong (at: Dec 15 2018)\", newEvent.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testAddTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Event newEvent \u003d new Event(\"Read Wudong Qiankun \", LocalDate.parse(\"2019-10-25\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[E][✘] Read Wudong Qiankun (at: Oct 25 2019)\", newEvent.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 25
    }
  },
  {
    "path": "test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task task \u003d new Task(\"Watch Tokyo Ravens\", \"T\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"\\u2718\", task.getStatusIcon());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task task \u003d new Task(\"Watch Tokyo Ravens\", \"T\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"Watch Tokyo Ravens\", task.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task task \u003d new Task(\"Watch D-gray man\", \"D\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"D\", task.getType());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task task \u003d new Task(\"Watch Enen no Shobotai\", \"E\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[E][✘] Watch Enen no Shobotai\", task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 28
    }
  },
  {
    "path": "test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Todo newTodo \u003d new Todo(\"Read Asura Omega manga\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[T][✘] Read Asura Omega manga\", newTodo.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "deadline finish project CS2103T /at today"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "deadline finish project CS2103T /by today"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "todoOP1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "todo Oral Presentation preparations"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "hello"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "SET MY_PATH\u003dC:\\repo\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "javac  -cp %MY_PATH%\\src\\main\\java -Xlint:none -d %MY_PATH%\\bin %MY_PATH%\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "java -classpath %MY_PATH%\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 4,
      "-": 19
    }
  }
]
