[
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[T] @ [✘] @ haha @ "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[D] @ [✓] @ return book @ Dec 2 2019 0600 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[D] @ [✘] @ return book @ Dec 2 2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[T] @ [✘] @ read book @ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[D] @ [✓] @ return book @ Dec 2 2019"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[D] @ [✘] @ return book @ May 8 2020 0600 PM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[E] @ [✓] @ return book @ this week 5-7pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[D] @ [✘] @ testing @ Feb 1 3030 0400 PM"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[T] @ [✘] @ testing2 @ "
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 9
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Deadline class represents tasks that have a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name and stores a LocalDate."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param date date of deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        symbol \u003d \"[D]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * and stores a LocalDateTime for time-specific tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param dateTime date and time of deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        symbol \u003d \"[D]\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (getSymbol() + super.toString() + \" (by: \" + getDate() + \")\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 40
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Duke program implements an application that stores and keeps track of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor to take in a specified filepath to create a Duke object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Calls the Duke UI to initialise and run."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws DukeException thrown if the Duke program does not recognise user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void run() throws IOException, DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Parser parser \u003d new Parser(ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        parser.interact(tasks, Storage.getFilePath());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Creates a new Duke object with a specified filepath and runs it."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param args arguments for main function"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws DukeException thrown if the Duke program does not recognise user input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        new Duke(\"src/main/java/data/duke.txt\").run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 48,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The DukeException class throws an exception if the Duke program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * does not recognise an input from the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 11
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Event class represents tasks that have a duration period."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name and stores a duration period."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param by period of the event duration"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        symbol \u003d \"[E]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (getSymbol() + super.toString() + \" (at: \" + getDate() + \")\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 24
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Parser class deals with making sense of the user command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a UI and initialises its ui field member."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param ui a UI for the Duke object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Parser(Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Decides on the relevant actions to execute based on the input of the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws DukeException thrown if the Duke program does not recognise user input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void interact(TaskList taskList, String filePath) throws DukeException, IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ui.exit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            } else if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ui.list(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                String[] arrOfStr \u003d line.split(\" \", 0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                String identifier \u003d arrOfStr[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                if (identifier.equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // mark as done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    int index \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    ui.markDone(taskList, index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    Storage.updateFile(filePath, taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                } else if (identifier.equals(\"delete\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // delete"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    int index \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    taskList.delete(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                } else if (identifier.equals(\"find\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // find"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    String textToMatch \u003d arrOfStr[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    ui.findMatching(taskList, textToMatch);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // add to list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    if ((identifier.equals(\"todo\") || identifier.equals(\"deadline\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            || identifier.equals(\"event\")) \u0026\u0026 arrOfStr.length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a \" + identifier + \" cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        Task task;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        if (identifier.equals(\"todo\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String[] newArrOfStr \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            task \u003d new Todo(newArrOfStr[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        } else if (identifier.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String[] firstSplit \u003d line.split(\" /by \", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String[] secondSplit \u003d firstSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String description \u003d secondSplit[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String date \u003d firstSplit[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String[] dateSplit \u003d date.split(\" \", 0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            if (dateSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                LocalDateTime localDateTime \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                task \u003d new Deadline(description, localDateTime);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                LocalDate localDate \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                task \u003d new Deadline(description, localDate);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        } else if (identifier.equals(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String[] firstSplit \u003d line.split(\" /at \", 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String by \u003d firstSplit[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String[] secondSplit \u003d firstSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            String description \u003d secondSplit[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            task \u003d new Event(description, by);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        taskList.add(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 100
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Storage class deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a specified filepath to create a Storage object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Storage (String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Reads from the file specified by the filepath and creates each Task object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * to be stored a List of tasks so it can be passed as a parameter into"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * a TaskList object so that it can be tracked."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return a List of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws FileNotFoundException thrown when an attempt to open the specified file has failed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public List\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                String[] arrOfStr \u003d line.split(\" @ \", 0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                String symbol \u003d arrOfStr[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                String status \u003d arrOfStr[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                String description \u003d arrOfStr[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                if (symbol.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                } else if (symbol.equals(\"[D]\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    String date \u003d arrOfStr[3];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    String[] dateSplit \u003d date.split(\" \", 0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    if (dateSplit.length \u003e 3) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        LocalDateTime localDateTime \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        newTask \u003d new Deadline(description, localDateTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        LocalDate localDate \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        newTask \u003d new Deadline(description, localDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    String by \u003d arrOfStr[3];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    newTask \u003d new Event(description, by);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                if (status.equals(\"[✓]\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    newTask.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the filepath of the specified file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the filepath"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static String getFilePath() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Prints out the contents of a file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws FileNotFoundException thrown when an attempt to open the specified file has failed"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the file as the source"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Writes content to a file based on the text specified and overwrites the file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param textToAdd the text to be written to the file"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Appends information to a file based on the text specified and overwrites the file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param textToAppend the text to be appended to the file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Overwrites the file by adding in all the tasks from a list of tasks specified."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void updateFile(String filePath, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        writeToFile(filePath, \"\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        for (Task tsk : taskList.getTasks()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String textToAppend \u003d tsk.getSymbol() + \" @ \" + tsk.getStatusIcon() + \" @ \""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    + tsk.getDescription() + \" @ \" + tsk.getDate() + \"\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            appendToFile(filePath, textToAppend);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 143
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Task class stores information about a particular task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        by \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        date \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        dateTime \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the status of the task, done or undone."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the status of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return this task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the name or description of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the name or description of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the type of task in for form of a modifier or symbol."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the type of task in for form of a modifier or symbol"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the date of the task requirements, depending on the type of task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the date of the task requirements, depending on the type of task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (dateTime !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } else if (date !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            return by;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (getStatusIcon() + \" \" + description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 88
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The TaskList class contains a list of tasks and keeps track of it while Duke is running."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String BORDER \u003d \"-----------------------------------------------------------\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor to initialise a new list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a list of tasks and stores it as a field member."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Prints the formatting for the Duke application."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void printBorder() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + BORDER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns a list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return a list of tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void add(Task task) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String textToAppend \u003d task.getSymbol() + \" @ \" + task.getStatusIcon() + \" @ \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + task.getDescription() + \" @ \" + task.getDate() + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Storage.appendToFile(Storage.getFilePath(), textToAppend);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + INDENTATION + task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Now you have \" + (tasks.size() !\u003d 1"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ? tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                : tasks.size() + \" task in the list.\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Removes a task from the list of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param index position of the task in the list of tasks to be deleted"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void delete(int index) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Storage.updateFile(Storage.getFilePath(), this);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + INDENTATION + task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Now you have \" + (tasks.size() !\u003d 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ? tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                : tasks.size() + \" task in the list.\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Replaces a task with another task in the list of tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param oldTask old task to be replaced"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param newTask new task to replace the old task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void replace(Task oldTask, Task newTask) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        int index \u003d tasks.indexOf(oldTask);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        tasks.set(index, newTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 99
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Todo class represents tasks that do not have a specified time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        symbol \u003d \"[T]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (getSymbol() + super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 22
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Ui class deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String BORDER \u003d \"-----------------------------------------------------------\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Prints the formatting for the Duke application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void printBorder() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + BORDER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Greets the user when Duke starts up."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Hello! I\u0027m Duke\\n    What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Says goodbye to the user before terminating."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Displays a list of all the tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList a TaskList object containing a list of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void list(TaskList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            int index \u003d taskList.getTasks().indexOf(task) + 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            System.out.println(INDENTATION + index + \".\" + task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList a TaskList object containing a list of tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param index position of the task in the list of tasks to be marked done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void markDone(TaskList taskList, int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task oldTask \u003d taskList.getTasks().get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task newTask \u003d oldTask.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        taskList.replace(oldTask, newTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + INDENTATION + newTask.getStatusIcon() + \" \" + newTask.description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void findMatching(TaskList taskList, String textToMatch) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            if (description.contains(textToMatch)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                System.out.println(INDENTATION + index + \".\" + task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 81
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    Task task \u003d new Event(\"read book\", \"31 Dec 2020\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"[E][✘] read book (at: 31 Dec 2020)\", task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 15
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    Storage storage \u003d new Storage(\"src/main/java/data/duke.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testGetFilePath() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"src/main/java/data/duke.txt\", storage.getFilePath());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 15
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    Task task \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"[T][✘] read book\", task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "todo"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 3,
      "-": 20
    }
  }
]
