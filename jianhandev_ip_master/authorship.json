[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    mainClassName \u003d \"chatbot.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    archiveBaseName \u003d \"chatbot\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 20,
      "-": 42
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 11
    }
  },
  {
    "path": "src/main/java/chatbot/Chatbot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Chatbot {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Storage taskStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Chatbot() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        initialiseDataPath(\"chatbot.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        initialiseUI();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        initialiseStorage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        initialiseTaskList(taskStorage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            // parse user input to generate a command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            // exit command -\u003e terminate program"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (command instanceof ExitCommand) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                ui.exit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            // execute command to get response message"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            response \u003d command.execute(taskList, ui, taskStorage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String generateWelcomeMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return ui.getWelcomeMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void initialiseDataPath(String path) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.filePath \u003d Path.of(path);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void initialiseUI() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void initialiseStorage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        taskStorage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void initialiseTaskList(Storage store) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        // load tasks from disk"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            taskList \u003d new TaskList(store.loadTasks());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 73
    }
  },
  {
    "path": "src/main/java/chatbot/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static DialogBox getChatbotDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 61
    }
  },
  {
    "path": "src/main/java/chatbot/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 9
    }
  },
  {
    "path": "src/main/java/chatbot/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private Chatbot chatbot \u003d new Chatbot();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setChatbot(chatbot);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 31
    }
  },
  {
    "path": "src/main/java/chatbot/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private Chatbot chatbot;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private Image chatbotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaChatbot.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void setChatbot(Chatbot b) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        chatbot \u003d b;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        showWelcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String response \u003d chatbot.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                DialogBox.getChatbotDialog(response, chatbotImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private void showWelcomeMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String greeting \u003d chatbot.generateWelcomeMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                DialogBox.getChatbotDialog(greeting, chatbotImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 64
    }
  },
  {
    "path": "src/main/java/chatbot/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assert toAdd !\u003d null : \"Task is not supposed to be null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        taskList.addTask(toAdd);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assert storage.saveTasks(taskList.getTasks()) : \"Save tasks supposed to return true.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return ui.addSuccess(toAdd, taskList.count());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 30
    }
  },
  {
    "path": "src/main/java/chatbot/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns true if this command instructs the program to exit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return if program should exits"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    abstract public boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param taskList the TaskList object for handling tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param ui the UI object for text-ui display"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param storage the Storage object for persistence"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if execution unsuccessful"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    abstract public String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 23
    }
  },
  {
    "path": "src/main/java/chatbot/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * Represents a command to either delete or mark task as done given a type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Task deletedTask \u003d taskList.removeTask(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assert storage.saveTasks(taskList.getTasks()) : \"Save tasks supposed to return true.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return ui.deleteSuccess(deletedTask, taskList.count());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 36
    }
  },
  {
    "path": "src/main/java/chatbot/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Task taskDone \u003d taskList.markAsDone(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assert storage.saveTasks(taskList.getTasks()) : \"Save tasks supposed to return true.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return ui.markDoneSuccess(taskDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 32
    }
  },
  {
    "path": "src/main/java/chatbot/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return ui.errorMessage(Message.EXIT_MESSAGE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 19
    }
  },
  {
    "path": "src/main/java/chatbot/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    Predicate\u003cTask\u003e pred;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public FindCommand(Predicate\u003cTask\u003e pred) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.pred \u003d pred;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.retrieveTasksByPred(pred);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return ui.list(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 30
    }
  },
  {
    "path": "src/main/java/chatbot/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return Message.INVALID_COMMAND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 19
    }
  },
  {
    "path": "src/main/java/chatbot/commands/ShowAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class ShowAllCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return ui.list(taskList.getTasks());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 20
    }
  },
  {
    "path": "src/main/java/chatbot/common/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"Bye, hope to see you again soon.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String INVALID_DATE \u003d \"Please enter a valid date or date format (yyyy-mm-dd).\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String INVALID_COMMAND \u003d \"I\u0027m not sure what you mean.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String INVALID_NUMBER \u003d \"Please give me a valid number.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String TASK_EMPTY \u003d \"Task cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String DATE_MISSING \u003d \"Ah oh, you forgot the date.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String LOAD_FAIL \u003d \"Ooops, I couldn\u0027t load the tasks.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String SAVE_FAIL \u003d \"Oooops, I couldn\u0027t save the tasks.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String ITEM_NOT_EXIST \u003d \"That item does not exist!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 18
    }
  },
  {
    "path": "src/main/java/chatbot/common/Type.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public enum Type {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    DATE, LIST, TODO, DEADLINE, EVENT, DELETE, DONE, BYE, FIND"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 5
    }
  },
  {
    "path": "src/main/java/chatbot/data/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        super(description, \"D\", isDone, date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static Deadline newDeadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Deadline(description, false, date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Deadline markDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Deadline(this.description, true, this.timestamp);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String formattedDate \u003d this.timestamp.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 27
    }
  },
  {
    "path": "src/main/java/chatbot/data/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        super(description, \"E\", isDone, date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static Event newEvent(String description, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Event(description, false, date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Event markDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Event(this.description, true, this.timestamp);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String formattedDate \u003d this.timestamp.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return super.toString() + \" (at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 27
    }
  },
  {
    "path": "src/main/java/chatbot/data/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * Represents a task (e.g todo, deadline, event) with a description, type, completion status and date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected final String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected final boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected final LocalDate timestamp;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected Task(String description, String type, boolean isDone, LocalDate timestamp) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.timestamp \u003d timestamp;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns a description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns the status of the task (\"1\" - complete, \"0\" - incomplete)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task status"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns the status of the task as symbol (tick or cross)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task status"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns a date, of the format (yyyy-mm-dd), associated with the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return the date of the task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.timestamp;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Marks the task as done. A new copy of the object is returned."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return a task object marked as done"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Task markDone() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Task(this.description, this.type, true, this.timestamp);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return \"[\" + this.type + \"]\" + \"[\" + getStatusIcon() + \"]\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                \" \" + this.description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 71
    }
  },
  {
    "path": "src/main/java/chatbot/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A class containing a list of tasks, with methods for adding new tasks, deleting and returning"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * tasks due on a specific date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns the current list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns a task at the specified index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param index index to locate task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task at the given index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns the current total number of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return total number of tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Adds a new task to the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param task new task to be added"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Deletes the task at a specified index on the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param index index to locate task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task that is removed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if given index is out-of-bounds"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Task removeTask(int index) throws ChatbotException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Task removed;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            removed \u003d this.tasks.remove(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.ITEM_NOT_EXIST);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Marks a task on the list as done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param index index to locate the task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task to be marked as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if given index is out-of-bounds"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Task markAsDone(int index) throws ChatbotException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Task taskDone;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            taskDone \u003d getTask(index).markDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            this.tasks.set(index, taskDone);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.ITEM_NOT_EXIST);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return taskDone;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns a list of tasks that fulfills the given predicate."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param pred given predicate"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ArrayList\u003cTask\u003e retrieveTasksByPred(Predicate\u003cTask\u003e pred) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d this.tasks.iterator();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Task task \u003d iter.next();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (pred.test(task)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 112
    }
  },
  {
    "path": "src/main/java/chatbot/data/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        super(description, \"T\", isDone, null);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static Todo newTodo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Todo(description, false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Todo markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Todo(this.description, true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 17
    }
  },
  {
    "path": "src/main/java/chatbot/exception/ChatbotException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * This exception is thrown by the chatbot to indicate that an invalid command is given,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * or an invalid action is encountered."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class ChatbotException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ChatbotException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 16
    }
  },
  {
    "path": "src/main/java/chatbot/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.common.Message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.common.Type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A class that parses the command input given by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Parses the user input and returns an executable command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param fullCmd the user input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return command matching the user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if command is invalid"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static Command parse(String fullCmd) throws ChatbotException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Type type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Command invalidCommand \u003d new InvalidCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        // extract type of command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String text \u003d fullCmd.trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String typeStr \u003d text.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        // extract arguments from command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        int index \u003d typeStr.length();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String arguments \u003d text.substring(index).trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            type \u003d Type.valueOf(typeStr.toUpperCase());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return invalidCommand;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case DATE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return parseFindByDateCommand(arguments);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return parseDeleteCommand(arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return parseAddDeadlineCommand(arguments);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return parseDoneCommand(arguments);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return parseAddEventCommand(arguments);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return parseFindByKeywordCommand(arguments);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return new ShowAllCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return parseAddTodoCommand(arguments);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return invalidCommand;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Command parseDeleteCommand(String args) throws ChatbotException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            int index \u003d Integer.parseInt(args) - 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.INVALID_NUMBER);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Command parseDoneCommand(String args) throws ChatbotException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            int index \u003d Integer.parseInt(args) - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.INVALID_NUMBER);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Command parseAddTodoCommand(String args) throws ChatbotException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (args.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.TASK_EMPTY);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Todo task \u003d Todo.newTodo(args);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new AddCommand(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Command parseAddDeadlineCommand(String args) throws ChatbotException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (args.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.TASK_EMPTY);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String description \u003d args.split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String dateString \u003d args.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Deadline dl \u003d Deadline.newDeadline(description, date);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return new AddCommand(dl);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.DATE_MISSING);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.INVALID_DATE);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Command parseAddEventCommand(String args) throws ChatbotException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (args.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.TASK_EMPTY);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String description \u003d args.split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String dateString \u003d args.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Event evt \u003d Event.newEvent(description, date);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return new AddCommand(evt);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.DATE_MISSING);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.INVALID_DATE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Command parseFindByDateCommand(String args) throws ChatbotException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(args);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Predicate\u003cTask\u003e pred \u003d task -\u003e (task.getDate() !\u003d null \u0026\u0026 task.getDate().equals(date));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return new FindCommand(pred);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.INVALID_DATE);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Command parseFindByKeywordCommand(String args){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Predicate\u003cTask\u003e pred \u003d task -\u003e (task.getDescription().contains(args));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new FindCommand(pred);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 155
    }
  },
  {
    "path": "src/main/java/chatbot/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A storage class that contains methods for loading and saving tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private final Path location;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Storage(Path location) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Loads a list of tasks from a file on the disk. If no such file exists, create a new file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return list of tasks saved to the disk"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if could not load file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws ChatbotException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            assert location !\u003d null : \"File path is not supposed to be null.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            // File does not exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (!Files.exists(location)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                Files.createFile(location);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            // File exists, load data"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Stream\u003cTask\u003e taskStream \u003d Files.lines(location).map(line -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                // split by separator"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String[] lineData \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                // trim and extract data"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String type \u003d lineData[0].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                boolean isDone \u003d lineData[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String description \u003d lineData[2].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String timestamp \u003d lineData[3].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    task \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    task \u003d new Deadline(description, isDone, LocalDate.parse(timestamp));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    task \u003d new Event(description, isDone, LocalDate.parse(timestamp));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            taskStream.forEach(taskList::add);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.LOAD_FAIL);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean saveTasks(ArrayList\u003cTask\u003e taskList) throws ChatbotException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d taskList.iterator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String dataStr \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String separator \u003d \" | \";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Task tsk \u003d iter.next();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String timestamp \u003d tsk.getDate() \u003d\u003d null ? \"-\" : tsk.getDate().toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String entry \u003d tsk.getType() + separator +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    tsk.getStatus() + separator +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    tsk.getDescription() + separator +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    timestamp  +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    System.lineSeparator();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            dataStr \u003d dataStr.concat(entry);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Files.write(location, dataStr.getBytes());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.SAVE_FAIL);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 119
    }
  },
  {
    "path": "src/main/java/chatbot/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.data.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A class representing the command line level user interface. Responsible for reading commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * from the user and displaying data, success/error messages to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out a welcome message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return \"Hey there, I\u0027m Fukuyama Masaharu the 24/7 Chatbot. What can I do for you (deep voice).\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out a success message for adding a task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param task task added"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param count current number of tasks in the task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String addSuccess(Task task, int count) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String.format(\"Now you have %d task(s) in the list.\", count);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out a success message for deleting a task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param task task deleted"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param count current number of tasks in the task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String deleteSuccess(Task task, int count) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return \"Alright. I\u0027ve removed this task:\\n\" + task + \"\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String.format(\"Now you have %d task(s) in the list.\", count);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out a success message for marking a task as done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param task task marked as done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String markDoneSuccess(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out the given error message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param message the error message"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String errorMessage(String message) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Lists out the given tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param ls list of tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String list(ArrayList\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (ls.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return \"No tasks.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        for (Task l : ls) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            response \u003d response.concat(index + \". \" + l + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 81
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "         maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "         maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "         prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fx:controller\u003d\"chatbot.MainWindow\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 27
    }
  },
  {
    "path": "src/test/java/chatbot/data/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void deadlineBody_datePresent_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Deadline dl \u003d Deadline.newDeadline(\"return book\", LocalDate.parse(\"2020-08-25\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(dl.getDescription(), \"return book\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(dl.getDate().toString(), \"2020-08-25\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 18
    }
  },
  {
    "path": "src/test/java/chatbot/data/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void eventBody_datePresent_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Event evt \u003d Event.newEvent(\"meeting\", LocalDate.parse(\"2020-08-25\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(evt.getDescription(), \"meeting\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(evt.getDate().toString(), \"2020-08-25\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 17
    }
  },
  {
    "path": "src/test/java/chatbot/data/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void todoBody_nonEmptyBody_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(Todo.newTodo(\"Read book\").getDescription(), \"Read book\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 12
    }
  },
  {
    "path": "src/test/java/chatbot/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package chatbot.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.commands.InvalidCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import chatbot.exception.ChatbotException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void parseCommand_validCommand_success() throws ChatbotException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Command command \u003d Parser.parse(\"todo read book\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(command instanceof AddCommand, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void parseCommand_invalidCommand_displayError() throws ChatbotException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Command command \u003d Parser.parse(\"Some unrecognized command\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(command instanceof InvalidCommand, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 27
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline return book /by 2020-08-20"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event project meeting /at 2020-08-20"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline homework submit"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline homework submit .by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline homework submit /by invalid-format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event run"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event run /at"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event run /at invalid-format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "date invalid-format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "date 2020-08-20"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "delete 1000"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Chatbot.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "java -classpath ..\\bin Chatbot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Main.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 4,
      "-": 36
    }
  }
]
