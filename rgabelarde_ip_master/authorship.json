[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static void printBorder() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static void main(String[] args) throws DukeException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String input \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    printBorder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        System.out.println((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        printBorder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    catch(Exception e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        throw new DukeException(\" â˜¹ OOPS!!! What task did you complete?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    printBorder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            Todo t \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            tasks.add(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            System.out.println(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            throw new DukeException(\" â˜¹ Insufficient details! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    } else if (input.contains(\"deadline\") || input.contains(\"event\") || input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        int due \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                Deadline dl \u003d new Deadline(input.substring(9, due), input.substring(due + 4));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                tasks.add(dl);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(dl);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            } catch (Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                throw new DukeException(\" â˜¹ Insufficient details! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                Event e \u003d new Event(input.substring(6, due), input.substring(due + 4));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                tasks.add(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            } catch (Exception e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                throw new DukeException(\" â˜¹ Insufficient details! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                int index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                Task t \u003d tasks.get(index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                tasks.remove(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + t);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                throw new DukeException(\"Please provide the index of the task you would like to remove.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            throw new DukeException(\"failed to provide task info sufficiently\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            input \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 95,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 15
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return(isDone ? \"\\u2713\" : \"\\u2718\"); //returns tick or X symbol accordingly"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 24
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 13
    }
  }
]
