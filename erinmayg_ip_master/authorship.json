[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    list, todo, event, deadline, done, delete"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private Deadline (String task, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Deadline(String task, String deadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Deadline markDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return new Deadline(task, deadline, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", deadline);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 23
    }
  },
  {
    "path": "src/main/java/DeadlineInvalidDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class DeadlineInvalidDate extends InvalidDateException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public DeadlineInvalidDate() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS. You need to put \\\"/by [date]\\\" after inputting a Deadline.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private static final String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private final String name \u003d \"Bolot\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private final String end \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Greetings, human. I am\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\" ______      ___   _____       ___    _________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"|_   _ \\\\   .\u0027   `.|_   _|    .\u0027   `. |  _   _  |\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"  | |_) | /  .-.  \\\\ | |     /  .-.  \\\\|_/ | | \\\\_|\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\" _| |__) |\\\\  `-\u0027  /_| |__/ |\\\\  `-\u0027  /   _| |_\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"|_______/  `.___.\u0027|________| `.___.\u0027   |_____|\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Hello! I am \" + name + \", your personal chat-bot companion.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"How may I help you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Bye! Thank you for chatting with \" + name + \"!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void echo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String type \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        while (!type.equalsIgnoreCase(end)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(type);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            type \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        bye();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void printList() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(\"You have nothing on your list!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        for (Task todo : list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(i + \". \" + todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private Command getFirstWord(String input) throws UnrecognizedTaskException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String firstWord \u003d input.contains(\" \")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                ? input.substring(0, input.indexOf(\" \")).toLowerCase()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                : input.toLowerCase();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            return Command.valueOf(firstWord);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (IllegalArgumentException illegalArg) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new UnrecognizedTaskException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void addTask(Command firstWord, String input) throws EmptyTaskException, InvalidDateException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            task \u003d input.substring(firstWord.toString().length() + 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } catch (StringIndexOutOfBoundsException indexError) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        if (firstWord \u003d\u003d Command.todo) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            list.add(new ToDo(task));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                task \u003d task.substring(0, task.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                date \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } catch (StringIndexOutOfBoundsException indexError) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (firstWord \u003d\u003d Command.deadline) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    throw new DeadlineInvalidDate();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                } else if (firstWord \u003d\u003d Command.event) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    throw new EventInvalidDate();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            if (firstWord \u003d\u003d Command.deadline) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                list.add(new Deadline(task, date));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } else if (firstWord \u003d\u003d Command.event) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                list.add(new Event(task, date));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(list.get(list.size() - 1).toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String taskText \u003d list.size() \u003d\u003d 1 ? \" task \" : \" tasks \";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + taskText + \"in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void markDone(int taskNo) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        list.set(taskNo, list.get(taskNo).markDone());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(list.get(taskNo));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private void deleteTask(int taskNo) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        Task deleted \u003d list.get(taskNo);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        list.remove(taskNo);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        System.out.println(deleted);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public void addToList() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        while (!input.equalsIgnoreCase(end)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                Command firstWord \u003d getFirstWord(input.trim());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                if (firstWord \u003d\u003d Command.list) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                } else if (firstWord \u003d\u003d Command.done || firstWord \u003d\u003d Command.delete) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    if (input.equals(firstWord.toString())) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        System.out.print(\"Invalid format. After \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        System.out.print(\"\\\"\" + firstWord + \"\\\", \");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        System.out.println(\"you need to put a positive integer\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            int taskNo \u003d firstWord \u003d\u003d Command.done"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                                    ? Integer.parseInt(input.substring(5)) - 1"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                                    : Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            if (firstWord \u003d\u003d Command.done) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                                markDone(taskNo);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                                deleteTask(taskNo);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        } catch (NumberFormatException numError) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            System.out.print(\"Invalid format. After \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            System.out.print(\"\\\"\" + firstWord + \"\\\", \");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                            System.out.println(\"you need to put a positive integer\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                    addTask(firstWord, input.trim());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            } catch (IndexOutOfBoundsException indexError) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                System.out.println(\"Invalid index.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                String taskText \u003d list.size() \u003d\u003d 1 ? \" task \" : \" tasks \";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "                System.out.println(\"You have \" + list.size() + taskText + \"on your list.\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        bye();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        Duke bot \u003d new Duke();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        bot.printLogo();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        bot.greet();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "//        bot.echo();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        bot.addToList();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "erinmayg": 201
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class EmptyTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public EmptyTaskException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS! The description of a task cannot be empty\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private Event (String task, String date, boolean isDone) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Event(String task, String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Event markDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return new Event(task, date, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 23
    }
  },
  {
    "path": "src/main/java/EventInvalidDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class EventInvalidDate extends InvalidDateException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected EventInvalidDate() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS. You need to put \\\"/at [date]\\\" after inputting an Event.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected InvalidDateException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected final String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected final boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    protected Task(String task, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public Task(String task){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public abstract Task markDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        String symbol \u003d isDone ? \"[✓] \" : \"[✗] \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return String.format(\"%s %s\", symbol, task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    private ToDo (String task, boolean isDone) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ToDo(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public ToDo markDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return new ToDo(task, true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 20
    }
  },
  {
    "path": "src/main/java/UnrecognizedTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "public class UnrecognizedTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    public UnrecognizedTaskException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "        super(\"OOPS. Bolot does not recognize the command :( Try again.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "bleh"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "bleh kjhfkdsh"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "event bfast"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "event bfast /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "event bfast /at 10am-1030am"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "deadline project"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "deadline project /by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "deadline project /by 20-08-2020 2359"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "erinmayg": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erinmayg"
        },
        "content": "javac -source 1.8 -target 1.8 -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "erinmayg": 1
    }
  }
]
