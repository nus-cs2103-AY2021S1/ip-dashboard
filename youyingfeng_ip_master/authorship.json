[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "# duke.Ui.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Ui.Duke.java` file, right-click it, and choose `Run duke.Ui.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    archiveBaseName \u003d \"Duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 18,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "1 | Event | kappachuu | 2010-02-01T18:00 | "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "1 | Deadline | chuu | 2018-09-10T21:00 | "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "0 | Event | projekt | 2020-09-10T22:30 | "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "0 | Event | test | 2008-02-01T12:00 | "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "1 | Deadline | testy | 2020-08-05T15:00 | "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "1 | Todo | kappa | "
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### list "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Displays all tasks in a list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Marks a task as complete."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### delete"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Deletes the task at the stated index."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### find"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Searches all tasks that contained the search keyword, and displays those containing the keyword "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "on the screen."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### undo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Undoes the previous action taken. This only works for the action immediately preceding it."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Creates an event at the specified time."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Creates a deadline task to be completed by the specified time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### todo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Creates a todo task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Displays all tasks on the screen."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`Here are the tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " \u003ctasks\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " `"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### `done` - Marks task as complete"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Marks a task as complete, and displays a confirmation."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`done 5`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " \u003ctask\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " `"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### `delete` - Delete the specified task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Deletes the task from the tasklist and displays a confirmation"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`delete 5`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " \u003ctask\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " `"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### `find` - Search for tasks by keyword"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Displays all tasks on the screen that contain the specified keyword"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`find kappa`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " \u003ctasks\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " `"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### `undo` - Undoes the latest action"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Undoes the latest action."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`undo`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`Nice! I\u0027ve undid your previous action!"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " \u003ctasks\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " `"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### `event` - Creates an event"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Creates an event at the specified time."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`event kappa /at 2020-02-20 1900`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " [E][x] kappa (at: 20 Feb 2020 19:00)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " `"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### `deadline` - Creates a deadline"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Creates a deadline to be completed by the specified time."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`deadline kek /by 2020-03-30 1800`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " [D][x] kek (by: 30 Mar 2020 18:00)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " `"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "### `todo` - Creates a todo"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "Creates a todo."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`todo lel`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "`Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " [T][x] lel"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " `"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 129,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import duke.ui.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 11
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected static DateTimeFormatter dateTimeInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected static DateTimeFormatter dateTimeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates an Deadline with the specified values for description and by, which is marked incomplete by default."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Used when creating a new Deadline in the programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param by The time which the deadline should be completed by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, dateTimeInputFormatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates an Deadline with the specified values for description, isDone and by."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Used when loading tasks from file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param isDone Completion status of the deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param by The time which the deadline should be completed by."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by); // use default formatter that leaves no whitespace to trim"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns an array of Strings representing the state of the task, to be passed to Storage to"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * be formatted and written to a file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Array of Strings representing the current state of the Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String[] serialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String[] output \u003d new String[4];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[0] \u003d this.isDone"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                ? \"1\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                : \"0\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[1] \u003d \"Deadline\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[2] \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[3] \u003d by.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(dateTimeOutputFormatter) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 56
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates a new instance of Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Duke handles the operations of the programme."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        parser \u003d new Parser(taskList, ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Storage.loadTasksFrom(\"data/duke.txt\", taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void loadTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Storage.loadTasksFrom(\"data/duke.txt\", taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void saveTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Storage.saveTasksTo(\"data/duke.txt\", taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Parses the input and performs the necessary operations based on its contents."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param input The command entered by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return String output to be displayed to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String parseInput(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String output \u003d parser.parse(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // System.out.println(output);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 37
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " * Used to represent common exceptions or erroneous situations encountered by duke.Ui.Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 10
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected static DateTimeFormatter dateTimeInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected static DateTimeFormatter dateTimeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected LocalDateTime timeOfEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates an Event with the specified description and timeOfEvent, which is marked incomplete by default."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Used when creating a new Event in the programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param description Description of the Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param timeOfEvent Time at which the Event takes place."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Event(String description, String timeOfEvent) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.timeOfEvent \u003d LocalDateTime.parse(timeOfEvent, dateTimeInputFormatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates an Event with the specified values for isDone and timeOfEvent."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Used when loading tasks from file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param description Description of the Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param isDone Completion status of the Event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param timeOfEvent Time at which the Event takes place."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Event(String description, boolean isDone, String timeOfEvent) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.timeOfEvent \u003d LocalDateTime.parse(timeOfEvent);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns an array of Strings representing the state of the task, to be passed to Storage to"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * be formatted and written to a file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Array of Strings representing the current state of the Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String[] serialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String[] output \u003d new String[4];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[0] \u003d this.isDone"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                ? \"1\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                : \"0\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[1] \u003d \"Event\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[2] \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[3] \u003d timeOfEvent.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeOfEvent.format(dateTimeOutputFormatter) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 56
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates a Parser that handles the processing for all input into the programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The central Tasklist where Tasks are stored."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param ui The UI handler that handles printing of statements."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Parser(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert taskList !\u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert ui !\u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Parses a string and performs the necessary actions based on the input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param input The input String typed in by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return False if the command to terminate the programme is encountered, true otherwise."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String parse(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return processBye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return ui.printAllTasks(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return processDone(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return processDelete(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"find\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return processFind(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return processEvent(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return processDeadline(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return processTodo(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"undo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return processUndo();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                throw new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private String processBye() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Storage.saveTasksTo(\"data/duke.txt\", taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return ui.showGoodbyeScreen();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private String processDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please specify a task to mark as complete.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(input.substring(5)); // this is not corrected for 0 index"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            Task completedTask \u003d taskList.markTaskComplete(taskIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            return ui.printMarkTaskCompleteConfirmation(completedTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private String processDelete(String input) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        if (input.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            throw new DukeException(\" OOPS!!! Please specify a task to delete.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Task removedTask \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                taskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return ui.printRemoveTaskConfirmation(removedTask, taskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                throw new DukeException(\" OOPS!!! Please specify a valid task to delete.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private String processFind(String input) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            throw new DukeException(\" OOPS!!! Please specify a keyword to search for.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            return taskList.findTask(input.substring(5));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private String processEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            throw new DukeException(\" OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            int indexOfAtKeyword \u003d input.indexOf(\" /at \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            if (indexOfAtKeyword \u003d\u003d -1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                throw new DukeException(\" OOPS!!! Please specify the event time.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                String eventDesc \u003d input.substring(6, indexOfAtKeyword);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                String eventTime \u003d input.substring(indexOfAtKeyword + 5);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Event newTask \u003d new Event(eventDesc, eventTime);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                taskList.addTask(newTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return ui.printAddTaskConfirmation(newTask, taskList);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private String processDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        if (input.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            throw new DukeException(\" OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            int indexOfByKeyword \u003d input.indexOf(\" /by \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            if (indexOfByKeyword \u003d\u003d -1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                throw new DukeException(\" OOPS!!! Please specify the deadline time.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                String deadlineDesc \u003d input.substring(9, indexOfByKeyword);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                String deadlineTime \u003d input.substring(indexOfByKeyword + 5);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Deadline newTask \u003d new Deadline(deadlineDesc, deadlineTime);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                taskList.addTask(newTask);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return ui.printAddTaskConfirmation(newTask, taskList);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private String processTodo(String input) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        if (input.length() \u003c\u003d 4 || input.substring(5).trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            Todo newTask \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            return ui.printAddTaskConfirmation(newTask, taskList);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private String processUndo() throws DukeException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.undo();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return ui.printUndoConfirmation(taskList);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 146
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Used to load tasks from a storage file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Parses the file specified at the filepath and adds Tasks to the tasklist"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * according to the contents of the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param filepath The relative path where the file is stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The task list to which the new Tasks should be added to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return true if the file is loaded successfully, false otherwise."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public static boolean loadTasksFrom(String filepath, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert taskList !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert taskList.numOfTasks() \u003d\u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        File dataFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                String nextLine \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                if (!nextLine.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    String[] tokens \u003d nextLine.split(\" [|] \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    boolean isDone \u003d !tokens[0].equals(\"0\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    if (tokens[1].equals(\"Todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        taskList.addTask(new Todo(tokens[2], isDone));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else if (tokens[1].equals(\"Event\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        taskList.addTask(new Event(tokens[2], isDone, tokens[3]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else if (tokens[1].equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        taskList.addTask(new Deadline(tokens[2], isDone, tokens[3]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            fileScanner.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            // No need to do anything if file not found as file will be created later anyway"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Stores all tasks in the specified tasklist to the file specified in the filepath."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param filepath The relative path where the file is stored."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The task list which contains the Tasks to be stored."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return true if the Tasks have been successfully stored to the file, false otherwise."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public static boolean saveTasksTo(String filepath, TaskList taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert taskList !\u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        ArrayList\u003cTask\u003e tasksArray \u003d taskList.getAllTasks();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String fileOutput \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        for (Task task: tasksArray) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            for (String string: task.serialize()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                fileOutput \u003d fileOutput + string + \" | \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            fileOutput \u003d fileOutput + \"\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            writer.write(fileOutput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 84
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates a new Task with the specified description, which is marked incomplete by default."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert description.length() !\u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates a new Task with the specified description and completion status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param isDone Completion status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert description.length() !\u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns unicode symbols (tick or cross) corresponding to the completion state of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Tick if the task is complete, cross otherwise."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Marks the task as complete."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Marks the task as incomplete."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void markAsIncomplete() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns an array of Strings representing the state of the task, to be passed to Storage to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * be formatted and written to a file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Array of Strings representing the current state of the Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String[] serialize() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String[] output \u003d new String[3];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[0] \u003d this.isDone"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    ? \"1\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    : \"0\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[1] \u003d \"Task\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[2] \u003d description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 70
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Task lastModifiedTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private int lastModifiedIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Action mostRecentAction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private boolean canUndo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates a TaskList which contains all the tasks added by the user so far."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        mostRecentAction \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        canUndo \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param task The task to be added to the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        mostRecentAction \u003d Action.ADDTASK;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        canUndo \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        lastModifiedTask \u003d task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        lastModifiedIndex \u003d taskList.size() - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Removes the specified task from the list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        lastModifiedIndex \u003d index - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        lastModifiedTask \u003d taskList.get(lastModifiedIndex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        mostRecentAction \u003d Action.DELETETASK;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        canUndo \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Marks the task at the specified 1-index as complete, and returns the completed task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param index The index of the task to be marked complete."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return The task that has been marked as complete."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task markTaskComplete(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        lastModifiedIndex \u003d index - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        lastModifiedTask \u003d taskList.get(lastModifiedIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Task completedTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        completedTask.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        canUndo \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        mostRecentAction \u003d Action.MARKTASKCOMPLETE;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return completedTask;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns the Task object corresponding to the task at the specified index."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param index The index of the task to be obtained."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Task object corresponding to the task at the specified index."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // index is bounded from 1 to len, so -1 to convert to array index"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList.get(index - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns the entire list of tasks as an ArrayList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return ArrayList containing the current tasks stored so far."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns the number of Tasks stored in the TaskList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return The number of elements in the data structure which stores the Tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public int numOfTasks() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns a String object containing all the tasks, that is to be passed to the UI for"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * pretty printing."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Formatted String enumerating all the tasks in the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String getAllTasksAsString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String output \u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            output \u003d output + ((i + 1) + \". \" + taskList.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns all the tasks whose string representation contain the specified keyword."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param keyword The keyword to search for in the tasks."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Formatted String representing all the tasks which contain the specified keyword."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String findTask(String keyword) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String output \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            if (taskList.get(i).toString().contains(keyword)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                output \u003d output + ((i + 1) + \". \" + taskList.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Removes the most recent task added to the TaskList."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void undoAddTask() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert lastModifiedIndex \u003d\u003d taskList.size() - 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.remove(taskList.size() - 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        canUndo \u003d false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Inserts the deleted task back into the TaskList."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void undoDeleteTask() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert lastModifiedIndex \u003c taskList.size();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.add(lastModifiedIndex, lastModifiedTask);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        canUndo \u003d false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Marks the recently completed task as incomplete."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void undoMarkTaskComplete() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assert lastModifiedIndex \u003c taskList.size();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.get(lastModifiedIndex).markAsIncomplete();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        canUndo \u003d false;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Undoes the previous action, restoring the internal tasklist to its previous state."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void undo() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        if (canUndo) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            switch (mostRecentAction) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            case ADDTASK:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                undoAddTask();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            case DELETETASK:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                undoDeleteTask();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            case MARKTASKCOMPLETE:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                undoMarkTaskComplete();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "enum Action {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    ADDTASK,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    DELETETASK,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    MARKTASKCOMPLETE"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 167
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates a new Todo with the specified description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates a new Todo with the specified description and completion status."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param isDone Completion status of the todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns an array of Strings representing the state of the task, to be passed to Storage to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * be formatted and written to a file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Array of Strings representing the current state of the Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String[] serialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String[] output \u003d new String[3];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[0] \u003d this.isDone"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                ? \"1\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                : \"0\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[1] \u003d \"Todo\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[2] \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 42
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates a Ui object to handle the printing of statements to the programme."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            out \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            out \u003d new PrintStream(System.out, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders the welcome message onto the console."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * To be called on programme startup."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String showWelcomeScreen() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    + \"Hello, my name is\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    + \"What can I do for you?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return logo;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders the goodbye message onto the console."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * To be called on programme exit."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String showGoodbyeScreen() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"See you space cowboy!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Prints the error message from an exception."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param e the exception that contains the error message to be printed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void printExceptionMessage(Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders a confirmation message to the console to notify the user of the successful"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * addition of a Task to the TaskList, and displays all lists in the TaskList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param task The Task that has been added to the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The TaskList which the task has been added to."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String printAddTaskConfirmation(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + \"\\nNow you have \" + taskList.numOfTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders a confirmation message to the console to notify the user of the successful"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * addition of a Task to the TaskList, and displays all lists in the TaskList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param task The Task that has been removed from the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The TaskList which the task has been removed from."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String printRemoveTaskConfirmation(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + \"\\nNow you have \" + taskList.numOfTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders a confirmation message to the console to notify the user that the specified"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * task has been successfully marked as complete."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param task The Task that has been marked as complete."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String printMarkTaskCompleteConfirmation(Task task) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders all tasks from the TaskList onto the console."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The TaskList which contains all the tasks to be displayed on the console."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String printAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList.getAllTasksAsString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns the undo confirmation as a string."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The tasklist that contains the previous state."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Message to be displayed in the program."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String printUndoConfirmation(TaskList taskList) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"Nice! I\u0027ve undid your previous action! \\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + taskList.getAllTasksAsString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 106
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Text tempText \u003d new Text(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        double textHeight \u003d tempText.getLayoutBounds().getHeight();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        dialog.setMinHeight(textHeight);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 66
    }
  },
  {
    "path": "src/main/java/duke/ui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " * Controller for duke.ui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Ui.Duke\u0027s reply and then appends"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String response \u003d duke.parseInput(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 52
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${dialog.height}\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 10
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void testSerialize() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(Arrays.toString(new String[]{\"0\", \"Event\", \"kappa\", \"2018-02-01T12:00\"}),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Arrays.toString(new Event(\"kappa\", \"2018-02-01 1200\").serialize()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(Arrays.toString(new String[]{\"1\", \"Event\", \"kappa\", \"2018-02-01T15:00\"}),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Arrays.toString(new Event(\"kappa\", true, \"2018-02-01T15:00\").serialize()));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 17
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void testEmptyListDisplay() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(\"Here are the tasks in your list: \\n\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                new TaskList().getAllTasksAsString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 13
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void testSerialize() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(Arrays.toString(new String[]{\"1\", \"Todo\", \"kappa\"}),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Arrays.toString(new Todo(\"kappa\", true).serialize()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "blah"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " delete "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " done "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "lalala"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "java -classpath ..\\bin duke.Ui.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 1,
      "-": 37
    }
  }
]
