[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of deadlines, tasks that need to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * be done before a specific time. Thus it inherits from Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private final String LABEL \u003d \"D\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    Deadline(boolean isDone, String taskName, String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(isDone, taskName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Returns string representation of a deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return string representation of a deadline object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return \"[\" + LABEL + \"]\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // Constants related to display (including messages)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String LINE_BREAK \u003d \"\\t____________________\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            + \"________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Tusk\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            + \"\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Bye. \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            + \"Hope to see you again soon!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TOGGLE_MESSAGE \u003d \"Nice! \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            + \"I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String DELETED_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TASK_COUNT_FRONT \u003d \"Now you have \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TASK_COUNT_END \u003d \" task(s) in the list.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // Command constants for the bot"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // static fields for the bot"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e(); // add input items here"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static boolean isFirstRun \u003d true; // is the bot run for the first time?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // helper methods related to displaying"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static void displayToScreen(String str) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(\"\\t\" + str);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(LINE_BREAK + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static void displayStoreItems() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(\"\\t\" + LIST_MESSAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        for (int ctr \u003d 1; ctr \u003c\u003d store.size(); ctr++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            System.out.println(\"\\t\" + ctr + \". \" + store.get(ctr - 1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(LINE_BREAK + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static void displayModifiedTasks(Task t, boolean isAdding) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String message \u003d isAdding ? ADDED_MESSAGE : DELETED_MESSAGE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(\"\\t  \" + t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(\"\\t\" + TASK_COUNT_FRONT + store.size() + TASK_COUNT_END);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(LINE_BREAK + \"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // helper methods related to commands"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // can consider using Enum for taskType"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static void taskHandler(String input, String taskType) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String todoName \u003d input.substring(input.indexOf(\"todo\") + 5);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // case: check for \"whitespace description\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                if (todoName.matches(\"\\\\s+\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    throw DukeException.emptyDescription(\"todo\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // remove leading and trailing whitespace"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                Task newTodo \u003d new ToDo(false, todoName.trim());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                store.add(newTodo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                displayModifiedTasks(newTodo, true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            } catch (StringIndexOutOfBoundsException noDesc) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // case: No description"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.emptyDescription(\"todo\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                int eventMarker \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // case: no tag"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                if (eventMarker \u003d\u003d -1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    throw new DukeException(\"The \u0027/at\u0027 tag is missing\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String eventTime \u003d input.substring(eventMarker + 4);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String eventName \u003d input.substring(6, eventMarker - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // case: check for \"whitespace description or timeline\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                if (eventTime.matches(\"\\\\s+\") || eventName.matches(\"\\\\s+\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    throw DukeException.emptyDescription(\"event\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // remove leading and trailing whitespace"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                Task newEvent \u003d new Event(false, eventName.trim(), eventTime.trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                store.add(newEvent);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                displayModifiedTasks(newEvent, true);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            } catch (StringIndexOutOfBoundsException noDescOrTimeEvent) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // case: Either no description or no timeline"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.emptyDescription(\"event\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                int deadlineMarker \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // case: no tag"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                if (deadlineMarker \u003d\u003d -1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    throw new DukeException(\"The \u0027/by\u0027 tag is missing\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String deadlineTime \u003d input.substring(deadlineMarker + 4);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String deadlineName \u003d input.substring(9, deadlineMarker - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // case: check for \"whitespace description or timeline\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                if (deadlineTime.matches(\"\\\\s+\") || deadlineName.matches(\"\\\\s+\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    throw DukeException.emptyDescription(\"deadline\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // remove leading and trailing whitespace"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                Task newDeadline \u003d new Deadline(false, deadlineName.trim(), deadlineTime.trim());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                store.add(newDeadline);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                displayModifiedTasks(newDeadline, true);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            } catch (StringIndexOutOfBoundsException noDescOrTimeDeadline) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // case: Either no description or no timeline"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.emptyDescription(\"deadline\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static void doneHandler(String number) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // check for invalid input"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            int index \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            // outside of valid range"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (index \u003c\u003d 0 || index \u003e store.size()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.invalidNumberInput();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            Task toSet \u003d store.get(index - 1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            toSet.setTaskAsDone();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            displayToScreen(TOGGLE_MESSAGE + \"\\t \" + toSet);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            throw DukeException.invalidNumberInput();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static void deleteHandler(String number) throws DukeException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // check for invalid input"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            int index \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            // outside of valid range"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (index \u003c\u003d 0 || index \u003e store.size()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.invalidNumberInput();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            Task toDelete \u003d store.remove(index - 1);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            newList.addAll(store);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            store \u003d newList;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            displayToScreen(DELETED_MESSAGE + \"\\t  \" + toDelete"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    + \"\\n\\t\" + TASK_COUNT_FRONT + store.size() + TASK_COUNT_END);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            throw DukeException.invalidNumberInput();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // initialize scanner and add commands to set"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // display welcome message"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        if (isFirstRun) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            isFirstRun \u003d false; // it\u0027s not first run anymore"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            displayToScreen(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // read input"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // add to store if the command is not \"list\" or \"bye\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // if comment is \"list\", display added items using displayStoreItems"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        while (!input.equals(EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // split input into individual words and get command"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String[] words \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String command \u003d words[0];"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                // handle for different commands"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    case LIST_COMMAND:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        displayStoreItems();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    case TODO_COMMAND:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        taskHandler(input, \"todo\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    case EVENT_COMMAND:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        taskHandler(input, \"event\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        taskHandler(input, \"deadline\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    case DONE_COMMAND:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        doneHandler(words[1]);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    case DELETE_COMMAND:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        deleteHandler(words[1]);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                        throw DukeException.unknownOperation();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                input \u003d sc.nextLine(); // continue reading input"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                displayToScreen(e.getMessage());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                input \u003d sc.nextLine(); // continue reading input"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // line reached upon command \"bye\", at which point quit and echo exit message"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        displayToScreen(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 221,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * A custom checked exception class to represent"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * exceptions specific to Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // message constants"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String UNKNOWN_OPERATION \u003d \"☹ OOPS!!! I\u0027m sorry, \" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            \"but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EMPTY_DESCRIPTION_FRONT \u003d \"☹ OOPS!!! The description \" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            \"(and / or time) of a \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EMPTY_DESCRIPTION_END \u003d \" cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String INVALID_INPUT \u003d \"This value is invalid. \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            + \"Please enter a valid integer.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Generic message DukeException constructor, maybe used"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * for future factory methods"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param message the message to be passed in Exception"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // factory methods for different exceptions related to Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    static DukeException unknownOperation() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(UNKNOWN_OPERATION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    static DukeException emptyDescription(String taskType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(EMPTY_DESCRIPTION_FRONT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                + taskType + EMPTY_DESCRIPTION_END);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    static DukeException invalidNumberInput() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(INVALID_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 36
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of events, tasks that start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * and end at specific times. Thus it inherits from Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private final String LABEL \u003d \"E\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    Event(boolean isDone, String taskName, String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(isDone, taskName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Returns string representation of an event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return string representation of an event object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return \"[\" + LABEL + \"]\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants (ticks and crosses)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    protected final String CROSS \u003d \"✗\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    protected final String CHECK \u003d \"✓\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    protected boolean isDone; // state of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    protected String taskName; // name of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    Task(boolean isDone, String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // methods"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Returns string representation of a task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return string representation of task object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String marker \u003d isDone ? CHECK : CROSS;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return \"[\" + marker + \"] \" + taskName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Sets the state of the task to be completed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void setTaskAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 37
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of tasks without any date/time attached,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * hence inherits from Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private final String LABEL \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    ToDo(boolean isDone, String taskName) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(isDone, taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Returns string representation of a to-do"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return string representation of to-do object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return \"[\" + LABEL + \"]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "todo buy book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": "deadline sell book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Lysire": 4
    }
  }
]
