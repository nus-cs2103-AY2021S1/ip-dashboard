[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public Deadline(String taskName, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "halcon-blanco": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String HORIZONTAL_RULE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static List\u003cTask\u003e itemsList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        itemsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        executeProgramme();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static void executeProgramme() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String TERMINATION_PHRASE \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String LIST_PHRASE \u003d \"list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String COMPLETE_TASK_PHRASE \u003d \"done\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String TODO_PHRASE \u003d \"todo\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String DEADLINE_PHRASE \u003d \"deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String EVENT_PHRASE \u003d \"event\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String DELETE_PHRASE \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Printer.displayStart();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        while (!command.equals(TERMINATION_PHRASE)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                    case LIST_PHRASE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        Printer.printList(itemsList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                    case COMPLETE_TASK_PHRASE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        Printer.displayCompleteTask();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        itemsList.get(index).doTask();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                    case TODO_PHRASE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        handleTodo();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                    case DEADLINE_PHRASE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        handleDeadline();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                    case EVENT_PHRASE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        handleEvent();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                    case DELETE_PHRASE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        handleDelete();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                        throw DukeException.badCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            command \u003d sc.next();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Printer.displayExit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static void handleTodo() throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        String taskName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            throw DukeException.badToDo();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Task newTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        itemsList.add(newTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Printer.displayAddTask(newTask, itemsList.size());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static void handleDeadline() throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        String taskName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            throw DukeException.badDeadlineTask();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        // String array whose first element is the task and second element is the deadline"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        // substring(1) to remove the starting space"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        String[] taskAndDeadline \u003d taskName.substring(1).split(\" /by \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        if (taskAndDeadline[0].isBlank()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            throw DukeException.badDeadlineTask();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        } else if (taskAndDeadline.length \u003c 2 || taskAndDeadline[1].isBlank()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            throw DukeException.badDeadlineDate();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Task newTask \u003d new Deadline(taskAndDeadline[0], taskAndDeadline[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        itemsList.add(newTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Printer.displayAddTask(newTask, itemsList.size());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static void handleEvent() throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        String taskName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            throw DukeException.badEventTask();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        // String whose first element is task and second element is time of event"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        String[] eventAndTime \u003d taskName.substring(1).split(\" /at \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        if (eventAndTime[0].isBlank()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            throw DukeException.badEventTask();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        } else if (eventAndTime.length \u003c 2 || eventAndTime[1].isBlank()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            throw DukeException.badEventDate();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Task newTask \u003d new Event(eventAndTime[0], eventAndTime[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        itemsList.add(newTask);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Printer.displayAddTask(newTask, itemsList.size());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static void handleDelete() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        int taskIndex \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Task removedTask \u003d itemsList.remove(taskIndex);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        Printer.displayDeleteTask(removedTask, itemsList.size());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "halcon-blanco": 121,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String HORIZONTAL_RULE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String BAD_COMMAND_ERROR \u003d \"I have literally no idea what you\u0027re asking of me. \\uD83D\\uDE20\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String BAD_TODO_ERROR \u003d \"HELLO! Please fill up a description of todo. \" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            \"Can\u0027t be empty!!! \\uD83D\\uDE20\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String BAD_DEADLINE_DATE_ERROR \u003d \"HELLO! Please fill up due date for the deadline. \" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            \"Can\u0027t be empty!!! \\uD83D\\uDE20\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String BAD_DEADLINE_TASK_ERROR \u003d \"HELLO! Please fill up the task for the deadline. \" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            \"Can\u0027t be empty!!! \\uD83D\\uDE20\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String BAD_EVENT_DATE_ERROR \u003d \"HELLO! Please fill up the date for the event. \" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            \"Can\u0027t be empty!!! \\uD83D\\uDE20\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String BAD_EVENT_TASK_ERROR \u003d \"HELLO! Please fill up the event details. \" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            \"Can\u0027t be empty!!! \\uD83D\\uDE20\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static DukeException badCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return new DukeException(HORIZONTAL_RULE + \"\\n\" + BAD_COMMAND_ERROR + \"\\n\" + HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static DukeException badToDo() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return new DukeException(HORIZONTAL_RULE + \"\\n\" + BAD_TODO_ERROR + \"\\n\" + HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static DukeException badDeadlineTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return new DukeException(HORIZONTAL_RULE + \"\\n\" + BAD_DEADLINE_TASK_ERROR + \"\\n\" + HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static DukeException badDeadlineDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return new DukeException(HORIZONTAL_RULE + \"\\n\" + BAD_DEADLINE_DATE_ERROR + \"\\n\" + HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static DukeException badEventTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return new DukeException(HORIZONTAL_RULE + \"\\n\" + BAD_EVENT_TASK_ERROR + \"\\n\" + HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static DukeException badEventDate() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return new DukeException(HORIZONTAL_RULE + \"\\n\" + BAD_EVENT_DATE_ERROR + \"\\n\" + HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "halcon-blanco": 46
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public Event(String taskName, String eventTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "halcon-blanco": 13
    }
  },
  {
    "path": "src/main/java/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private static final String HORIZONTAL_RULE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static void displayStart() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String HELLO_MESSAGE \u003d \"Hello, and welcome to my humble abode. \\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                \"I\u0027m supposed to help you but I\u0027ll be the judge of that. Anyway what do you want.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HELLO_MESSAGE);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static void displayExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String BYE_MESSAGE \u003d \"Thank you for that utter waste of time.\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                \"Can\u0027t wait to see you again...\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(BYE_MESSAGE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static void printList(List\u003cTask\u003e itemsList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String CHECKMARK \u003d \"[✓]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String CROSS \u003d \"[✗]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(\"Here are all your burdens\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d itemsList.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            Task item \u003d itemsList.get(i - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            String fullItem \u003d i + \". \" + item.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "            System.out.println(fullItem);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static void displayCompleteTask() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(\"Congratulations, you actually did something\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static void displayAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(\"One more task added for you sire\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(\"You have \" + size + \" tasks. Enjoy!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public static void displayDeleteTask(Task removedTask, int size) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(\"Finished so soon? Fine I\u0027ve removed the following task. Good day.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(\"    \" + removedTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(\"You have \" + size + \" tasks. Enjoy!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        System.out.println(HORIZONTAL_RULE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "halcon-blanco": 61
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public void undoTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String CHECKMARK \u003d \"[✓]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        final String CROSS \u003d \"[✗]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                ? CHECKMARK + \" \" + taskName"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "                : CROSS + \" \" + taskName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "halcon-blanco": 33
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "halcon-blanco": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "halcon-blanco": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "halcon-blanco"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "halcon-blanco": 1
    }
  }
]
