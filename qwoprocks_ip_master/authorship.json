[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    mainClassName \u003d \"chatterbox.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    archiveBaseName \u003d \"chatterbox\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 62
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### CRUD for tasks (ToDos, Deadlines, and Events)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "You can create ToDos, Deadlines, and Events, by using the [todo](#todo---create-a-todo-task), [deadline](#deadline---create-a-deadline-task), and [event](#event---create-an-event-task) commands respectively. You can view them using the [list](#list---list-all-tasks) command. You can update them by setting them as done using the [done](#done---mark-a-task-as-done) command. You can delete them by using the [delete](#delete---delete-a-task) command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### Search for tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "You can search for tasks by using the [find](#find---find-tasks) command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### Local saving"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Your tasks will automatically be saved into a text file under the data folder whenever the task list updates, and will be loaded when Chatterbox starts up."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### Archive tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "You can archive all tasks into a backup file in the data folder, and start with a clean state using the [archive](#archive---archive-tasks) command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### `todo` - Create a ToDo task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "By entering `todo` followed by the contents of the task, you can create a ToDo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "`todo task 1`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " [T][✗] task 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " You now have 1 task in your list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### `deadline` - Create a Deadline task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "By entering `deadline` followed by the contents of the task, you can create a Deadline task. You can also add `/by \u003cdate\u003e \u003ctime\u003e` after the contents to attach an actual deadline to the task, where `\u003cdate\u003e` is in either `d/M/y` or `d-M-y` format, and time is in `HHmm` format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "`deadline task 2 /by 23/09/20 1100`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " [D][✗] task 2 (by: Sep 23 2020 1100H)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " You now have 2 tasks in your list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### `event` - Create an Event task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "By entering `event` followed by the contents of the task, you can create an Event task. You can also add `/at \u003cdate\u003e \u003ctime\u003e` after the contents to attach an actual event timing to the task, where `\u003cdate\u003e` is in either `d/M/y` or `d-M-y` format, and time is in `HHmm` format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "`event task 3 /at 12-12-20 1200`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " [E][✗] task 3 (by: Dec 12 2020 1200H)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " You now have 3 tasks in your list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "By entering `list`, Chatterbox will respond with a list of all ToDos, Events, and Deadlines you have."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " 1. [T][✗] task 1"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " 2. [D][✗] task 2 (by: Sep 23 2020 1100H)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " 3. [E][✗] task 3 (by: Dec 12 2020 1200H)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "By entering `done` followed by the task number, you can mark that task as done."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " [T][✓] task 1"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "By entering `delete` followed by the task number, you can delete that task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " Noted! I\u0027ve removed this task from your list:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " [T][✓] task 1"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " You now have 2 tasks in your list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### `find` - Find tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "By entering `find` followed by keyword(s), you can get a list of tasks that contain that keyword."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "`find 3`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " 2. [E][✗] task 3 (by: Dec 12 2020 1200H)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "### `archive` - Archive tasks"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "By entering `archive`, you can archive all your tasks and start your task list over from a clean state."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "`archive`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " I have archived all your tasks into the archive file chatterbox_0.bak, you can find it in the data folder"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " ```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 113,
      "-": 20
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 103
    }
  },
  {
    "path": "src/main/java/chatterbox/Chatterbox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Handles the main loop and the high level logic flow of the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Chatterbox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String ERROR_EMPTY_INPUT \u003d \"Input cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String ERROR_NO_TASK_NUMBER \u003d \"Please enter a number after the command.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String ERROR_INVALID_COMMAND \u003d \"That\u0027s not a valid command.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Initializes the task list and load stored tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Chatterbox() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Loads stored tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException  If tasks cannot be loaded."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If tasks cannot be loaded."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void loadTasks() throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        taskList.loadTasks();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Shows the welcome message, then processes each line of user input until \"bye\" is typed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param input The user\u0027s input string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return Chatterbox\u0027s response to the input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String getResponse(String input) throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return processInput(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Processes user input and returns Chatterbox\u0027s response."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param input Raw user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException If input string is empty or invalid command is given."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException         If data cannot be read/written from the save file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private String processInput(String input) throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Check if input is just whitespace"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (input.equals(\"\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(ERROR_EMPTY_INPUT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Get first word of input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String command \u003d (input + \" \").split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Process command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return taskList.getPrintableTaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"done\") || command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            // Get the task number after the command, check if it is valid"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            int taskNo;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                taskNo \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                throw new ChatterboxException(ERROR_NO_TASK_NUMBER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            // Mark as done or delete based on the command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                return taskList.setTaskAsDone(taskNo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                return taskList.deleteTask(taskNo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String searchKeyword \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return taskList.findTasks(searchKeyword);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"deadline\") || command.equals(\"todo\") || command.equals(\"event\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Task t \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return taskList.addTask(t);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"archive\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return taskList.archive();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 92,
      "-": 1
    }
  },
  {
    "path": "src/main/java/chatterbox/ChatterboxException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Class of exceptions thrown by the Chatterbox program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class ChatterboxException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final String msg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public ChatterboxException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 17
    }
  },
  {
    "path": "src/main/java/chatterbox/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Launches the chatterbox GUI application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 12
    }
  },
  {
    "path": "src/main/java/chatterbox/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Loads the FXML files and sets the scene."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final Chatterbox chatterbox \u003d new Chatterbox();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * The main entry point for all JavaFX applications."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * The start method is called after the init method has returned,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * and after the system is ready for the application to begin running."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param stage The primary stage for this application, onto which"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *              the application scene can be set."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *              Applications may create other stages, if needed, but they will not be"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *              primary stages."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Image icon \u003d new Image(Main.class.getResourceAsStream(\"/images/Icon.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            MainWindow mw \u003d new MainWindow();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fxmlLoader.setController(mw);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fxmlLoader.setRoot(mw);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Scene scene \u003d new Scene(mw);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            stage.setTitle(\"Chatterbox\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            stage.getIcons().add(icon);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setChatterbox(chatterbox);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 49
    }
  },
  {
    "path": "src/main/java/chatterbox/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Utility class for parsing date and time, as well as task inputs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected static final DateTimeFormatter DF \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\u0027H\u0027\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String[] dateFormats \u003d new String[] {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        \"d/M/y HHmm\", \"d-M-y HHmm\", \"d/M/y\", \"d-M-y\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Tries to parse a raw string into a date and time, and returns a LocalDateTime if possible."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * If parsing fails, this functions returns null."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param dateTime The raw string to be parsed into datetime."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return The string parsed as a LocalDateTime if possible, else null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static LocalDateTime parseDateTimeFromString(String dateTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Solution below adapted from"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // https://stackoverflow.com/questions/4024544/how-to-parse-dates-in-multiple-formats-using-simpledateformat"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        for (String format : dateFormats) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Date d \u003d new SimpleDateFormat(format).parse(dateTime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                return d.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                // Intentionally left empty"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Combines the task input and the datetime to change the date display."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * If datetime is null, then this function just returns the input string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param input String to format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param dateTime LocalDateTime for the deadline task, can be null."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return The datetime task string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static String getDateTimeTaskString(String input, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (input.contains(\"/\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String[] split \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String originalDateTime \u003d split[1].substring(split[1].indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (dateTime !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                originalDateTime \u003d dateTime.format(DF);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return String.format(\"%s(%s: %s)\", split[0], split[1].split(\" \")[0], originalDateTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Parses user input with task command to create a Task object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Task can be a deadline, a todo, or an event."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param input Raw user input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return Task object created based on user input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException If description of the task command is empty or the command is invalid."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static Task parseTask(String input) throws ChatterboxException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assert !input.strip().equals(\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Get first word of input"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String command \u003d (input + \" \").split(\" \")[0];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Check if description of command is empty"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (!input.contains(\" \")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"The description of a \" + command + \" cannot be empty\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Return a Task based on the command word"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String contents \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return new Deadline(contents);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return new ToDo(contents);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return new Event(contents);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"Invalid command.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 98
    }
  },
  {
    "path": "src/main/java/chatterbox/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Handles the loading and saving of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String ERROR_FILE_CORRUPT \u003d \"One or more lines in the save file may have been corrupted.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String SAVE_FOLDER_PATH \u003d \"./data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String SAVE_FILE_PATH \u003d SAVE_FOLDER_PATH + \"/chatterbox.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String ARCHIVE_FILE_PATH \u003d SAVE_FOLDER_PATH + \"/chatterbox_%d.bak\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final File saveFolder \u003d new File(SAVE_FOLDER_PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final File saveFile \u003d new File(SAVE_FILE_PATH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Creates the save folder and save file if they do not exist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If folder or file cannot be created."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private void ensureSaveFileExistence() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (!saveFolder.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveFolder.mkdir();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveFile.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveFile.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private File getUnusedArchiveFile() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (!saveFolder.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveFolder.mkdir();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        for (int i \u003d 0; i \u003c 100; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String archiveFilename \u003d String.format(ARCHIVE_FILE_PATH, i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            File archiveFile \u003d new File(archiveFilename);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (!archiveFile.exists()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                return archiveFile;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Returns the 0th file if all 0-99th archives are taken up"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return new File(String.format(ARCHIVE_FILE_PATH, 0));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Gets task items from the saved file and parses them into a list of Task objects."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return  The list of tasks saved in the file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If the file cannot be read or parsed properly."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public List\u003cTask\u003e getItems() throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ensureSaveFileExistence();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Scanner scanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (line.strip().equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Task t \u003d Parser.parseTask(line.substring(line.indexOf(\u0027 \u0027) + 1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                t.setDone(Boolean.parseBoolean(line.substring(0, line.indexOf(\u0027 \u0027))));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                items.add(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                throw new ChatterboxException(ERROR_FILE_CORRUPT);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private String getSaveString(List\u003cTask\u003e items) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        StringBuilder saveText \u003d new StringBuilder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        for (Task t : items) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveText.append(t.getDone() ? \"true \" : \"false \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveText.append(t.getInputString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveText.append(\"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return saveText.toString();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Saves the list of Task objects into the save file in text format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param items List of Task objects to save."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If the program is unable to write to the save file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void saveItems(List\u003cTask\u003e items) throws IOException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ensureSaveFileExistence();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        FileWriter writer \u003d new FileWriter(SAVE_FILE_PATH);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String saveString \u003d getSaveString(items);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        writer.write(saveString);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Archives the list of Task objects into an archive file in text format, and empties the current save file."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return The filename of the archive file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException If archiving fails."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String archiveItems() throws IOException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ensureSaveFileExistence();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        File archiveFile \u003d getUnusedArchiveFile();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Files.move(saveFile.toPath(), archiveFile.toPath(), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ensureSaveFileExistence(); // Create an empty save file again"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return archiveFile.getName();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 118
    }
  },
  {
    "path": "src/main/java/chatterbox/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Task with a deadline (must be done by a certain date)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Stores the original user input including the command word, then formats and sets task content."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param input  User input without the command word."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Deadline(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        inputString \u003d \"deadline \" + input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String[] split \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String originalDateTime \u003d split[1].substring(split[1].indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            dateTime \u003d Parser.parseDateTimeFromString(originalDateTime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            contents \u003d Parser.getDateTimeTaskString(input, dateTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            contents \u003d input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        prefix \u003d \"D\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 26
    }
  },
  {
    "path": "src/main/java/chatterbox/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Task that happens at a certain defined period of time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Stores the original user input including the command word, then formats and sets task content."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param input  User input without the command word."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Event(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        inputString \u003d \"event \" + input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String[] split \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String originalDateTime \u003d split[1].substring(split[1].indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            dateTime \u003d Parser.parseDateTimeFromString(originalDateTime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            contents \u003d Parser.getDateTimeTaskString(input, dateTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            contents \u003d input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        prefix \u003d \"E\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 26
    }
  },
  {
    "path": "src/main/java/chatterbox/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * General task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String SYMBOL_TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String SYMBOL_CROSS \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected String prefix;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected String inputString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected String contents;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Returns the original user input string used to create this task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return Original user input string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String getInputString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return inputString;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return String.format(\"[%s][%s] %s\", prefix, (isDone ? SYMBOL_TICK : SYMBOL_CROSS), contents);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 40
    }
  },
  {
    "path": "src/main/java/chatterbox/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.ChatterboxException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Handles the modification of and other operations relating to the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String ERROR_INVALID_TASK_NUMBER \u003d \"Invalid task number.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String ERROR_ARCHIVE_FAILED \u003d \"Unable to archive your tasks, please try again later.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String INFO_TASKS_ARCHIVED \u003d \"I have archived all your tasks into the archive file %s,\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + \" you can find it in the data folder\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String INFO_MATCHING_TASKS \u003d \"I\u0027ve found these matching tasks in your list!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String INFO_LIST_EMPTY \u003d \"Your list is currently empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public TaskList(Storage store) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.storage \u003d store;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Gets tasks from storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void loadTasks() throws IOException, ChatterboxException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        tasks \u003d storage.getItems();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Archives the task list into a file and starts it from a clean slate."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return Archive task message if successful else archive error message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String archive() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // No point archiving if the list is currently empty"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return INFO_LIST_EMPTY;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String archiveFilename \u003d storage.archiveItems();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return String.format(INFO_TASKS_ARCHIVED, archiveFilename);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return ERROR_ARCHIVE_FAILED;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Finds all tasks that match the given keyword and returns a string containing a list of them."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param keyword Keyword to match the tasks with."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return String containing the list of found tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String findTasks(String keyword) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        keyword \u003d keyword.strip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (keyword.equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return getPrintableTaskList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            StringBuilder foundTasks \u003d new StringBuilder(INFO_MATCHING_TASKS).append(\"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                if (t.inputString.contains(keyword)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    foundTasks.append(i + 1).append(\". \").append(t).append(\"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return foundTasks.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Prints the full task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return String containing list of all tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String getPrintableTaskList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            StringBuilder fullList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                fullList.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return fullList.toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return INFO_LIST_EMPTY;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Adds a task to the task list, and updates storage."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param t The task to add."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return Add task message."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If task list fails to save."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String addTask(Task t) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        storage.saveItems(tasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return Ui.getAddTaskMessage(t, tasks.size());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Ensures task number is valid and throws a ChatterboxException if it isn\u0027t."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param taskNo The task number to check."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException If task number is not valid."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private void checkTaskNumber(int taskNo) throws ChatterboxException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (taskNo \u003c 0 || taskNo \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(ERROR_INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Sets a task as done, and updates storage."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param taskNo    The index of the task to be set as done."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return Done task message."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException  If task number if invalid."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If task list fails to save."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String setTaskAsDone(int taskNo) throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        checkTaskNumber(taskNo);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Task t \u003d tasks.get(taskNo);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        t.setDone(true);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        storage.saveItems(tasks);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return Ui.getDoneTaskMessage(t);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Deletes a task, and updates storage."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param taskNo    The index of the task to be deleted."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return Delete task message."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException  If task number if invalid."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If task list fails to save."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String deleteTask(int taskNo) throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        checkTaskNumber(taskNo);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Task t \u003d tasks.remove(taskNo);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        storage.saveItems(tasks);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return Ui.getDeleteTaskMessage(t, tasks.size());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 151
    }
  },
  {
    "path": "src/main/java/chatterbox/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Task that has no specific timing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Stores the original user input including the command word, then sets task content."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param contents  User input without the command word."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public ToDo(String contents) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        inputString \u003d \"todo \" + contents;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.contents \u003d contents;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        prefix \u003d \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 17
    }
  },
  {
    "path": "src/main/java/chatterbox/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * DialogBox UI component that encapsulates a label and an imageview."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private Label dialogText;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        dialogText.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Rectangle clip \u003d new Rectangle(displayPicture.getFitWidth(), displayPicture.getFitHeight());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        clip.setArcWidth(10);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        clip.setArcHeight(10);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static DialogBox getChatterboxDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static DialogBox getErrorDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        db.getStyleClass().add(\"error-dialog\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        db.getStyleClass().add(\"user-dialog\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 72
    }
  },
  {
    "path": "src/main/java/chatterbox/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.Chatterbox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.ChatterboxException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private Chatterbox chatterbox;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final Image chatterboxImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Chatterbox.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void setChatterbox(Chatterbox c) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        chatterbox \u003d c;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            chatterbox.loadTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (ChatterboxException | IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    DialogBox.getChatterboxDialog(Ui.getErrorMessage(\"Unable to load tasks.\"), chatterboxImage)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                DialogBox.getChatterboxDialog(Ui.getWelcomeMessage(), chatterboxImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Chatterbox\u0027s reply and then appends"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String input \u003d userInput.getText().strip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Display user dialog"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            // Display normal dialog"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String response \u003d chatterbox.getResponse(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox.getChatterboxDialog(response, chatterboxImage));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (ChatterboxException | IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            // Display error dialog"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox.getErrorDialog(e.toString(), chatterboxImage));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 78
    }
  },
  {
    "path": "src/main/java/chatterbox/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Utility class for printing formatted messages of the Chatterbox program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Returns the add task message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param t The task that has been added."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param totalTasks    The total number of tasks in the list currently."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return The add task message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static String getAddTaskMessage(Task t, int totalTasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assert t !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assert totalTasks \u003e 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + t + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + String.format(\"You now have %s task%s in your list\", totalTasks, totalTasks \u003d\u003d 1 ? \"\" : \"s\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Returns the delete task message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param t The task that has been deleted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param totalTasks    The total number of tasks in the list currently."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return The delete task message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static String getDeleteTaskMessage(Task t, int totalTasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assert t !\u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assert totalTasks \u003e\u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"Noted! I\u0027ve removed this task from your list: \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + t + \"\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + String.format(\"You now have %s task%s in your list\", totalTasks, totalTasks \u003d\u003d 1 ? \"\" : \"s\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Returns the done task message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param t The task that has been marked as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return The done task message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static String getDoneTaskMessage(Task t) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\" + t;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Returns the first message the user sees when the program starts."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return The welcome message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static String getWelcomeMessage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"Hello I\u0027m Chatterbox. What can I do for you?\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Returns an error message."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param error The message to show."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return The error meesage."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static String getErrorMessage(String error) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"☹ OOPS!!! \" + error;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 67
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003cfx:root maxHeight\u003d\"Infinity\" prefWidth\u003d\"400.0\" fillHeight\u003d\"false\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    \u003cStackPane fx:id\u003d\"displayPictureWrapper\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            \u003cInsets left\u003d\"4.0\" top\u003d\"8.0\" right\u003d\"4.0\" bottom\u003d\"8.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialogText\" alignment\u003d\"TOP_RIGHT\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "           minHeight\u003d\"-Infinity\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            \u003cInsets left\u003d\"4.0\" top\u003d\"8.0\" right\u003d\"4.0\" bottom\u003d\"8.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003cfx:root type\u003d\"javafx.scene.layout.AnchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "         minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"/view/main.css\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"331.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"331.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            prefHeight\u003d\"40.0\" prefWidth\u003d\"69.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"560.0\" prefWidth\u003d\"400.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"383.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 18
    }
  },
  {
    "path": "src/test/java/chatterbox/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void testParseDateTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertNull(Parser.parseDateTimeFromString(\"0293a\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(Parser.parseDateTimeFromString(\"1/12/2020 1800\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                LocalDateTime.of(2020, 12, 1, 18, 0, 0, 0));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(Parser.parseDateTimeFromString(\"12-6-2020 2330\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                LocalDateTime.of(2020, 6, 12, 23, 30, 0, 0));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(Parser.parseDateTimeFromString(\"1/1/2012\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                LocalDateTime.of(2012, 1, 1, 0, 0, 0, 0));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(Parser.parseDateTimeFromString(\"24-8-1900\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                LocalDateTime.of(1900, 8, 24, 0, 0, 0, 0));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void parse_emptyCommandDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ChatterboxException e \u003d assertThrows(ChatterboxException.class, () -\u003e Parser.parseTask(\"todo\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(\"The description of a todo cannot be empty\", e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ChatterboxException e \u003d assertThrows(ChatterboxException.class, () -\u003e Parser.parseTask(\"todos check\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(\"Invalid command.\", e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 37
    }
  },
  {
    "path": "src/test/java/chatterbox/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void checkDeadlineFormatting() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Deadline d \u003d new Deadline(\"read book /by 20/1/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(d.inputString, \"deadline read book /by 20/1/2019 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(d.toString(), \"[D][\\u2717] read book (by: Jan 20 2019 1800H)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        d.setDone(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(d.toString(), \"[D][\\u2713] read book (by: Jan 20 2019 1800H)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 16
    }
  },
  {
    "path": "src/test/java/chatterbox/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void checkEventFormatting() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Event e \u003d new Event(\"borrow books /at 20/1/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(e.inputString, \"event borrow books /at 20/1/2019 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(e.toString(), \"[E][\\u2717] borrow books (at: Jan 20 2019 1800H)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        e.setDone(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(e.toString(), \"[E][\\u2713] borrow books (at: Jan 20 2019 1800H)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "deadline return 1st book /by 2/3/2008 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "deadline return book /by 2/3/2008"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "event project meeting /at 29/2/2002"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "find book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "find deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\chatterbox\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "java -classpath ..\\bin chatterbox.Chatterbox \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 2,
      "-": 19
    }
  }
]
