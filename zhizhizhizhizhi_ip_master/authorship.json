[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 61
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 11
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "DEADLINE\u003c/\u003efalse\u003c/\u003elonger name also\u003c/\u003e2020-08-28"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "DEADLINE\u003c/\u003efalse\u003c/\u003enope\u003c/\u003e2020-09-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "EVENT\u003c/\u003efalse\u003c/\u003elong name\u003c/\u003e2020-09-09"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "TODO\u003c/\u003etrue\u003c/\u003ehng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "TODO\u003c/\u003efalse\u003c/\u003ewake up"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "DEADLINE\u003c/\u003efalse\u003c/\u003ewake up\u003c/\u003e2020-10-23"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* Add Todo (a task with no deadline or date): `todo`"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* Add Deadline (a task with deadline): `deadline`"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* Add Event (an item with date): `event`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* Delete a task: `delete`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* Mark a task as done: `done`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* Undo the last command: `undo`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* Find tasks containing a certain text: `find`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* List all tasks: `list`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "* Exit the program: `bye`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### Add Todo: `todo`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Adds a Todo to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `todo TASK_NAME`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `todo wake up`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    [T][X] wake up"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### Add Deadline: `deadline`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Adds a Deadline to the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `deadline TASK_NAME /by YYYY-MM-DD`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `deadline wake up /by 2020-10-23`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    [D][X] wake up (by: Oct 23 2020)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### Add Event: `event`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Adds a Event to the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `event EVENT_NAME /at YYYY-MM-DD`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `event sleep /at 2020-10-24`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    [E][X] sleep (at: Oct 24 2020)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Now you have 4 tasks in the list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### Delete a task: `delete`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Deletes a Task from the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `delete TASK_INDEX`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `delete 3`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    [E][X] sleep (at: Oct 24 2020)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### Mark a task as done: `done`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Marks a Task from the task list as done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `done TASK_INDEX`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `done 2`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    [D][✓] wake up (by: Oct 23 2020)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### Undo the last command: `undo`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Undos the last command."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `undo`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Got it. I\u0027ve marked this task as undone:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    [D][X] wake up (by: Oct 23 2020)    "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### Find tasks containing a certain text: `find`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Finds all tasks containing the text."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `find TEXT`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `find wake`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    1. [T][X] wake up"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    2. [D][X] wake up (by: Oct 23 2020)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### List all tasks: `list`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Lists all the tasks in the list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    1. [T][X] first task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    2. [T][X] wake up"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    3. [D][X] wake up (by: Oct 23 2020)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "### Exit the program: `bye`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Example of usage: `bye`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 132,
      "-": 12
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 89
    }
  },
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static Integer lastIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(CommandType.ADD);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String act(TaskList list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assert (task !\u003d null);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        list.addTask(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        lastIndex \u003d list.size() - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.addTaskMessage(task, list.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String undo(TaskList list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (lastIndex !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Integer temp \u003d lastIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            lastIndex \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.undoAddMessage(list.remove(temp), list.size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 35
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * A class to handle user commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    CommandType type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Command(CommandType type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public enum CommandType {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        EXIT, DONE, DELETE, LIST, FIND, ADD, ERROR, UNDO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public CommandType getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public abstract String act(TaskList list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public abstract String undo(TaskList list);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 25
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static Task lastTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static Integer lastTaskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Integer whichTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public DeleteCommand(Integer whichTask) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(CommandType.DELETE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.whichTask \u003d whichTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String act(TaskList list) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assert (whichTask !\u003d null);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        lastTaskNumber \u003d whichTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.deleteMessage(lastTask \u003d list.remove(whichTask), list.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String undo(TaskList list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (lastTaskNumber !\u003d null \u0026\u0026 lastTask !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            list.addTaskAt(lastTask, lastTaskNumber);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Task temp \u003d lastTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            lastTask \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            lastTaskNumber \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.undoDeleteMessage(temp, list.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 37
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static Integer lastIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Integer whichTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public DoneCommand(int whichTask) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(CommandType.DONE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.whichTask \u003d whichTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String act(TaskList list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assert (whichTask !\u003d null);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        list.setCompleted(whichTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        lastIndex \u003d whichTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.doneMessage(list.get(whichTask));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String undo(TaskList list) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (lastIndex !\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            list.setNotCompleted(lastIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            int temp \u003d lastIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            lastIndex \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.undoDoneMessage(list.get(temp));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 34
    }
  },
  {
    "path": "src/main/java/Command/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Exception e;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public ErrorCommand(Exception e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(CommandType.ERROR);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.e \u003d e;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String act(TaskList list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (e instanceof DukeException) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            switch (e.getMessage()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            case DukeException.EMPTY_TODO:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return Ui.emptyTodoMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return Ui.ignoreMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else if (e instanceof DateTimeParseException) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.dateFormatReminder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.ignoreMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String undo(TaskList list) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 36
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public ExitCommand(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(CommandType.EXIT);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String act(TaskList list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.exitMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String undo(TaskList list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 20
    }
  },
  {
    "path": "src/main/java/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private String searchText;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public FindCommand(String searchText) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(CommandType.FIND);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.searchText \u003d searchText;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String act(TaskList list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.searchResult(list.find(searchText));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String undo(TaskList list) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 23
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(CommandType.LIST);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String act(TaskList list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.list(list);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String undo(TaskList list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 20
    }
  },
  {
    "path": "src/main/java/Command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class UndoCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Command lastCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public UndoCommand(Command lastCommand){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(Command.CommandType.UNDO);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.lastCommand \u003d lastCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String act(TaskList list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (lastCommand !\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return lastCommand.undo(list);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String undo(TaskList list) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return Ui.cannotUndoMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 26
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import DukeComponent.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Duke asks user for their todos and makes a todo list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Tasks can be viewed in a list, marked as done and deleted."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * The default constructor for a Duke object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * This constructor takes in the file to save data."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Duke(File file) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage \u003d new Storage(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Gets the response for user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Command command \u003d Parser.parse(input, tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return command.act(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 37,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeComponent/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package DukeComponent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * A collection of exceptions due to invalid commands passed to the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static final String EMPTY \u003d \"-1\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static final String IGNORE \u003d \"0\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static final String EMPTY_TODO \u003d \"1\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static final String WRONG_DEADLINE \u003d \"2\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static final String WRONG_EVENT \u003d \"3\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 16
    }
  },
  {
    "path": "src/main/java/DukeComponent/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package DukeComponent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Components.Parser processes strings."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static Command lastCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static boolean isNum(String s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (s \u003d\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Integer.parseInt(s);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Processes string and assigns it to a command type."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param s command as a String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param size size of tasklist"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @return a Commands.Command enum item"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static Command parse(String s, int size) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String[] done \u003d s.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return lastCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else if (done.length \u003d\u003d 2 \u0026\u0026 (done[0].equals(\"done\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                || done[0].equals(\"delete\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    \u0026\u0026 isNum(done[1]) \u0026\u0026 Integer.parseInt(done[1]) \u003c\u003d size"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    \u0026\u0026 Integer.parseInt(done[1]) \u003e 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Integer whichTask \u003d Integer.parseInt(done[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            assert (whichTask !\u003d null);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (done[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return lastCommand \u003d new DoneCommand(whichTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return lastCommand \u003d new DeleteCommand(whichTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return lastCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else if (s.equals(\"undo\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return lastCommand \u003d new UndoCommand(lastCommand);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else if (done[0].equals(\"find\") \u0026\u0026 done.length \u003e 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String searchText \u003d s.replaceFirst(\"find \", \"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return lastCommand \u003d new FindCommand(searchText);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return lastCommand \u003d createTask(s);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Processes strings that could be task making commands and returns the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * task with corresponding type if applicable."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param s command as a String"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @return a Tasks.Task item"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static Command createTask(String s) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String[] task \u003d s.split(\" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Task.Type type;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (task.length \u003e 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if (task[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    type \u003d Task.Type.TODO;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else if (task[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    type \u003d Task.Type.DEADLINE;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else if (task[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    type \u003d Task.Type.EVENT;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    throw new DukeException(DukeException.IGNORE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else if (task.length \u003e 0 \u0026\u0026 task[0].equals(\"todo\")){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                throw new DukeException(DukeException.EMPTY);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                throw new DukeException(DukeException.IGNORE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if ((task \u003d s.split(\" /by \")).length !\u003d 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    throw new DukeException(DukeException.WRONG_DEADLINE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return new AddCommand(new Deadline(task[0].replaceFirst(\"deadline \", \"\"), task[1]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if ((task \u003d s.split(\" /at \")).length !\u003d 2) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    throw new DukeException(DukeException.WRONG_EVENT);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return new AddCommand(new Event(task[0].replaceFirst(\"event \", \"\"), task[1]));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                assert (type \u003d\u003d Task.Type.TODO);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if ((s.split(\" \")).length \u003c 2) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    throw new DukeException(DukeException.EMPTY_TODO);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return new AddCommand(new Todo(s.replaceFirst(\"todo \", \"\")));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return new ErrorCommand(e);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 108
    }
  },
  {
    "path": "src/main/java/DukeComponent/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package DukeComponent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import TaskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Components.Ui contains all the responses the program can give to a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static String print(String s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String welcomeMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tHello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\tWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String doneMessage(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tNice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\t\" + task + \"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String deleteMessage(Task task, int total) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tNoted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\t\" + task + \"\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\tNow you have \" + total + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String list(TaskList tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            temp +\u003d \"\\t\" + (i + 1) + \". \" + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tHere are the tasks in your list:\\n\" + temp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String searchResult(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            temp +\u003d \"\\t\" + (i + 1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tHere are the matching tasks in your list:\\n\" + temp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String addTaskMessage(Task task, int total) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tGot it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\t\" + task + \"\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\tNow you have \" + total + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String ignoreMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String emptyTodoMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String dateFormatReminder() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"Try again! Date format should be yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String exitMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tBye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String undoAddMessage(Task task, int total) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tGot it. I\u0027ve reversed adding: \\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\t\" + task + \"\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\tNow you have \" + total + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String undoDeleteMessage(Task task, int total) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tGot it. I\u0027ve added the following back to the list: \\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\t\" + task + \"\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\tNow you have \" + total + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String undoDoneMessage(Task task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tGot it. I\u0027ve marked this task as undone:\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                + \"\\t\" + task + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String cannotUndoMessage() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return print(\"\\tSorry. The last command cannot be undone.\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 92
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 49
    }
  },
  {
    "path": "src/main/java/TaskList/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * TaskList.Storage saves the list in a file so the state of the list can be preserved"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * when the program restarts."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private boolean added \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Storage(File file) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            this.file \u003d file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String dir \u003d System.getProperty(\"user.dir\") + \"/data\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            File path \u003d new File(dir);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (!path.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                path.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            file \u003d new File(path + \"/duke.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            boolean result \u003d file.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (result) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                System.out.println(\"file created \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                System.out.println(\"file exists at: \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Makes the storage file empty."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    void reset() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try (BufferedWriter bufferedWriter \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                     new BufferedWriter(new FileWriter(file.getAbsolutePath()))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            bufferedWriter.write(\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            added \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Parses the text file into tasks and returns them in a list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        System.out.println(\"reading... \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try (BufferedReader bufferedReader \u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                     new BufferedReader(new FileReader(file.getAbsolutePath()))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                String[] parts \u003d line.split(\"\u003c/\u003e\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if (parts[0].equals(\"TODO\") \u0026\u0026 parts.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Todo(parts[2]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else if (parts[0].equals(\"DEADLINE\") \u0026\u0026 parts.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Deadline(parts[2], parts[3]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else if (parts[0].equals(\"EVENT\") \u0026\u0026 parts.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Event(parts[2], parts[3]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            added \u003d true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Adds one task to the storage file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    void addTask(Task task) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try (BufferedWriter bufferedWriter \u003d"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                     new BufferedWriter(new FileWriter(file.getAbsolutePath(), true))) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String separator \u003d \"\u003c/\u003e\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Task.Type type \u003d task.getType();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String fileContent \u003d type.toString() + separator"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    + task.getCompleted() + separator + task.getName();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (type \u003d\u003d Task.Type.DEADLINE) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                assert (task instanceof Deadline \u003d\u003d true);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                fileContent +\u003d separator + ((Deadline) task).getDeadline();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else if (type \u003d\u003d Task.Type.EVENT) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                assert (task instanceof Event \u003d\u003d true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                fileContent +\u003d separator + ((Event) task).getTime();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            bufferedWriter.write(fileContent);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Adds all the tasks in the given list to the file."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param list the list containing the tasks to be added"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void addAll(TaskList list) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        for (Task t : list.getTaskList()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            addTask(t);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 141
    }
  },
  {
    "path": "src/main/java/TaskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * TaskList.TaskList is the list of tasks and handles the list functions (get, add, remove, size) in the program and the storage."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * The constructor that takes in TaskList.Storage for saving and loading data."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList \u003d storage.load();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Adds a task to list and updates saved data in storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.addTask(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Adds a task to list at the specified index and updates saved data in storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param index index at which the task is to be inserted"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void addTaskAt(Task task, int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList.add(index, task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.reset();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.addAll(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Returns the number of tasks in list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Gets the task at the list index."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param index list index"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @return the task at list index"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Removes the task at the list index."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param index list index"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @return the task removed at list index"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Task temp \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.reset();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.addAll(this);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void setCompleted(int whichTask) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList.get(whichTask).setCompleted();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.reset();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.addAll(this);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void setNotCompleted(int whichTask) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList.get(whichTask).setNotCompleted();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.reset();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.addAll(this);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Finds tasks containing search text."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param searchText phrase to be searched for"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @return the list of tasks containing the search text"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String searchText) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (t.getName().contains(searchText)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 99
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Tasks.Deadline is a type of Tasks.Task with deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Deadline(String name, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(name, Type.DEADLINE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            this.deadline \u003d LocalDate.parse(time, DATE_FORMAT_IN);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(DATE_FORMAT_OUT) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 29
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Tasks.Event is a type of Tasks.Task with time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Event(String name, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(name, Type.EVENT);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            this.time \u003d LocalDate.parse(time, DATE_FORMAT_IN);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time.format(DATE_FORMAT_OUT) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 29
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Tasks.Task is the parent class of Tasks.Todo, Tasks.Deadline and Tasks.Event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Contains functions used by all 3 subclasses."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static final DateTimeFormatter DATE_FORMAT_OUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static final DateTimeFormatter DATE_FORMAT_IN \u003d DateTimeFormatter.ISO_LOCAL_DATE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Type type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private boolean completed \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Task(String name, Type type) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Type getType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public boolean getCompleted() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return completed;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        completed \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void setNotCompleted() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        completed \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return (completed ? \"[✓]\" : \"[✗]\") + \" \" + name;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public enum Type {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 50
    }
  },
  {
    "path": "src/main/java/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Tasks.Todo is the most general type of Tasks.Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(name, Type.TODO);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    public void parserTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.parse(\"list\", 0), Parser.Command.LIST);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.parse(\"bye\", 0), Parser.Command.BYE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.parse(\"delete 2\", 0), Parser.Command.OTHERS);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.parse(\"done 1\", 0), Parser.Command.OTHERS);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.parse(\"delete 2\", 5), Parser.Command.DELETE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.parse(\"done 5\", 5), Parser.Command.DONE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    public void parser_createTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        String task1 \u003d \"todo 1\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        String task2 \u003d \"deadline 2 /by 2020-12-12\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        String task3 \u003d \"event 3 /at 2020-08-30\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        String taskError1 \u003d \"todo\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        String taskError2 \u003d \"event 3 /by 2020-08-30\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        String taskError3 \u003d \"deadline 2 /by 2020\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.createTask(task1).getCompleted(), false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.createTask(task2).getType(), Task.Type.DEADLINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(Parser.createTask(task3).getName(), \"3\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//            Parser.createTask(taskError1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//            assertEquals(e.getMessage(), DukeException.EMPTY_TODO);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//            Parser.createTask(taskError2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//            assertEquals(e.getMessage(), DukeException.WRONG_EVENT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//            Parser.createTask(taskError3);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//            assertEquals(e.getMessage(), \"Text \u00272020\u0027 could not be parsed at index 4\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    public void storageTest() throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        File file \u003d new File(System.getProperty(\"user.dir\") + \"/src/test/testfile\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        Storage s \u003d new Storage(file);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        TaskList taskList \u003d new TaskList(s);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        Todo task1 \u003d new Todo(\"Hng\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        task1.setCompleted();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        Deadline task2 \u003d new Deadline(\"hehe\", \"2020-12-12\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(task1.getCompleted(), taskList.get(0).getCompleted());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(task1.getName(), taskList.get(0).getName());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(task2.getType(), taskList.get(1).getType());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//        assertEquals(task2.getDeadline(), ((Deadline) taskList.get(1)).getDeadline());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 61
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 1,
      "-": 37
    }
  }
]
