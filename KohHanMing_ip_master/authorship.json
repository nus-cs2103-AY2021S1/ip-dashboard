[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 62
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 89
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 60
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.command.ResetCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Starts Duke which a user can give"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * text commands to."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui \u003d new Ui(new Scanner(System.in));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        storage \u003d new Storage(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList \u003d TaskList.generateTaskList(storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a Duke object"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param filePath  Location of file where data is stored."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui \u003d new Ui(new Scanner(System.in));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList \u003d TaskList.generateTaskList(storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.start(taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private void runUntilExitCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        boolean isExitCommand \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        boolean isFirstCommand \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        while (!isExitCommand) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (isFirstCommand) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                isFirstCommand \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                ui.printAdditionActionMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Command command;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                ui.printDivider();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                CommandType commandType \u003d command.getCommandType();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command \u003d Parser.parseTaskType(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    assert command.getCommandType().equals(CommandType.TASKTYPE)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                            : \"Command type should be TASKTYPE\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command \u003d Parser.parseTask(input, command);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    assert command.getCommandType().equals(CommandType.TASK)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                            : \"Command type should be TASK\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command \u003d Parser.parseDelete(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    assert command.getCommandType().equals(CommandType.DELETETASK)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                            : \"Command type should be DELETETASK\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command \u003d Parser.parseDone(input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    assert command.getCommandType().equals(CommandType.DONETASK)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                            : \"Command type should be DONETASK\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command \u003d Parser.parseFind(input);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    assert command.getCommandType().equals(CommandType.FINDTASK)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                            : \"Command type should be FINDTASK\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    command.execute(ui, taskList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                isExitCommand \u003d command.isExitCommand();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Gets response for a user input."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Returns a Duke response as a String."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String getResponseText(String input) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Parser.setPrevCommand(command);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return command.execute(ui, taskList);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Parser.setPrevCommand(new ResetCommand());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public ImageType getResponseImageType(String input) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return command.getImageType();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return e.getImageType();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public CommandType getCommandType(String input) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return command.getCommandType();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return CommandType.RESET;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public boolean isExitCommand(CommandType commandType) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return commandType.equals(CommandType.EXIT);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "KohHanMing": 150
    }
  },
  {
    "path": "src/main/java/duke/ImageType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public enum ImageType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    MAIN,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    PENDING,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    TICK,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    ALERT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    CROSS"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 9
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Image dukeImageMain \u003d new Image(this.getClass().getResourceAsStream(\"/images/baronBotMain.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Image dukeImagePending \u003d new Image(this.getClass().getResourceAsStream(\"/images/baronBotPending.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Image dukeImageTick \u003d new Image(this.getClass().getResourceAsStream(\"/images/baronBotTick.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Image dukeImageAlert \u003d new Image(this.getClass().getResourceAsStream(\"/images/baronBotAlert.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Image dukeImageCross \u003d new Image(this.getClass().getResourceAsStream(\"/images/baronBotCross.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Image getResponseImage(ImageType responseImageType) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Image returnImage \u003d dukeImageMain;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        switch (responseImageType) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            returnImage \u003d dukeImagePending;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case TICK:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            returnImage \u003d dukeImageTick;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case ALERT:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            returnImage \u003d dukeImageAlert;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case CROSS:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            returnImage \u003d dukeImageCross;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return returnImage;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ImageType responseImageType \u003d duke.getResponseImageType(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Image responseImage \u003d this.getResponseImage(responseImageType);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        CommandType commandType \u003d duke.getCommandType(input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String responseText \u003d duke.getResponseText(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(responseText, responseImage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                userDialog, dukeDialog);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (duke.isExitCommand(commandType)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 84
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.PriorityLevel;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected static Command prevCommand \u003d new ResetCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (Parser.prevCommand.getCommandType().equals(CommandType.ADD)) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            command \u003d parseTaskType(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (Parser.prevCommand.getCommandType().equals(CommandType.TASKTYPE)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            command \u003d parseTask(input, prevCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (Parser.prevCommand.getCommandType().equals(CommandType.DELETE)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            command \u003d parseDelete(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (Parser.prevCommand.getCommandType().equals(CommandType.DONE)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            command \u003d parseDone(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (Parser.prevCommand.getCommandType().equals(CommandType.FIND)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            command \u003d parseFind(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (Parser.prevCommand.getCommandType().equals(CommandType.PRIORITY)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            command \u003d parsePriority(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (Parser.prevCommand.getCommandType().equals(CommandType.PRIORITYLEVEL)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            command \u003d parsePriorityLevel(input, prevCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            switch (input.toLowerCase()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d new HelpCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d new AddCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d new DoneCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d new DeleteCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d new FindCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case \"priority\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d new PriorityCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void setPrevCommand(Command prevCommand) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Parser.prevCommand \u003d prevCommand;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Command parseTaskType(String input) throws"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        switch (input.toLowerCase()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskTypeCommand(TaskType.TODO);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskTypeCommand(TaskType.DEADLINE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskTypeCommand(TaskType.EVENT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new InvalidTaskTypeException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Command parseTask(String input, Command command) throws"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assert command.getCommandType().equals(CommandType.TASKTYPE)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                : \"Command type should be TASKTYPE\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        TaskTypeCommand c \u003d (TaskTypeCommand) command;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        switch (c.getTaskType()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskCommand(TaskType.TODO, input);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskCommand(TaskType.DEADLINE, input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskCommand(TaskType.EVENT, input);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new InvalidTaskTypeException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Command parseDelete(String input) throws WrongFormatException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new DeleteTaskCommand(taskNum);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new WrongFormatException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Command parseDone(String input) throws WrongFormatException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new DoneTaskCommand(taskNum);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new WrongFormatException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Command parseFind(String input) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return new FindTaskCommand(input);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Command parsePriority(String input) throws WrongFormatException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new PriorityLevelCommand(taskNum);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new WrongFormatException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Command parsePriorityLevel(String input, Command command) throws"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            InvalidPriorityLevelException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assert command.getCommandType().equals(CommandType.PRIORITYLEVEL)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                : \"Command type should be PRIORITYLEVEL\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        PriorityLevelCommand c \u003d (PriorityLevelCommand) command;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        switch (input.toLowerCase()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case \"high\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new PrioritySetCommand(c.getTaskNum(), PriorityLevel.HIGH);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case \"medium\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new PrioritySetCommand(c.getTaskNum(), PriorityLevel.MEDIUM);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case \"low\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new PrioritySetCommand(c.getTaskNum(), PriorityLevel.LOW);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new InvalidPriorityLevelException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 143
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected String filepath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.filepath \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        File taskLocation \u003d new File(filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        FileReader fileReader \u003d new FileReader(taskLocation);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        List\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            strings.add(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        fileReader.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        List\u003cTask\u003e tasks \u003d buildTasks(strings);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void saveTaskChanges(TaskList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        File taskDir \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (!taskDir.exists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            taskDir.mkdir();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        File tasks \u003d new File(\"./data/Tasks.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (!tasks.exists()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                tasks.createNewFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"./data/Tasks.txt\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            for (int j \u003d 0; j \u003c taskList.getTaskListSize(); j++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                writer.write(taskList.getTask(j).buildSaveString() + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            System.out.println(\"Invalid file name\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static Task extractTask(String taskString) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] taskStringSplit \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String taskType \u003d taskStringSplit[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String doneStatus \u003d taskStringSplit[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        boolean isDone \u003d doneStatus.equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String priority \u003d taskStringSplit[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        PriorityLevel priorityLevel \u003d getPriorityLevel(priority);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String info \u003d taskStringSplit[3];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Todo todo \u003d new Todo(info, TaskType.TODO, isDone);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            todo.setPriorityLevel(priorityLevel);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            String[] infoSplit \u003d info.split(\"/\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            String description \u003d infoSplit[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            String[] dateAndTimeSplit \u003d infoSplit[1].split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateAndTimeSplit[0]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                LocalTime time \u003d LocalTime.parse(dateAndTimeSplit[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, TaskType.DEADLINE, isDone, date, time);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                deadline.setPriorityLevel(priorityLevel);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String[] timePeriod \u003d dateAndTimeSplit[1].split(\"-\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                LocalTime timeStart \u003d LocalTime.parse(timePeriod[0]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                LocalTime timeEnd \u003d LocalTime.parse(timePeriod[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Event event \u003d new Event(description, TaskType.EVENT, isDone, date, timeStart, timeEnd);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                event.setPriorityLevel(priorityLevel);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static List\u003cTask\u003e buildTasks(List\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        for (String taskString : strings) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Task task \u003d extractTask(taskString);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static PriorityLevel getPriorityLevel(String priority) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (priority.equals(\"H\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return PriorityLevel.HIGH;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (priority.equals(\"M\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return PriorityLevel.MEDIUM;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (priority.equals(\"L\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return PriorityLevel.LOW;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return PriorityLevel.UNDEFINED;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 114
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.PriorityLevel;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports actions involving adding, removing and storing tasks in a list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates an empty duke.TaskList object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a duke.TaskList object using an existing list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskArr List of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.tasks \u003d taskArr;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Generates a duke.TaskList object by loading a saved list and generates"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * an empty duke.TaskList object otherwise."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param storage Object containing filepath to saved list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return duke.TaskList object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static TaskList generateTaskList(Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskList(storage.load());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            System.out.println(\"Could not load file. Generating blank duke.task.Task List.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Removes a task at a specified index from the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param i Index of task to be removed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void removeTask(int i) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the task at a specific index of the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param i Index of task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return duke.task.Task at specified index."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the last task on the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return duke.task.Task at the end of the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Task getMostRecentTask() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Size of task list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Checks if the task list is empty or not."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Either true or false."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void setTaskPriorityLevel(int i, PriorityLevel priorityLevel) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        tasks.get(i).setPriorityLevel(priorityLevel);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 97
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports interactions with user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected static final String[] CMD_ARR \u003d {\"help\", \"add\", \"list\", \"done\", \"delete\", \"find\", \"priority\", \"bye\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected static final String LOGO \u003d \" __________________________________________________________\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"|                                                          |\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"|  ____     _     _____   ____  _   _ ____   ____ _______  |\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| |  _ \\\\   / \\\\   |  __ \\\\ / __ \\\\| \\\\ | |  _ \\\\ / __ \\\\__   __| |\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| | |_) | /   \\\\  | |__) | |  | |  \\\\| | |_) | |  | | | |    |\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| |  _ \u003c / /_\\\\ \\\\ |  _  /| |  | | . ` |  _ \u003c| |  | | | |    |\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| | |_) / _____ \\\\| | \\\\ \\\\| |__| | |\\\\  | |_) | |__| | | |    |\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| |____/_/     \\\\_\\\\_|  \\\\_\\\\\\\\____/|_| \\\\_|____/ \\\\____/  |_|    |\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"|                                                          |\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"|__________________________________________________________|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Ui (Scanner sc) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the startup UI and prompts user to enter input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void start(TaskList taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Hello, I am BaronBot!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String displayError(String errorMsg) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(errorMsg);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the divider that separates different actions."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printDivider() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return DIVIDER;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays a prompt for the user to enter additional input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printAdditionActionMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"What else would you like to do?\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"What else would you like to do?\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the goodbye message."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printGoodbyeMessage() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Bye! See you around\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"Your work has been saved!\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"You can close the application now\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the list of commands the user can enter."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printHelp() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String s \u003d \"Here are the commands you can use:\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        for (int i \u003d 0; i \u003c CMD_ARR.length; i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            s +\u003d (i + 1) + \". \" + CMD_ARR[i] + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printPrompt(String s) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printAddAcknowledgement(TaskList taskList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String s \u003d \"Alright, I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + taskList.getMostRecentTask().toString() + \"\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"You now have \" + taskList.getTaskListSize() + \" tasks on your list\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the tasks currently on the list of tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String s \u003d \"These are the tasks on your list:\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        for (int j \u003d 0; j \u003c taskList.getTaskListSize(); j++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            s +\u003d (j + 1)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    + \". \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    + taskList.getTask(j).toString()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    + \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the acknowledgement of a task being updated to done."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskNum duke.task.Task specified to be changed to done."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printDoneAcknowledgement(TaskList taskList, int taskNum) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String s \u003d \"Good job! This task is now marked as done:\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + taskList.getTask(taskNum - 1).toString()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the acknowledgement of the task that the user deleted from the list of tasks."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param task duke.task.Task that was deleted."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printDeleteAcknowledgement(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String s \u003d \"Alright, the following task has been removed:\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"You now have \" + taskList.getTaskListSize() + \" tasks on your list\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the acknowledgement of the task that the user deleted from the list of tasks."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskNum duke.task.Task that was deleted."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printPrioritySetAcknowledgement(TaskList taskList, int taskNum) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String s \u003d \"Alright, the following task priority has been updated:\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + taskList.getTask(taskNum - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String printTask(TaskList taskList, int taskNum) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String s \u003d (taskNum + 1)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \". \""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + taskList.getTask(taskNum).toString()"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 167
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public AddCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.ADD, ImageType.PENDING);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printPrompt(\"What kind of task is it?\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \" - Todo\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \" - Deadline\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \" - Event\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 21
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected CommandType commandType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected ImageType imageType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Command(CommandType commandType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.imageType \u003d ImageType.MAIN;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Command(CommandType commandType, ImageType imageType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.imageType \u003d imageType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public CommandType getCommandType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return this.commandType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public ImageType getImageType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return imageType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return commandType.equals(CommandType.EXIT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public abstract String execute(Ui ui, TaskList taskList) throws DukeException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 35
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    ADD,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    TASKTYPE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    TASK,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    DELETETASK,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    DONETASK,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    FINDTASK,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    PRIORITY,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    PRIORITYLEVEL,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    PRIORITYSET,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    RESET,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public DeleteCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.DELETE, ImageType.PENDING);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws EmptyListException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printPrompt(\"Which task do you want to delete?\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.NonExistentTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public DeleteTaskCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.DELETETASK, ImageType.TICK);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws NonExistentTaskException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskNum \u003e taskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new NonExistentTaskException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Task task \u003d taskList.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList.removeTask(taskNum - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Storage.saveTaskChanges(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printDeleteAcknowledgement(taskList, task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public DoneCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.DONE, ImageType.PENDING);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws EmptyListException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printPrompt(\"Which task do you want to mark as done?\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DoneTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.InvalidDoneCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.NonExistentTaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DoneTaskCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public DoneTaskCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.DONETASK, ImageType.TICK);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws NonExistentTaskException,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            InvalidDoneCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskNum \u003e taskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new NonExistentTaskException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else if (taskList.getTask(taskNum - 1).isDone()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new InvalidDoneCommandException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            taskList.getTask(taskNum - 1).markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Storage.saveTaskChanges(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return ui.printDoneAcknowledgement(taskList, taskNum);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.EXIT);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 16
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public FindCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.FIND, ImageType.PENDING);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws EmptyListException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printPrompt(\"What are you trying to find? Search using a keyword.\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 21
    }
  },
  {
    "path": "src/main/java/duke/command/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public FindTaskCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.FINDTASK);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String s \u003d ui.printPrompt(\"These are the tasks that match the keyword:\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                s +\u003d ui.printTask(taskList, i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 28
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.HELP);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printHelp();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 16
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.LIST);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws EmptyListException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printList(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 20
    }
  },
  {
    "path": "src/main/java/duke/command/PriorityCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class PriorityCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public PriorityCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.PRIORITY, ImageType.PENDING);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws EmptyListException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printPrompt(\"Which task do you want to assign a priority to?\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 21
    }
  },
  {
    "path": "src/main/java/duke/command/PriorityLevelCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.NonExistentTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class PriorityLevelCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public PriorityLevelCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.PRIORITYLEVEL, ImageType.PENDING);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws NonExistentTaskException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (taskNum \u003e taskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new NonExistentTaskException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printPrompt(\"What Level do you want to set it as?\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \" - High\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \" - Medium\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \" - Low\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public int getTaskNum() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 33
    }
  },
  {
    "path": "src/main/java/duke/command/PrioritySetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.PriorityLevel;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class PrioritySetCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected PriorityLevel priorityLevel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public PrioritySetCommand(int taskNum, PriorityLevel priorityLevel) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.PRIORITYSET, ImageType.TICK);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.priorityLevel \u003d priorityLevel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList.setTaskPriorityLevel(this.taskNum - 1, this.priorityLevel);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Storage.saveTaskChanges(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return ui.printPrioritySetAcknowledgement(taskList, this.taskNum);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ResetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class ResetCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public ResetCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.RESET);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"You\u0027re not supposed to see this :o\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 16
    }
  },
  {
    "path": "src/main/java/duke/command/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.WrongFormatException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected String inputToAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskCommand(TaskType taskType, String inputToAdd) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.TASK, ImageType.TICK);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.inputToAdd \u003d inputToAdd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws EmptyDescriptionException,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            WrongFormatException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (inputToAdd.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                taskList.addTask(new Todo(inputToAdd, taskType));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String[] deadlineSplit \u003d inputToAdd.split(\",\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                taskList.addTask(new Deadline(deadlineSplit[0], deadlineSplit[1], taskType));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String[] eventSplit \u003d inputToAdd.split(\",\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                taskList.addTask(new Event(eventSplit[0], eventSplit[1], taskType));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Storage.saveTaskChanges(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return ui.printAddAcknowledgement(taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new WrongFormatException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 52
    }
  },
  {
    "path": "src/main/java/duke/command/TaskTypeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.InvalidTaskTypeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class TaskTypeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskTypeCommand(TaskType taskType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(CommandType.TASKTYPE, ImageType.PENDING);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String execute(Ui ui, TaskList taskList) throws InvalidTaskTypeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return ui.printPrompt(\"Please enter the task\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return ui.printPrompt(\"Please enter the task followed by the date and time of the deadline\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    + \"e.g., submit report, 11/10/2019 1700\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return ui.printPrompt(\"Please enter the event followed by the date and time of the event\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    + \"e.g., team project meeting ,2/10/2019 1400-1600\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throw new InvalidTaskTypeException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 36
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected ImageType imageType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.imageType \u003d ImageType.ALERT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public DukeException(String errorMsg, ImageType imageType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.imageType \u003d imageType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public ImageType getImageType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return imageType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public EmptyDescriptionException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(\"Oops, the description can\u0027t be empty!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public EmptyListException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(\"There are no tasks on your list\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"Use the \u0027add\u0027 command to start adding tasks!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDoneCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class InvalidDoneCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public InvalidDoneCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(\"This task is already done!\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"Check out each task\u0027s status by using \u0027list\u0027!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidPriorityLevelException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class InvalidPriorityLevelException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public InvalidPriorityLevelException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(\"Oops that wasn\u0027t a valid priority level!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class InvalidTaskTypeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public InvalidTaskTypeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(\"Oops that wasn\u0027t a valid task type!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/NonExistentTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class NonExistentTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public NonExistentTaskException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(\"Sorry that task doesn\u0027t exist\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"Try using \u0027list\u0027 to find out what tasks you have!\", ImageType.CROSS);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(\"Sorry I didn\u0027t understand that\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"How about entering \u0027help\u0027 instead?\", ImageType.CROSS);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/WrongFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.ImageType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class WrongFormatException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public WrongFormatException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(\"Hmmm, looks like that didn\u0027t work\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"Make sure you used the right format!\", ImageType.CROSS);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports the creation of duke.task.Deadline objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a duke.task.Deadline object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param dateAndTime Date and time of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Deadline(String description, String dateAndTime, TaskType taskType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] dateAndTimeSplit \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] dateSplit \u003d dateAndTimeSplit[1].split(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.date \u003d LocalDate.of(Integer.parseInt(dateSplit[2]),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Integer.parseInt(dateSplit[1]),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Integer.parseInt(dateSplit[0]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeUnformatted \u003d dateAndTimeSplit[2];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeFormatted \u003d timeUnformatted.substring(0, 2)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \":\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + timeUnformatted.substring(2, 4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.time \u003d LocalTime.parse(timeFormatted);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a duke.task.Deadline object with extra parameters that defines date and time separately, and whether"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * task is done or not."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param time Time that task is due."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Deadline(String description, TaskType taskType, boolean isDone, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String buildSaveString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return super.buildSaveString() + \"/\" + this.date + \" \" + this.time;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns string representation of the duke.task.Deadline object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return String representation of the duke.task.Deadline object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"[Deadline]\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + super.toString() + \" \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"(by: \" + this.date + \" \" + this.time + \") \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"Priority: \" + super.getPriorityLevel();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports the creation of duke.task.Event objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalTime timeStart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalTime timeEnd;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates an duke.task.Event object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param dateAndTime Date and time of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Event(String description, String dateAndTime, TaskType taskType) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] dateAndTimeSplit \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] dateSplit \u003d dateAndTimeSplit[1].split(\"/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.date \u003d LocalDate.of(Integer.parseInt(dateSplit[2]),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Integer.parseInt(dateSplit[1]),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Integer.parseInt(dateSplit[0]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] timeSplit \u003d dateAndTimeSplit[2].split(\"-\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeStartUnformatted \u003d timeSplit[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeStartFormatted \u003d timeStartUnformatted.substring(0, 2)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \":\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + timeStartUnformatted.substring(2, 4);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeEndUnformatted \u003d timeSplit[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeEndFormatted \u003d timeEndUnformatted.substring(0, 2)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \":\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + timeEndUnformatted.substring(2, 4);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.timeStart \u003d LocalTime.parse(timeStartFormatted);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.timeEnd \u003d LocalTime.parse(timeEndFormatted);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates an duke.task.Event object with extra parameters that defines date and time separately, and whether"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * task is done or not."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param timeStart Starting time of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param timeEnd Ending time of task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Event(String description, TaskType taskType, boolean isDone, LocalDate date, LocalTime timeStart, LocalTime timeEnd) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String buildSaveString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return super.buildSaveString() + \"/\" + this.date + \" \" + this.timeStart + \"-\" + this.timeEnd;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns string representation of the duke.task.Event object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return String representation of the duke.task.Event object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"[Event]\" + super.toString() + \" \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"(at: \" + this.date + \" \" + this.timeStart + \"-\" + this.timeEnd + \") \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"Priority: \" + super.getPriorityLevel();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 73
    }
  },
  {
    "path": "src/main/java/duke/task/PriorityLevel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public enum PriorityLevel {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    LOW,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    MEDIUM,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    HIGH,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    UNDEFINED"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports creation of duke.task.Task objects and duke.task.Task actions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected PriorityLevel priorityLevel;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a duke.task.Task object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description  Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Task(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.priorityLevel \u003d PriorityLevel.UNDEFINED;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a duke.task.Task object with extra parameter that defines whether"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * task is done or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Task(String description, TaskType taskType, boolean isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.priorityLevel \u003d PriorityLevel.UNDEFINED;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns a tick if isDone is true and a cross otherwise."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Either a tick or cross."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Changes the task\u0027s isDone to true."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Checks if task is done or not."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Either true or false."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the type of task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Type of task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public PriorityLevel getPriorityLevel() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return this.priorityLevel;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void setPriorityLevel(PriorityLevel priorityLevel) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.priorityLevel \u003d priorityLevel;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String buildSaveString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String type \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        switch (this.taskType) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            type \u003d \"T\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            type \u003d \"D\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            type \u003d \"E\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String priority \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        switch (this.priorityLevel) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case HIGH:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            priority \u003d \"H\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case MEDIUM:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            priority \u003d \"M\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case LOW:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            priority \u003d \"L\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        case UNDEFINED:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            priority \u003d \"U\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String doneStatus \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return type + \"|\" + doneStatus + \"|\" + priority + \"|\" + this.description;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns string representation of the duke.task.Task object."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return String representation of the duke.task.Task object."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + this.getStatusIcon()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"]\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + this.getDescription();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 137
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports the creation of duke.task.Todo objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a duke.task.Todo object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Todo(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a duke.task.Todo object with extra parameter that defines whether"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * task is done or not."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Todo(String description, TaskType taskType, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns string representation of the duke.task.Todo object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return String representation of the duke.task.Todo object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"[Todo]\" + super.toString() + \" \" + \"Priority: \" + super.getPriorityLevel();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" translateY\u003d\"10.0\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "      \u003cVBox prefHeight\u003d\"99.0\" prefWidth\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "      \u003cImageView fitHeight\u003d\"600.0\" fitWidth\u003d\"400.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "         \u003cimage\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            \u003cImage url\u003d\"@../images/BG.png\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "         \u003c/image\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "      \u003cVBox prefHeight\u003d\"525.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: transparent;\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            \u003cVBox alignment\u003d\"BOTTOM_CENTER\" prefHeight\u003d\"80.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #13274a;\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                  \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"64.0\" prefWidth\u003d\"400.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                     \u003cchildren\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"50.0\" fitWidth\u003d\"250.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                           \u003cimage\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                              \u003cImage url\u003d\"@../images/baronBotBanner.png\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                           \u003c/image\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                     \u003c/children\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                  \u003c/HBox\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                  \u003cHBox prefHeight\u003d\"2.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #74c8ff;\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "              \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"469.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                  \u003ccontent\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                      \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"451.0\" prefWidth\u003d\"388.0\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                     \u003cchildren\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                        \u003cHBox fx:id\u003d\"header\" alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"339.0\" prefWidth\u003d\"400.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                           \u003cchildren\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                              \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"309.0\" prefWidth\u003d\"350.0\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                    \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                          \u003cImageView fitHeight\u003d\"200.0\" fitWidth\u003d\"200.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                             \u003cimage\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                \u003cImage url\u003d\"@../images/baronBotMain.png\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                             \u003c/image\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                          \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                    \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                          \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                \u003cLabel contentDisplay\u003d\"RIGHT\" text\u003d\"  Hello, I am\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                      \u003cFont size\u003d\"28.0\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                   \u003cgraphic\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                      \u003cImageView fitHeight\u003d\"50.0\" fitWidth\u003d\"200.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                         \u003cimage\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                            \u003cImage url\u003d\"@../images/baronBotBanner.png\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                         \u003c/image\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                   \u003c/graphic\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                \u003cLabel text\u003d\"What can I do for you today?\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                      \u003cFont size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                              \u003c/VBox\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                           \u003c/children\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                           \u003cpadding\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                              \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                           \u003c/padding\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                     \u003c/children\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                  \u003c/VBox\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                  \u003c/content\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "              \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "      \u003cVBox layoutY\u003d\"526.0\" prefHeight\u003d\"74.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #13274a;\"\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            \u003cHBox prefHeight\u003d\"2.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #74c8ff;\" /\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"70.0\" prefWidth\u003d\"400.0\"\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"293.0\" style\u003d\"-fx-background-radius: 5; -fx-text-inner-color: #74c8ff; -fx-background-color: black;\" /\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                  \u003cHBox prefHeight\u003d\"70.0\" prefWidth\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-radius: 5; -fx-background-color: #0e1c35;\" text\u003d\"Send\" textFill\u003d\"#74c8ff\" /\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 106
    }
  },
  {
    "path": "src/test/java/DukeTaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DukeTaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void generateEmptyTaskListTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(true, taskList.isEmpty());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void addTasksTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList.addTask(new Todo(\"Finish Drawing\", TaskType.TODO));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList.addTask(new Deadline(\"Essay\", \" 11/10/2020 1800\", TaskType.DEADLINE));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList.addTask(new Event(\"Meeting\", \" 20/06/2020 1400-1600\", TaskType.EVENT));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String todo \u003d \"[Todo][\\u2718]Finish Drawing\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String deadline \u003d \"[Deadline][\\u2718]Essay (by: 2020-10-11 18:00)\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String event \u003d \"[Event][\\u2718]Meeting (at: 2020-06-20 14:00-16:00)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(todo, taskList.getTask(0).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(deadline, taskList.getTask(1).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(event, taskList.getTask(2).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 32
    }
  },
  {
    "path": "src/test/java/DukeUiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DukeUiTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    Ui ui \u003d new Ui(new Scanner(System.in));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void userCommandTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String help \u003d \"Here are the commands you can use:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"1. help\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"2. add\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"3. list\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"4. done\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"5. delete\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"6. date\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"7. bye\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(help.trim(), outputStreamCaptor.toString().trim().replace(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 39
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "aaaaaa"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "add"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "add"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "assigment ,2pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "lunch with the boys , 12-1pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\kohha\\Desktop\\git\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "KohHanMing": 6
    }
  }
]
