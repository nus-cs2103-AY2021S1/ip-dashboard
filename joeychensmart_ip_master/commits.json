{
  "authorDailyContributionsMap": {
    "joeychensmart": [
      {
        "date": "2020-08-16",
        "commitResults": [
          {
            "hash": "fb51a15fc9b1f5a9df14f66f98c665107b83f3e2",
            "messageTitle": "Implement skeletal version that only echoes output",
            "messageBody": "Changed the logo, and added a few functions to format system output\nto stdout. Main function now also reads in and echoes input, and\nexits when \"bye\" is entered. It will also print a goodbye message.\n",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 31,
                "deletions": 6
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-17",
        "commitResults": [
          {
            "hash": "4f5f2c14cee855b2333e2d5609284f67c216fbbe",
            "messageTitle": "Feat: Implement add, list features (Level-2)",
            "messageBody": "firstly, created a constructor for Duke to make it easier to hold\nstate/variables. Also made some of the utility functions non-static.\n\nadded the `add` and `list` features. Uses an arraylist to store and\ndisplay strings input by the user. Created the functions `addItem`\nand `printList` to carry this out.\n\nminor fix: the indent function was not working properly for strings\nwith multiple lines.\n\nnote: will start using conventional commits style messages for\nfuture commits.\n",
            "tags": [
              "Level-2",
              "A-Collections"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 47,
                "deletions": 21
              }
            }
          },
          {
            "hash": "867d8c8ac43b9c3b0d0093853a38d636ad3768c9",
            "messageTitle": "Feat: Implement tasks+mark as done (Level-3)",
            "messageBody": "Added a new class `task` to keep track of tasks. Also replaced the\nArrayList\u003cString\u003e items with an ArrayList\u003cTask\u003e. Task can be pretty\nprinted with toString.\n\nAdded mark as done feature: Duke will look for strings beginning\nwith `done ` and parse the rest of the string into an int idx.\nThe task with index idx will be marked as done.\nTODO: add error handling for strings with wrong formatting.\n",
            "tags": [
              "Level-3",
              "A-Classes"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 26,
                "deletions": 2
              }
            }
          },
          {
            "hash": "ecdce74de39d9a1273f6ae0faf663d10ed3d9419",
            "messageTitle": "Refactor(Task): Refactor into Task + Todo classes",
            "messageBody": "Made Task an abstract class to facilitate future additions.\nEach Task subclass now has an identifier which is prepended to\ntoString. The Todo class is a concrete implementation which\nbehaves similarly to the old Task class.\n",
            "tags": [
              "A-Inheritance"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 87,
                "deletions": 72
              }
            }
          },
          {
            "hash": "a7ecaa2d806f4a4a96cd19d851028b2c15680775",
            "messageTitle": "Feat(Task): Add Deadline and Event classes",
            "messageBody": "Added deadline and event classes which extend task.\nBoth classes have a new string parameter `time` to be set in the\nconstructor. This `time` string will be pretty printed in toString.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 36,
                "deletions": 0
              }
            }
          },
          {
            "hash": "9b9faa90c5dbad7f5ac0efbef80930b06a8eaa7f",
            "messageTitle": "Feat: Implement todo, event, deadline features (Level-4)",
            "messageBody": "Added the above commands, parsing is done using very simple string\noperations, but should suffice for our purposes.\n\nFactored out the function `parseAndRun` from the `run` function in\nDuke. This function should be further refactored in future updates.\n\nFixes: fixed minor string formatting issues in the event/deadline\nclasses. Also made the `addItem` message more verbose.\n",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 46,
                "deletions": 14
              }
            }
          },
          {
            "hash": "5e4c1ad1598bbd335a820231278bd5b3ac8ab02f",
            "messageTitle": "Test: Add automated text UI testing",
            "messageBody": "Added input+expected files, and modified run test script to compile\nall .java files in the source folder.\n\nTodo: use a proper snapshot test utility. Manually testing like this\nis painful.\n",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 14,
                "deletions": 0
              },
              "sh": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "7c35b98d3570b4d5e1e776e0a1359a648d85e23c",
            "messageTitle": "Feat: added DukeException class",
            "messageBody": "Added the custom exception class, with the nested enum of error\ncodes. Enum is great for this use case.\n\nTodo: actually use this exception in Duke.java\n",
            "tags": [
              "A-Exceptions"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 17,
                "deletions": 0
              }
            }
          },
          {
            "hash": "421b96338969ee45d1eb8b1baeddc15220557f3c",
            "messageTitle": "Feat: Add error handling (Level-5)",
            "messageBody": "Duke now uses DukeExceptions to handle errors. Each exception\nwill have a default message. In Duke.run, we catch these\nexceptions, print the message, and resume normal functions.\n\nAlso updated the snapshot tests since the error messages changed.\n\nTODO: the code is getting very unwieldy. Really need to refactor\nsoon.\n",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 14,
                "deletions": 14
              },
              "java": {
                "insertions": 33,
                "deletions": 25
              },
              "sh": {
                "insertions": 0,
                "deletions": 1
              }
            }
          },
          {
            "hash": "0cbc9af67bd1ca7923d7772477655d4041c75306",
            "messageTitle": "Feat: Add delete feature (Level-6)",
            "messageBody": "Added a delete feature. Implemenation is trivial since we are\nalready using an ArrayList, so a new function was added to\ninvoke the list\u0027s remove method.\n",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 11,
                "deletions": 0
              }
            }
          },
          {
            "hash": "15a036df9f00d00a9bf1c8f15dc9d26c02d93942",
            "messageTitle": "Test: Update text ui tests to last commit",
            "messageBody": "UI tests did not include the delete feature. Added a few lines\nto test for this.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-18",
        "commitResults": [
          {
            "hash": "2c65c50f368c3728dd7a83216e2aaeb1117bfdbe",
            "messageTitle": "Refactor: Big refactoring of project",
            "messageBody": "1. Created a TaskList class to manage task list related operations.\nMoved the `markItem` and `deleteItem` methods from Duke there.\n\n2. Created the Command enum and CommandExecutable functional\ninterface. each command will have a `match` and `dispatch` method\nto respectively handle matching and executing the command.\nThere are many other nontrivial details that will be elaborated\non in the docs (coming soon).\n\n3. Created the parser class to handle parsing/matching of the\ninput strings from the scanner and the commands.\n\n4. Moved small misc functions out to Util class. These functions deal\nmainly with reusable printing operations. Will change this to a full\nblown UI class in the future.\n",
            "tags": [
              "A-Enums"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 193,
                "deletions": 90
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-19",
        "commitResults": [
          {
            "hash": "0fc4959562a3cdeaf61a7f85dba7a0fe6d7a3f97",
            "messageTitle": "Refactor(Command): Use optionals in matcher",
            "messageBody": "Previously matcher returned `null` for failed matches as a\npseudo-maybe (haskell maybe) value. Replaced this with an\nactual optional value.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 10,
                "deletions": 7
              }
            }
          },
          {
            "hash": "f92040bad75cf292f42e780ab43ba2ee3ccd5de5",
            "messageTitle": "Fix(Task): Remove unicode ticks and crosses",
            "messageBody": "Task was using unicode characters for printing that misbehaved\nsometimes (especially if the locale was changed). Replaced this with\nthe classic `[ ]` for \u0027unchecked\u0027 and `[X]` for \u0027checked\u0027 statuses.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 1
              },
              "bat": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "joeychensmart": {
      "java": 307,
      "md": 0,
      "fxml": 0,
      "sh": 1,
      "bat": 1,
      "gradle": 0,
      "txt": 16
    }
  },
  "authorContributionVariance": {
    "joeychensmart": 34017.81
  },
  "authorDisplayNameMap": {
    "joeychensmart": "JOEY..E\u0027EN"
  }
}
