[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 18,
      "-": 44
    }
  },
  {
    "path": "src/main/java/duke/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private DateTime(LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Parses DateTime input and returns a new DateTime object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param input DateTime entered by user to create task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return New DateTime object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If DateTime format is invalid."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static DateTime parseFromString(String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] datetime \u003d input.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        LocalTime time \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            date \u003d LocalDate.parse(datetime[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            if (datetime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HH[:]mm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                time \u003d LocalTime.parse(datetime[1], dtf);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"DateTime format is invalid.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new DateTime(date, time);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 54
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * A personal assistant chat bot to help users keep track of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final UI ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Duke chat bot with the default filepath."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this(Paths.get(\"data\", \"duke.txt\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Duke chat bot with a custom filepath."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param filePath File path where Duke should read from and save to."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.ui \u003d new UI();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Populates the task list with the data stored in local storage if the"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * data is accessible."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return True if data successfully populated. False otherwise."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean loadedFromStorage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            storage.loadFromStorage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            taskList.loadDataFromStorage(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Returns the response given by Duke to a command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param input Argument supplied for command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return Response by Duke to command."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert input !\u003d null : \"Input cannot be null\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            command.execute(storage, taskList, ui);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return ui.getNextResponse();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return \"Error: Task could not be saved.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 71,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Custom exception class for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Throws a new DukeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param message Message to be displayed in exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        super(\"Action failed: \" + message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 16
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.concurrent.CompletableFuture;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    // Image retrieved from https://www.pngfind.com/mpng/hwwTTi_free-png-download-lego-batman-movie-clipart-png/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    // Image retrieved from https://www.pngfind.com/mpng/TRwRibh_alfred-lego-batman-movie-lego-batman-alfred-png/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Initializes the user interface and displays the welcome message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                DialogBox.getDukeDialog(UI.greet(), dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (!duke.loadedFromStorage()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    DialogBox.getDukeDialog(\"Unfortunately, I was unable to load from storage\", dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert input !\u003d null : \"User input cannot be null\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert response !\u003d null : \"User response cannot be null\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert userImage !\u003d null : \"User image in MainWindow cannot be null\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert dukeImage !\u003d null : \"Duke image in MainWindow cannot be null\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (response.equals(\"Goodbye! The application will close shortly...\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            CompletableFuture\u003cVoid\u003e cf \u003d CompletableFuture.runAsync(() -\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    Thread.sleep(1500);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            cf.thenRun(Platform::exit).thenRun(() -\u003e System.exit(0));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 84
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.DateCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates behavior for parsing commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Returns a Command object based on the input keyed in to Duke by"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param fullCommand the command keyed in to Duke by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return Command object of the required type."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert fullCommand !\u003d null : \"Command entered cannot be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] inputList \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String argument \u003d inputList.length \u003e 1 ? inputList[1] : \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        CommandType commandType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            commandType \u003d CommandType.valueOf(inputList[0].toUpperCase());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            commandType \u003d CommandType.INVALID;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case DATE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new DateCommand(argument);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new DoneCommand(Integer.parseInt(inputList[1]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(inputList[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new ToDoCommand(argument);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new EventCommand(argument);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new DeadlineCommand(argument);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new FindCommand(argument);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case INVALID: default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 67
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates behaviour for all storage related actions."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the storage class pointed towards the desired filepath."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param filePath File path that storage actions should be performed on."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert filePath !\u003d null : \"Storage filepath cannot be null\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Storage class that is pointed at the desired"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * filepath. The required folders and files are created if they do not exist."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If there are issues with creating, reading or writing to storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void loadFromStorage() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            // create data directory if it does not exist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            if (!Files.exists(filePath.getParent())) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                Files.createDirectories(filePath.getParent());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            // create file if it does not exist"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                Files.createFile(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"File System Error\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Appends a new line to the text file that the instance of the Storage class"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * is pointing to."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param line Line to be added to the text file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If there are issues with writing to storage."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void writeLineToStorage(String line) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert line !\u003d null : \"Line to add to storage cannot be null\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath.toString(), true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fileWriter.write(line + System.lineSeparator());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Task could not be saved.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Deletes a line from form the text file that the instance of the Storage"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * class is pointing to."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param lineToDelete Line to be deleted from the text file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If there are issues with deleting the line from storage."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void deleteLineFromStorage(String lineToDelete) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert lineToDelete !\u003d null : \"Line to delete from storage cannot be null\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            FileReader reader \u003d new FileReader(filePath.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            StringBuilder fileData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                if (!line.equals(lineToDelete)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    fileData.append(line);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    fileData.append(System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath.toString(), false);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fileWriter.write(fileData.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Task could not be deleted\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Replaces a line in the text file that the instance of the Storage class is"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * pointing to with another line."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param oldLine Line to be replaced."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param newLine Line that will be used to replace."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If there are issues with writing to storage."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void editLineInStorage(String oldLine, String newLine) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert oldLine !\u003d null : \"Line to be replaced cannot be null\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert newLine !\u003d null : \"Line that will be used to replace cannot be null\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            FileReader reader \u003d new FileReader(filePath.toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            StringBuilder oldFileData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                oldFileData.append(line);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                oldFileData.append(System.lineSeparator());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            oldLine \u003d Pattern.quote(oldLine);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            String newData \u003d oldFileData.toString().replaceFirst(oldLine, newLine);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath.toString(), false);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fileWriter.write(newData);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Task could not be modified\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 132
    }
  },
  {
    "path": "src/main/java/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates behaviour for all UI related actions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private String nextResponse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the UI class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Greets the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static String greet() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return \"Hi I\u0027m Duke! How can I help you today?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Stores the next response that needs to be displayed in GUI."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param message Message to be printed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void printToConsole(String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert message !\u003d null : \"Message to be printed cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.nextResponse \u003d message;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Returns the next response that needs to be displayed in GUI."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return Response to be displayed in GUI."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String getNextResponse() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return nextResponse;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 41
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the Bye command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Bye command class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Displays \"Goodbye! The application will close shortly...\" on the GUI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that is used by the instance of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(\"Goodbye! The application will close shortly...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 34
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Abstract class that is inherited by all command classes."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public abstract void execute(Storage storage, TaskList taskList, UI ui) throws DukeException, IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 15
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Enumerates the different types of command supported"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * by the program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Unsupported commands are marked invalid."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    DATE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    INVALID,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the Date command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Date command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Argument passed in by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DateCommand(String argument) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Prints a date filtered version of the task list to console."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that needs to be filtered by date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the argument for filtering the task list by date is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.taskListToDateFilteredString(argument));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the Deadline command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Deadline command task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Argument passed in by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DeadlineCommand(String argument) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new Deadline task, updates storage and prints the action to console."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that the task needs to be added to."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the arguments for creating a new Deadline task are invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Deadline newDeadline \u003d Deadline.createNewDeadline(argument);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.writeLineToStorage(newDeadline.generateStorageString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.addTaskToList(newDeadline));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the Delete command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final int argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Delete command task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Task ID of the task that needs to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DeleteCommand(int argument) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Deletes a task, updates storage and prints the action to console."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list with the task that needs to be deleted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the argument for deleting a task is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.deleteTask(argument, storage));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the Done command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final int argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Done command task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Task ID of the task that needs to be marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DoneCommand(int argument) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Marks the task as done, updates storage and prints the action to console."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list with the task that needs to be marked as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the argument for marking a task as done is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.markTaskAsDone(argument, storage));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 40
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the Event command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Event command task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Argument passed in by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public EventCommand(String argument) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new Event task, updates storage and prints the action to console."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that the task needs to be added to."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the arguments for creating a new Event task are invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Event newEvent \u003d Event.createNewEvent(argument);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.writeLineToStorage(newEvent.generateStorageString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.addTaskToList(newEvent));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 43
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the Find command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Find command class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Argument passed in by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public FindCommand(String argument) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Filters the task list by a certain keyword and prints to console."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that needs to be filtered."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.taskListToKeywordFilteredString(argument));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 38
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the Help command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Help command class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Displays the different commands available and their syntax on the GUI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that is used by the instance of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(\"Hi there! The following commands are available\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"todo {task name} - Create a new ToDo task\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"event {event name} /at {event date time} - Create a new Event task\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"deadline {deadline name} /by {deadline date time} - Create a new Deadline task\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"done {task ID} - Mark a task as done\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"delete {task ID} - Delete a task\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"find {keyword/task type/task status} - Filter tasks by a keyword\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"date {date} - Filter tasks that are due on a certain date\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"help - View help\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                + \"bye - Leave app\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 43
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to invalid commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Invalid command class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Throws a DukeException stating that the command entered is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that the operation was supposed to be done on."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException Exception stating that an invalid command is used is thrown."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        throw new DukeException(\"Invalid Command.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 36
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the List command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the List command class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Prints the task list to console."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that will be printed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.convertTaskListToString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to the ToDo command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new ToDo command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Argument keyed in by user in the ToDo command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public ToDoCommand(String argument) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new ToDo task, updates storage and prints the action to console."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object pointing to the file path where the data is stored."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskList Task list that the task needs to be added to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param ui UI object for the instance of Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the argument for creating a new ToDo task is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage cannot be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert taskList !\u003d null : \"Task list cannot be null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ToDo newTodo \u003d ToDo.createNewToDo(argument);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.writeLineToStorage(newTodo.generateStorageString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.addTaskToList(newTodo));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to Deadline tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final LocalDate deadlineDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final LocalTime deadlineTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String originalArguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new Deadline task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskName Name of the deadline task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param originalArguments Original arguments passed in by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param deadlineDate Date that the task is due."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param deadlineTime Time that the task is due."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Deadline(String taskName, String originalArguments, LocalDate deadlineDate, LocalTime deadlineTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.originalArguments \u003d originalArguments;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Deadline class if the argument provided is valid."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Argument entered by user to create Deadline class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return New instance of the Deadline class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If any part of the input argument is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static Deadline createNewDeadline(String argument) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert argument !\u003d null : \"Task argument cannot be null\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] deadlineArguments \u003d argument.split(\" /by \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (deadlineArguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Invalid arguments for a new deadline.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String deadlineName \u003d deadlineArguments[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (deadlineName.isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Deadline name cannot be blank!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String deadlineDateTime \u003d deadlineArguments[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (deadlineDateTime.isBlank()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Deadline time cannot be blank!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        DateTime dateTime \u003d DateTime.parseFromString(deadlineDateTime);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new Deadline(deadlineName, argument, dateTime.getDate(), dateTime.getTime());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private String printDateTime() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String output \u003d deadlineDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (deadlineTime !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            output +\u003d \", \" + deadlineTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean isOnSameDay(LocalDate localDate) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert localDate !\u003d null : \"Local date argument cannot be null\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return localDate.isEqual(this.deadlineDate);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Generates a single line string that will be saved in storage."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return String to be saved in storage."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String generateStorageString() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"DEADLINE | %s | %s\", isDone ? \"TRUE\" : \"FALSE\", originalArguments);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), printDateTime());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 96
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to Event tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final LocalDate startDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final LocalTime startTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String originalArguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Event(String taskName, String originalArguments, LocalDate startDate, LocalTime startTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.originalArguments \u003d originalArguments;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the Event class if the argument provided is valid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Argument entered by user to create Event class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return New instance of the Event class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If any part of the input argument is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static Event createNewEvent(String argument) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert argument !\u003d null : \"Task argument cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] eventArguments \u003d argument.split(\" /at \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (eventArguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Invalid arguments for a new event.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String eventName \u003d eventArguments[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (eventName.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Event name cannot be blank!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String startDateTime \u003d eventArguments[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (startDateTime.isBlank()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Event time cannot be blank!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        DateTime dateTime \u003d DateTime.parseFromString(startDateTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new Event(eventName, argument, dateTime.getDate(), dateTime.getTime());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private String printDateTime() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String output \u003d startDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (startTime !\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            output +\u003d \", \" + startTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Generates a single line string that will be saved in storage."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return String to be saved in storage."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String generateStorageString() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"EVENT | %s | %s\", isDone ? \"TRUE\" : \"FALSE\", originalArguments);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean isOnSameDay(LocalDate localDate) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert localDate !\u003d null : \"Local date argument cannot be null\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return localDate.isEqual(this.startDate);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), printDateTime());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 89
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates information that are shared by all tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    final String taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    Task(String taskName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void competeTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean isOnSameDay(LocalDate localDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public abstract String generateStorageString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return \"[\\u2713] \" + taskName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return \"[\\u2718] \" + taskName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 43
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates behavior and data for the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String convertTaskListToString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return convertTaskListToString(this.tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Converts a task list to a numbered list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param tasks Task list to be converted to string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return Numbered string representation of task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private String convertTaskListToString(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return \"You have no tasks!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            sb.append((i + 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            sb.append(\".\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            sb.append(tasks.get(i));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        // remove last newline character"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        sb.deleteCharAt(sb.length() - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Marks a task in the list as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskID ID of the task that needs to be marked as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object that needs to be updated once the task is marked as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return String to be displayed in user interface that confirms the action."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the task ID supplied is invalid."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String markTaskAsDone(int taskID, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (taskID \u003c 1 || taskID \u003e tasks.size()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Task ID is invalid!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Task task \u003d tasks.get(taskID - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String oldTaskString \u003d task.generateStorageString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        task.competeTask();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String newTaskString \u003d task.generateStorageString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.editLineInStorage(oldTaskString, newTaskString);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"Nice! I\u0027ve marked this task as done.\\n%s\", task.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Deletes a task in the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param taskID ID of the task that needs to be deleted."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param storage Storage object that needs to be updated once the task is deleted."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return String to be displayed in user interface that confirms the action."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the task ID supplied is invalid."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String deleteTask(int taskID, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (taskID \u003c 1 || taskID \u003e tasks.size()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Task ID is invalid!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Task task \u003d tasks.get(taskID - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.deleteLineFromStorage(task.generateStorageString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        tasks.remove(taskID - 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"Nice! I\u0027ve deleted this task.\\n%s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                task.toString(), tasks.size());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return String to be displayed in the user interface that confirms the action."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String addTaskToList(Task task) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert task !\u003d null : \"Task cannot be null\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task: \\n%s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                task.toString(), tasks.size());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Converts a task list to a numbered list filtered by date."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param dateString String keyed in by the user as an argument."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return String with numbered list representation of the filtered task list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException if the DateTime format is invalid."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String taskListToDateFilteredString(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert dateString !\u003d null : \"Date string cannot be null\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"DateTime format is invalid.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        List\u003cTask\u003e temp \u003d tasks.stream()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                .filter(task -\u003e task.isOnSameDay(date))"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return convertTaskListToString(temp);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Converts a task list to a numbered list filtered by a keyword."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param keyword String keyed in by the user as an argument."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return String with numbered list representation of the filtered task list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String taskListToKeywordFilteredString(String keyword) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert keyword !\u003d null : \"Keyword cannot be null\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Predicate\u003c? super Task\u003e filterFunction;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        switch (keyword.toUpperCase()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case \"TYPE\u003dTODO\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            filterFunction \u003d task -\u003e task.toString().contains(\"T\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case \"TYPE\u003dEVENT\":"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            filterFunction \u003d task -\u003e task.toString().contains(\"E\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case \"TYPE\u003dDEADLINE\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            filterFunction \u003d task -\u003e task.toString().contains(\"D\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case \"STATUS\u003dDONE\":"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            filterFunction \u003d task -\u003e task.isDone();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case \"STATUS\u003dUNDONE\":"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            filterFunction \u003d task -\u003e !task.isDone();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            filterFunction \u003d task -\u003e task.getTaskName().contains(keyword);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        List\u003cTask\u003e temp \u003d tasks.stream()"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                .filter(filterFunction)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return convertTaskListToString(temp);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Populates the task list based on a text file found in a given filepath."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param filePath Filepath that the text file with the data is found."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If the tasks in the text file are stored incorrectly or"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * if there are errors reading from the file."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void loadDataFromStorage(Path filePath) throws DukeException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert filePath !\u003d null : \"Filepath object cannot be null\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            FileReader reader \u003d new FileReader(filePath.toString());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                String[] entry \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                if (entry.length !\u003d 3) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    throw new DukeException(\"One or more entries in storage have an invalid number of arguments\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                String taskType \u003d entry[0];"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                String status \u003d entry[1].toUpperCase();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                if (!status.equals(\"TRUE\") \u0026\u0026 !status.equals(\"FALSE\")) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    throw new DukeException(\"One or more task statuses are not stored correctly\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                boolean taskIsDone \u003d Boolean.parseBoolean(entry[1]);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                String taskArgument \u003d entry[2];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                case \"TODO\":"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    newTask \u003d ToDo.createNewToDo(taskArgument);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                case \"EVENT\":"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    newTask \u003d Event.createNewEvent(taskArgument);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                case \"DEADLINE\":"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    newTask \u003d Deadline.createNewDeadline(taskArgument);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    throw new DukeException(\"One or more task types are not stored correctly\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                if (taskIsDone) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    newTask.competeTask();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Could not read from storage\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 244
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " * Encapsulates data and methods specific to ToDo tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private ToDo(String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Creates a new instance of the class if the input is valid."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @param argument Argument keyed in by the user when creating the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return New instance of the ToDo class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @throws DukeException If task name is empty."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static ToDo createNewToDo(String argument) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assert argument !\u003d null : \"Task argument cannot be null\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (argument.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Task name cannot be empty!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new ToDo(argument);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * Generates a single line string that will be saved in storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     * @return String to be saved in storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String generateStorageString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"TODO | %s | %s\", isDone ? \"TRUE\" : \"FALSE\", taskName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 46
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter your command here.\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newToDo_emptyTaskName_exceptionThrown() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            ToDo.createNewToDo(\"\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"Task name cannot be empty!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newDeadline_invalidArguments_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Deadline.createNewDeadline(\"a b c\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"Invalid arguments for a new deadline.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newDeadline_blankName_exceptionThrown() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Deadline.createNewDeadline(\" /by 2020-12-12\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"Deadline name cannot be blank!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newDeadline_blankTime_exceptionThrown() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Deadline.createNewDeadline(\"name /by  \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"Deadline time cannot be blank!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newDeadline_invalidDateTimeFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Deadline.createNewDeadline(\"name /by 2020-13-13\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"DateTime format is invalid.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newEvent_invalidArguments_exceptionThrown() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Event.createNewEvent(\"a b c\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"Invalid arguments for a new event.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newEvent_blankName_exceptionThrown() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Event.createNewEvent(\" /at 2020-12-12\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"Event name cannot be blank!\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newEvent_blankTime_exceptionThrown() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Event.createNewEvent(\"name /at  \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"Event time cannot be blank!\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void newEvent_invalidDateTimeFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Event.createNewEvent(\"name /at 2020-13-13\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String expected \u003d \"DateTime format is invalid.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        assertTrue(e.getMessage().contains(expected));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 103
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "todo todo test"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event  /at time"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at 2020-12-12 23:59"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at 2020-12-12"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at 2020-12-13 2359"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline  /by time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by 2020-12-12 23:59"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by 2020-12-13"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by 2020-12-12 2359"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "date 2020-12-12"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "done 999"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 999"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "find [E]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "find [D]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 36
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi "
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 3,
      "-": 31
    }
  }
]
