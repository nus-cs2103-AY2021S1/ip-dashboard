[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    // For javaFx"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 20,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        // todo set font in fxml instead"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        dialog.setStyle(\"-fx-font-family: monospace\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 60
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final DukeFileHandler fileHandler;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        fileHandler \u003d new DukeFileHandler(path);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Command.initialise();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            tasks \u003d new TaskList(fileHandler.readFile());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            if (!tasks.isNull()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                ui.displayList(tasks.getList(), \"Here are your current tasks:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void enteredInput(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            command.execute(tasks, ui, fileHandler);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            ui.displayThis(ex.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 52,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private static MainWindow window;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/dukeData.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            window \u003d fxmlLoader.getController();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            duke.showWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static MainWindow getWindow() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return window;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 42
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        duke.enteredInput(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void showsToDialog(String s) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                DialogBox.getDukeDialog(s, dukeImage));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Closes the window and exit the program."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void closeWindow() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 68
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.displayThis(\"List is cleared\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error clearing lists in storage\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Corresponds to commands the users wants to execute."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Uses polymorphism to execute the methods relevant to the Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param tasks       TaskList object which contains the updated list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param ui          The reference to ui, for updating the ui."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param fileHandler Contains methods to update the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @throws DukeException Throws DukeException which must be caught by the method."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static CommandType containsKeyword(String commandKeyword) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        if (contains(ClearCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.CLEAR;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else if (contains(DeadlineCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.DEADLINE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else if (contains(DeleteCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.DELETE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else if (contains(DoneCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.DONE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else if (contains(EventCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.EVENT;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else if (contains(ExitCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.EXIT;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else if (contains(FindCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.FIND;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else if (contains(ListCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.LIST;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else if (contains(TodoCommand.aliases, commandKeyword)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.TODO;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            Main.getWindow().showsToDialog(\"The keyword got is: \" + commandKeyword);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return CommandType.UNKNOWN;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private static boolean contains(List\u003cString\u003e aliases, String commandKeyword) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        for (String alias : aliases) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            if (alias.equals(commandKeyword)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static void initialise() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ClearCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ClearCommand.aliases.add(\"c\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ClearCommand.aliases.add(\"clear\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DeadlineCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DeadlineCommand.aliases.add(\"de\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DeadlineCommand.aliases.add(\"deadline\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DeleteCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DeleteCommand.aliases.add(\"d\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DeleteCommand.aliases.add(\"delete\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DoneCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DoneCommand.aliases.add(\"do\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        DoneCommand.aliases.add(\"done\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        EventCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        EventCommand.aliases.add(\"ev\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        EventCommand.aliases.add(\"event\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ExitCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ExitCommand.aliases.add(\"ex\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ExitCommand.aliases.add(\"bye\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        FindCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        FindCommand.aliases.add(\"f\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        FindCommand.aliases.add(\"find\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ListCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ListCommand.aliases.add(\"l\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ListCommand.aliases.add(\"list\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        TodoCommand.aliases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        TodoCommand.aliases.add(\"t\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        TodoCommand.aliases.add(\"todo\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 105
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    CLEAR,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    UNKNOWN"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            tasks.addTask(new Deadline(description, by));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error creating this deadline\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 36
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final int indexEntryToDelete;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DeleteCommand(int indexEntryToDelete) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.indexEntryToDelete \u003d indexEntryToDelete;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            ui.displayThis(\"OKay, I\u0027ve remove this task: \\n\" + tasks.delete(indexEntryToDelete)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                    + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"This task does not exist\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final int indexEntryDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DoneCommand(int indexEntryDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.indexEntryDone \u003d indexEntryDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            ui.displayThis(\"Nice! I\u0027ve marked this task as done: \\n\" + tasks.done(indexEntryDone));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"This task does not exist\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 32
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            tasks.addTask(new Event(description, at));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error creating this event\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            Main.getWindow().closeWindow();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error saving your file\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.displayThis(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        List\u003cTask\u003e temp \u003d tasks.tasksContainingKeywords(keyword);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        if (temp.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"No tasks found, please refine your search\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.displayList(temp, \"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        if (tasks.isNull()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"There\u0027s nothing in the list :-(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            ui.displayList(tasks.getList(), \"Here are your current tasks:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 23
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.DukeFileHandler;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected static List\u003cString\u003e aliases;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, DukeFileHandler fileHandler) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        tasks.addTask(new Task(description));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileHandler.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Error saving task to storage\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a type of task with a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param description the content of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param by          time in yyyy-mm-dd."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.by \u003d convertToLocalDate(by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates tasks which could have been completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param description the content of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param isDone      the status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param by          the deadline of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.by \u003d convertToLocalDate(by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return a custom task description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + convertToString(this.by) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns a fixed format in string to store the task to storage."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return D | 0 | return book | June 6th."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toCustomString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"D | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + by;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a type of task with timing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param description detail of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param at          time in yyyy-mm-dd."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.at \u003d convertToLocalDate(at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.at \u003d convertToLocalDate(at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return a custom event description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + convertToString(this.at) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns a fixed format in string to store the task to storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return E | 0 | return book | June 6th"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toCustomString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"E | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + at;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param description the content of the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Calls to get the status icon."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return tick or X symbols."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Changes the state of this task, isDone to true."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return the task after marking it as done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return a custom event description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns a fixed format in string to store the task to storage."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return T | 0 | return book."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String toCustomString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Gets the content of the tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return String the content of the tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns the converted date in LocalDate format."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param toBeConverted the string to be converted."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return the date in LocalDate format."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected LocalDate convertToLocalDate(String toBeConverted) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return LocalDate.parse(toBeConverted.trim());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Converts the local date to string."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param date a LocalDate instance."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return the date in string."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    protected String convertToString(LocalDate date) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyy\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 101
    }
  },
  {
    "path": "src/main/java/duke/utils/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a custom exception"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param msg The error encountered"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        super(\"OOPS! \" + msg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 14
    }
  },
  {
    "path": "src/main/java/duke/utils/DukeFileHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Class to handle the opening, writing and reading of file data.txt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DukeFileHandler {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final String path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public DukeFileHandler(String path) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assert !path.equals(\"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Reads the files from the file path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return a List of Tasks created from the file data.txt."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @throws FileNotFoundException if the file is not found, not created."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public List\u003cTask\u003e readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            Scanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            List\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                toDoList.add(createTask(scan.nextLine().split(\"\\\\|\")));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return toDoList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Input is of format TaskType | isDone | Detail | Date (can be null)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private Task createTask(String... inputArr) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assert inputArr.length \u003e 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        boolean isDone \u003d inputArr[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        switch (inputArr[0].trim()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new Task(inputArr[2].trim(), isDone);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new Deadline(inputArr[2].trim(), isDone, inputArr[3].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new Event(inputArr[2].trim(), isDone, inputArr[3].trim());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Writes the list to the file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param list the data to write to the file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @throws IOException if the file could not be found."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void writeToFile(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                content.append(task.toCustomString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileWriter.write(content.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 102
    }
  },
  {
    "path": "src/main/java/duke/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Handles all the commands from the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Converts the users input from string to Command type."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param input raw unprocessed string the user entered."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return Command which the user wanted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @throws DukeException if the command format is wrong."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String trimmed \u003d input.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        if (trimmed.equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"Please type a duke command\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String[] keywords \u003d findKeywords(input.trim());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        CommandType commandType \u003d Command.containsKeyword(keywords[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case CLEAR:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                return new DoneCommand(Integer.parseInt(keywords[1].trim()) - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                throw new DukeException(\"You can\u0027t do something not in the list?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(keywords[1].trim()) - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                int by \u003d input.indexOf(\" /by\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                return new DeadlineCommand(input.substring(9, by), input.substring(by + 5));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                throw new DukeException(\"Deadline format isn\u0027t correct\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                int at \u003d input.indexOf(\" /at\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                return new EventCommand(input.substring(6, at), input.substring(at + 5));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                throw new DukeException(\"Event format isn\u0027t correct\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            if (input.substring(5).trim().equals(\"\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                throw new DukeException(\"Todo what? \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            return new TodoCommand(input.substring(5).trim());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                throw new DukeException(\"Find format isn\u0027t correct\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        case UNKNOWN:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means :( \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Converts string into array of keywords."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Split the strings by the spacing."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param stringToConvert the string to be converted."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return array with commands."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private static String[] findKeywords(String stringToConvert) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return stringToConvert.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 98
    }
  },
  {
    "path": "src/main/java/duke/utils/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Maintains the tasks list for the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param task to add to the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        ui.displayThis(\"Got it. I\u0027ve added this task: \\n         \" + task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n    Now you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param entryDone index of the task to be marked."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return task that is done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task done(int entryDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.get(entryDone).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Clears the current list by removing every entry inside."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        list.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param entryDelete index of the task to delete."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return task that is deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Task delete(int entryDelete) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.remove(entryDelete);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns the number of elements inside the tasks list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return the number of tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assert list.size() \u003e 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns true if there is nothing inside the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return true if list is null."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public boolean isNull() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.size() \u003c\u003d 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Returns the tasks lists."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return the Lists which contains the tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Retuns a list of tasks which contains the keyword."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param keyword string the user wants to find."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @return List of tasks with the keyword."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @throws DukeException when the string does not contain the keyword."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public List\u003cTask\u003e tasksContainingKeywords(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        List\u003cTask\u003e containsKeywords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                containsKeywords.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        return list.stream().filter(x -\u003e x.getDescription().contains(keyword)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//        return containsKeywords;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 118
    }
  },
  {
    "path": "src/main/java/duke/utils/TextSplitter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//public class TextSplitter {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 8
    }
  },
  {
    "path": "src/main/java/duke/utils/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " * Handles the printing of output to the console"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Creates a instance of Ui class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Outputs to console with lines."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param msg string to output to console"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void displayThis(String msg) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayString(msg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Welcomes the user with a welcome message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param toDoList    the lists to display to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * @param customTitle the custom string to display before showing the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void displayList(List\u003cTask\u003e toDoList, String customTitle) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assert toDoList.size() \u003e 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        StringBuilder sBuilder \u003d new StringBuilder(customTitle).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        for (int i \u003d 0; i \u003c toDoList.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            sBuilder.append(i + 1).append(\". \").append(toDoList.get(i)).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayString(sBuilder.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     * Displays the welcome message when the user open the app."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        displayString(logo"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n\\nHello! I\u0027m duke.Duke, your Windows duke.task.Task Manager\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\nValid command:\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n- list\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n- done \u003cnum\u003e\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n- todo \u003ctask\u003e\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n- delete \u003cnum\u003e\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n- deadline \u003ctask\u003e /by \u003cyyyy-mm-dd\u003e\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n- event \u003ctask\u003e /at \u003cyyyy-mm-dd\u003e\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                + \"\\n- find \u003ckeyword\u003e\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private void displayString(String s) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assert Main.getWindow() !\u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Main.getWindow().showsToDialog(s);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 81
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" minHeight\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    \u003c!--    todo improve screen resizing --\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 25
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Deadline deadline \u003d new Deadline(\"Lunch with friends\", \"2020-02-23\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Deadline deadline2 \u003d new Deadline(\"Meeting with prof\", true, \"2019-05-23\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        deadline.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[D][\\u2713] Lunch with friends (by: Feb 23 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        deadline2.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[D][\\u2713] Meeting with prof (by: May 23 2019)\", deadline2.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[D][\\u2718] Lunch with friends (by: Feb 23 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[D][\\u2713] Meeting with prof (by: May 23 2019)\", deadline2.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void toCustomString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"D | 0 | Lunch with friends | 2020-02-23\", deadline.toCustomString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"D | 1 | Meeting with prof | 2019-05-23\", deadline2.toCustomString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 33
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Event event \u003d new Event(\"Lunch with friends\", \"2020-02-23\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Event event2 \u003d new Event(\"Meeting with prof\", true, \"2019-05-23\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[E][\\u2713] Lunch with friends (at: Feb 23 2020)\", event.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        event2.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[E][\\u2713] Meeting with prof (at: May 23 2019)\", event2.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[E][\\u2718] Lunch with friends (at: Feb 23 2020)\", event.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[E][\\u2713] Meeting with prof (at: May 23 2019)\", event2.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void toCustomString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"E | 0 | Lunch with friends | 2020-02-23\", event.toCustomString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"E | 1 | Meeting with prof | 2019-05-23\", event2.toCustomString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 32
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Task task \u003d new Task(\"Review this week\u0027s lecture\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    private final Task task2 \u003d new Task(\"Review Code\", true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[T][\\u2713] Review this week\u0027s lecture\", task.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        task2.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[T][\\u2713] Review Code\", task2.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[T][\\u2718] Review this week\u0027s lecture\", task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"[T][\\u2713] Review Code\", task2.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testToCustomString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"T | 0 | Review this week\u0027s lecture\", task.toCustomString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertEquals(\"T | 1 | Review Code\", task2.toCustomString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 34
    }
  },
  {
    "path": "src/test/java/duke/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testParseNoCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        // Test many spaces and enter is typed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Exception exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"           \\n\\n       \"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String expectedMessage \u003d \"Please type a duke command\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String actualMessage \u003d exception.getMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertTrue(actualMessage.contains(expectedMessage));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        // Test nothing is entered."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Exception exception1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String expectedMessage1 \u003d \"Please type a duke command\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String actualMessage1 \u003d exception1.getMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertTrue(actualMessage1.contains(expectedMessage1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        // Test no keyword is entered."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Exception exception2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"Test no forward slash\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String expectedMessage2 \u003d \"Please enter a valid command\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String actualMessage2 \u003d exception2.getMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertTrue(actualMessage2.contains(expectedMessage2));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        // Test no keyword and space is entered."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        Exception exception3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"TestNoSpaceIsTyped\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String expectedMessage3 \u003d \"Please enter a valid command\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        String actualMessage3 \u003d exception3.getMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "        assertTrue(actualMessage3.contains(expectedMessage3));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    public void testOneKeywordIsEntered(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 48
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 99"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "List"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "dElete 0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deletE 99"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "clear"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "done 999"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "DELete 99"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "todo reading books /by"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "todo deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline testDeadline /by 2020-03-18"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadliNe testDeadline 2 /at 2020-03-18"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "duke.task.Deadline testDeadline 3"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline testDeadline 4 /by 2020-03-18"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline /by 2020-03-18"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event testEvent /by 2020-03-18"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event testEvent2 /at 2020-03-18"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "EvenT testEvenet3"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "evEnt testEvent4 /by 2020-03-18"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event /by 2020-03-18"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event /by"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "deadline testing legit deadline /by 2020-03-18"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "event testing legit event /at 2020-03-18"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 47
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "REM -cp class path, specifies where to find the user class files"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "REM -d specify where to place generated class files"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "REM javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "pause"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peter-yeh"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "peter-yeh": 10,
      "-": 20
    }
  }
]
