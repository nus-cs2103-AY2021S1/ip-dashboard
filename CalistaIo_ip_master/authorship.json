[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 16,
      "-": 45
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "D | 1 | project | Dec 12 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "D | 0 | homework | Oct 10 2020 6.00pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "E | 0 | concert | Aug 19 2020"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 4
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the central backend component of the Duke application. This"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * component coordinates the roles of other components (i.e. storage, parser,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * user interface, task list) in executing a user command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private String userCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a Command object that has not received"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * any user command yet."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.userCommand \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Receives a user command from the main window."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param userCommand User command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void receiveUserCommand(String userCommand) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.userCommand \u003d userCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Indicates whether the Duke application should exit."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Boolean value indicating whether the Duke application should exit."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public boolean exit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommand.equals(\"bye\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Executes a user command. The Command object directs the user command to the parser"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * for parsing. It then proceeds to alert the task list, storage, and user interface to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * perform the appropriate actions based on the user command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param parser Parser of the Duke application."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param taskList Task list of the Duke application"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param storage Storage system of the Duke application."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui User interface of the Duke application."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the Command object to the main window."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException If an error occurs while accessing or creating the directory or file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * containing the tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidTaskArgumentException If an error occurs while parsing a command to add tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidDoneException If an error occurs while parsing a command to mark tasks as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidCommandException If the user command type is invalid."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidDeleteException If an error occurs while parsing a command to delete tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws DateException If an error occurs while parsing the dates of events or deadlines."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String executeUserCommand(Parser parser, TaskList taskList, Storage storage, Ui ui)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throws IOException, InvalidTaskArgumentException, InvalidDoneException, InvalidCommandException,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            InvalidDeleteException, InvalidFindException, DateException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e userCommandDetails \u003d parser.parseUserCommand(userCommand, taskList.getLength());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String userCommandType \u003d userCommandDetails.get(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        assert isValidCommand(userCommandType) : \"The user command is not a valid operation.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (userCommandType.equals(\"Show\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            response \u003d taskList.showList(ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (userCommandType.equals(\"Done\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            int taskPosition \u003d Integer.parseInt(userCommandDetails.get(1));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            response \u003d taskList.markDone(taskPosition, ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (userCommandType.equals(\"Add\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String taskType \u003d userCommandDetails.get(1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            assert isValidTaskType(taskType) : \"The task type should be a todo, deadline, or event.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (taskType.equals(\"ToDo\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                String todoDescription \u003d userCommandDetails.get(2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                ToDo todo \u003d new ToDo(todoDescription);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                response \u003d taskList.addTask(todo, ui);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (taskType.equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                String deadlineDescription \u003d userCommandDetails.get(2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                String deadlineDate \u003d userCommandDetails.get(3);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                Deadline deadline \u003d new Deadline(deadlineDescription, deadlineDate);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                response \u003d taskList.addTask(deadline, ui);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (taskType.equals(\"Event\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                String eventDescription \u003d userCommandDetails.get(2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                String eventDate \u003d userCommandDetails.get(3);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                Event event \u003d new Event(eventDescription, eventDate);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                response \u003d taskList.addTask(event, ui);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (userCommandType.equals(\"Find\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String keyword \u003d userCommandDetails.get(1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            response \u003d taskList.findTask(keyword, ui);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (userCommandType.equals(\"Delete\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            boolean isDeleteAll \u003d userCommandDetails.get(1).equals(\"All\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (isDeleteAll) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                response \u003d taskList.deleteAll(ui);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                ArrayList\u003cString\u003e deletedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                for (int i \u003d 1; i \u003c userCommandDetails.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    deletedTasks.add(userCommandDetails.get(i));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                response \u003d taskList.deleteTasks(deletedTasks, ui);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isValidCommand(String userCommandType) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommandType.equals(\"Show\") || userCommandType.equals(\"Done\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                || userCommandType.equals(\"Add\") || userCommandType.equals(\"Find\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                || userCommandType.equals(\"Delete\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isValidTaskType(String taskType) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return taskType.equals(\"ToDo\") || taskType.equals(\"Deadline\") || taskType.equals(\"Event\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 121
    }
  },
  {
    "path": "src/main/java/DateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Thrown to indicate that the date of a deadline of event does not have the"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * appropriate format."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class DateException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a DateException with the specified detail message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param message Detail message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public DateException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents a deadline. A deadline is a task that has a description of the"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * activity to be completed, and a date or time indicating when it is due."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a Deadline with the specified description and date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param description Description of the Deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param by Date that the Deadline is due."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a representation of the Deadline that will be saved to the hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return String representation of the Deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"D | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 32
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the backend of the Duke application. The backend consists of the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * storage, task list, parser, and user interface components which are coordinated"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * by the command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Command command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a Duke application with the specified location for"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * containing tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param filePath Path of the file that contains the tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException If an error occurs while accessing or creating the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * directory or file containing the tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        command \u003d new Command();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a Duke application with the default location for"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * containing tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException If an error occurs while accessing or creating the"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * directory or file containing the tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Duke() throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Runs the Duke application."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException If an error occurs while accessing or creating the"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * directory or file containing the tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        command.receiveUserCommand(ui.readCommand());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        while (!command.exit()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                command.executeUserCommand(parser, tasks, storage, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } catch (InvalidTaskArgumentException | InvalidDoneException | InvalidCommandException"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    | InvalidDeleteException | InvalidFindException | DateException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                command.receiveUserCommand(ui.readCommand());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Provides the entry point to the Duke application."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param args Command-line arguments."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a response to the main window based on the user command received."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param userCommand User command received by the Duke application."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response to the main window."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException If an error occurs while accessing or creating the"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * directory or file containing the tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getResponse(String userCommand) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            command.receiveUserCommand(userCommand);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return command.executeUserCommand(parser, tasks, storage, ui);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (InvalidTaskArgumentException | InvalidDoneException | InvalidCommandException"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                | InvalidDeleteException | InvalidFindException | DateException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 90,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Thrown to indicate that the directory or file containing the tasks cannot be found."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents an event. An event is a task that has a description of the activity,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * and a date or time indicating when it occurs."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs an Event with the specified description and date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param description Description of the Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param at Date at which the Event occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a representation of the Event that will be saved in the hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"E | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 32
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Thrown to indicate that the user command type is invalid."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a InvalidCommandException with the specified detail message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param message Detail message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 14
    }
  },
  {
    "path": "src/main/java/InvalidDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Thrown to indicate that a command to delete tasks is invalid. The command is invalid"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * if the tasks to be deleted are not specified, or a task to be deleted is not specified"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * by a number, or the number specified does not represent an existing task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidDeleteException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a InvalidDeleteException with the specified detail message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param message Detail message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidDeleteException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 17
    }
  },
  {
    "path": "src/main/java/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Thrown to indicate that a command to mark tasks as done is invalid. The command is invalid"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * if the tasks to be marked as done are not specified, or a task to be marked as done is not"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * specified by a number, or the number specified does not represent an existing task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidDoneException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a InvalidDoneException with the specified detail message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param message Detail message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidDoneException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 16
    }
  },
  {
    "path": "src/main/java/InvalidFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Thrown to indicate that a command to find tasks is invalid. The command is invalid"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * if no keywords are specified."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidFindException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a InvalidFindException with the specified detail message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param message Detail message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidFindException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 15
    }
  },
  {
    "path": "src/main/java/InvalidTaskArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Thrown to indicate that a command to add tasks is invalid. The command is invalid"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * if a ToDo is lacking a description, or a Deadline is lacking a description or date,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * or an Event is lacking a description or date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidTaskArgumentException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs an InvalidTaskArgumentException with the specified detail message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param message Detail message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidTaskArgumentException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 16
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 8
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/900px-Duke-Guitar.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke_jetsurf_orig.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 53
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the parser of the Duke application. The parser is responsible for"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * processing the user command so that it can be executed by the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Parses the date or time of a deadline or event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param dateTime the date or time of a deadline or event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return String representation of the date or time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws DateException If an error occurs while parsing the date or time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public static String parseDateTime(String dateTime) throws DateException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return processDateTime(dateTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (java.time.format.DateTimeParseException | java.text.ParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new DateException(\"Sorry! I don\u0027t understand the date/time. Please specify the date/time \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"in YYYY-MM-DD or YYYY-MM-DD HHMM format.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private static String processDateTime(String dateTime) throws"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            java.time.format.DateTimeParseException, java.text.ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String[] dateTimes \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean hasOnlyDate \u003d dateTimes.length \u003d\u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(dateTimes[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String processedDate \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (hasOnlyDate) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return processedDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        int time \u003d Integer.parseInt(dateTimes[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String processedTime \u003d processTime(time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return processedDate + \" \" + processedTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private static String processTime(int time) throws java.text.ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        int militaryTime \u003d time;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"hhmm\").parse(String.format(\"%04d\", militaryTime));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"hh:mm a\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Parses the user command into a format that can be understood by the command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * component of the Duke application."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param userCommand User command received by the Parser."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param taskListSize Current size of the task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return List of user command details."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidDoneException If an error occurs while parsing a command to mark"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * tasks as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidTaskArgumentException If an error occurs while parsing a command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * to add tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidDeleteException If an error occurs while parsing a command to"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * delete tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidCommandException If the user command type is invalid."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws DateException If an error occurs while parsing the dates of events or deadlines."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public ArrayList\u003cString\u003e parseUserCommand(String userCommand, int taskListSize)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throws InvalidDoneException, InvalidTaskArgumentException, InvalidDeleteException,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            InvalidCommandException, InvalidFindException, DateException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e userCommandDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isListCommand(userCommand)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return addListCommand(userCommandDetails);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (isDoneCommand(userCommand)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return addDoneCommand(userCommandDetails, userCommand, taskListSize);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (isTodoCommand(userCommand)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return addTodoCommand(userCommandDetails, userCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (isDeadlineCommand(userCommand)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return addDeadlineCommand(userCommandDetails, userCommand);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (isEventCommand(userCommand)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return addEventCommand(userCommandDetails, userCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (isDeleteCommand(userCommand)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return addDeleteCommand(userCommandDetails, userCommand, taskListSize);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (isFindCommand(userCommand)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return addFindCommand(userCommandDetails, userCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidCommandException(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isNumeric(String taskNumber) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isListCommand(String userCommand) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommand.equals(\"list\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cString\u003e addListCommand(ArrayList\u003cString\u003e userCommandDetails) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Show\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommandDetails;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isDoneCommand(String userCommand) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return (userCommand.length() \u003e\u003d 4) \u0026\u0026 (userCommand.substring(0, 4).equals(\"done\"));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cString\u003e addDoneCommand(ArrayList\u003cString\u003e userCommandDetails,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "           String userCommand, int taskListSize) throws InvalidDoneException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isTaskNumberNotSpecified \u003d userCommand.length() \u003c\u003d 5;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isTaskNumberNotSpecified) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidDoneException(\"\\u2639\" + \" OOPS!!! The task to be marked as done is not \""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"specified.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isTaskNumberInvalidInt \u003d !isNumeric(userCommand.substring(5));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isTaskNumberInvalidInt) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidDoneException(\"\\u2639\" + \" OOPS!!! The task to be marked as done is not \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"specified by a valid number.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(userCommand.substring(5)) - 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isTaskNumberOutOfBounds \u003d (taskNumber \u003c 0) || (taskNumber \u003e\u003d taskListSize);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isTaskNumberOutOfBounds) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidDoneException(\"\\u2639\" + \" OOPS!!! The number specified does not represent \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"a valid task.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Done\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(Integer.toString(taskNumber));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommandDetails;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isTodoCommand(String userCommand) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return (userCommand.length() \u003e\u003d 4) \u0026\u0026 (userCommand.substring(0, 4).equals(\"todo\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cString\u003e addTodoCommand(ArrayList\u003cString\u003e userCommandDetails,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "           String userCommand) throws InvalidTaskArgumentException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isTodoDescriptionMissing \u003d userCommand.length() \u003c\u003d 5;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isTodoDescriptionMissing) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639\" + \" OOPS!!! The description of a todo cannot \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"be empty.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Add\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"ToDo\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(userCommand.substring(5));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommandDetails;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isDeadlineCommand(String userCommand) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return (userCommand.length() \u003e\u003d 8) \u0026\u0026 (userCommand.substring(0, 8).equals(\"deadline\"));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cString\u003e addDeadlineCommand(ArrayList\u003cString\u003e userCommandDetails,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "           String userCommand) throws InvalidTaskArgumentException, DateException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isDeadlineDescriptionDateMissing \u003d (userCommand.length() \u003c\u003d 9)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                || (userCommand.substring(9).split(\" /by \").length \u003c 2);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isDeadlineDescriptionDateMissing) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639\" + \" OOPS!!! The deadline is lacking a \""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"description/date.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Add\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Deadline\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String[] deadlineDetails \u003d userCommand.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String deadlineDescription \u003d deadlineDetails[0];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String deadlineDate \u003d parseDateTime(deadlineDetails[1]);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(deadlineDescription);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(deadlineDate);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommandDetails;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isEventCommand(String userCommand) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return (userCommand.length() \u003e\u003d 5) \u0026\u0026 (userCommand.substring(0, 5).equals(\"event\"));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cString\u003e addEventCommand(ArrayList\u003cString\u003e userCommandDetails,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "           String userCommand) throws InvalidTaskArgumentException, DateException {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isEventDescriptionDateMissing \u003d (userCommand.length() \u003c\u003d 6)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                || (userCommand.substring(6).split(\" /at \").length \u003c 2);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isEventDescriptionDateMissing) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639\" + \" OOPS!!! The event is lacking a \""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"description/date.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Add\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Event\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String[] eventDetails \u003d userCommand.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String eventDescription \u003d eventDetails[0];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String eventDate \u003d parseDateTime(eventDetails[1]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(eventDescription);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(eventDate);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommandDetails;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isDeleteCommand(String userCommand) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return (userCommand.length() \u003e\u003d 6) \u0026\u0026 (userCommand.substring(0, 6).equals(\"delete\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cString\u003e addDeleteCommand(ArrayList\u003cString\u003e userCommandDetails,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "           String userCommand, int taskListSize) throws InvalidDeleteException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isTaskNumberNotSpecified \u003d userCommand.length() \u003c\u003d 7;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isTaskNumberNotSpecified) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidDeleteException(\"\\u2639\" + \"OOPS!!! The tasks to be deleted are not \""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"specified.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Delete\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isDeleteAll \u003d userCommand.substring(7).equals(\"all\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (isDeleteAll) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            userCommandDetails.add(\"All\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String[] deletedTaskPositions \u003d userCommand.substring(7).split(\" \");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            for (int i \u003d 0; i \u003c deletedTaskPositions.length; i++) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (!isNumeric(deletedTaskPositions[i])) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    throw new InvalidDeleteException(\"\\u2639\" + \" OOPS!!! There is a task to be deleted \""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                            + \" that is not specified by a valid number.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                int deletedTaskNumber \u003d Integer.parseInt(deletedTaskPositions[i]) - 1;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                boolean isTaskNumberOutOfBounds \u003d (deletedTaskNumber \u003c 0) || (deletedTaskNumber \u003e\u003d taskListSize);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (isTaskNumberOutOfBounds) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    throw new InvalidDeleteException(\"\\u2639\" + \" OOPS!!! There is a number specified \""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                            + \"that does not represent a valid task.\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                userCommandDetails.add(Integer.toString(deletedTaskNumber));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommandDetails;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private boolean isFindCommand(String userCommand) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return (userCommand.length() \u003e\u003d 4) \u0026\u0026 (userCommand.substring(0, 4).equals(\"find\"));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cString\u003e addFindCommand(ArrayList\u003cString\u003e userCommandDetails, String userCommand)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throws InvalidFindException {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(\"Find\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (userCommand.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidFindException(\"\\u2639\" + \" OOPS!!! There are no keywords specified.\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String keyword \u003d userCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        userCommandDetails.add(keyword);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return userCommandDetails;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 241
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the storage system of the Duke application. The storage system is responsible"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * for loading tasks from the hard disk whenever the Duke application starts up, and for"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * saving tasks in the hard disk whenever the task list changes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a Storage object with the specified location for containing the tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param filepath Path of file containing the tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Loads tasks from the hard disk whenever the Duke application starts up."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return List of String objects representing the tasks in the hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException If an error occurs while accessing or creating the directory"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * or file containing the tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws DukeException If the directory or file containing the tasks does not"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * exist yet."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isDirectoryAndFileFound \u003d createFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (!isDirectoryAndFileFound) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            tasks.add(scanner.nextLine());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Creates the directory or file containing the tasks, if it does not exist yet."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Boolean value indicating whether the directory or file already exists."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException If an error occurs while accessing or creating the directory or"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * file containing the tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public boolean createFile() throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isDirectoryAndFileFound \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        File file \u003d new File(filepath.substring(0, filepath.lastIndexOf(\"/\")));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (!file.isDirectory()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            isDirectoryAndFileFound \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            file.mkdirs();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (file.createNewFile()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            isDirectoryAndFileFound \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return isDirectoryAndFileFound;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Saves the tasks in the specified task list to the hard disk."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param tasks Task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException If an error occurs while accessing the directory or file containing"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * the tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        new FileWriter(file, false).close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        FileWriter filewriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            filewriter.write(task.getFormattedString() + System.lineSeparator());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        filewriter.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 82
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents a task. A task has a description of the activity, and an indicator"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * of whether the activity has been completed. A task must be a todo, deadline,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * or event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a Task with the specified description. The Task is marked"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * as not done by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param description Description of the activity associated with the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Marks a Task as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Indicates whether the Task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return String object indicating whether the Task is done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns an alternate representation of the Task that will be saved in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * the hard disk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return String object representing the Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public abstract String getFormattedString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 47
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the task list of the Duke application. The task list is responsible"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * for storing and modifying tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs an empty TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a TaskList containing the tasks saved in the hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param savedTasks List of tasks saved in the hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e savedTasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (String savedTask : savedTasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Task processedTask \u003d processTask(savedTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            tasks.add(processedTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Task processTask(String savedTask) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String[] taskDetails \u003d savedTask.split(\" \\\\| \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String taskType \u003d taskDetails[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        Task processedTask \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String todoDescription \u003d taskDetails[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            ToDo todo \u003d new ToDo(todoDescription);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            boolean isTodoDone \u003d taskDetails[1].equals(\"1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (isTodoDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            processedTask \u003d todo;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String deadlineDescription \u003d taskDetails[2];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String deadlineDate \u003d taskDetails[3];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlineDescription, deadlineDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            boolean isDeadlineDone \u003d taskDetails[1].equals(\"1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (isDeadlineDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            processedTask \u003d deadline;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String eventDescription \u003d taskDetails[2];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String eventDate \u003d taskDetails[3];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Event event \u003d new Event(eventDescription, eventDate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            boolean isEventDone \u003d taskDetails[1].equals(\"1\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (isEventDone) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            processedTask \u003d event;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return processedTask;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns the current size of the TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Current size of the TaskList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns the TaskList."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return TaskList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Creates and sends a list of String objects representing the tasks in the TaskList"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * to the user interface of the Duke application to retrieve the corresponding response."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui User interface of the Duke application."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String showList(Ui ui) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cTask\u003e displayedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            displayedTasks.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return ui.showList(displayedTasks);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Marks a specified task in the TaskList as done and retrieves the corresponding"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * response from the user interface of the Duke application."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param taskPosition Position of the task to be marked as done in the task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui User interface of the Duke application."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String markDone(int taskPosition, Ui ui) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        Task doneTask \u003d tasks.get(taskPosition);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return ui.showDone(doneTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Deletes specified tasks in the TaskList and retrieves the corresponding response"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * from the user interface of the Duke application."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param deletedTaskPositions ArrayList containing the positions of the tasks to be"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     *                             deleted in the task list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui User interface of the Duke application."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String deleteTasks(ArrayList\u003cString\u003e deletedTaskPositions, Ui ui) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cTask\u003e removedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cTask\u003e remainingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String taskPosition \u003d Integer.toString(i);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (deletedTaskPositions.contains(taskPosition)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                removedTasks.add(tasks.get(i));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                remainingTasks.add(tasks.get(i));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task task : remainingTasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return ui.showDelete(removedTasks, tasks.size());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Deletes all the tasks in the TaskList and retrieves the corresponding"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * response from the user interface of the Duke application."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui User interface of the Duke application."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String deleteAll(Ui ui) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cTask\u003e removedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            removedTasks.add(task);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return ui.showDelete(removedTasks, tasks.size());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Adds a new task to the TaskList and retrieves the corresponding response"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * from the user interface of the Duke application."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param task Task to be added to the TaskList."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui User interface of the Duke application."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String addTask(Task task, Ui ui) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return ui.showAdd(task, tasks.size());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Finds the tasks in the TaskList that match"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Finds all the tasks in the TaskList that match the specified keyword."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param keyword Keyword specified by the user."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui User interface of the Duke application."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String findTask(String keyword, Ui ui) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                matchingTasks.add(task.toString());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return ui.showFind(matchingTasks);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 179
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents a todo. A todo is a task that has a description of the activity."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * It does not have a date or time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a ToDo with the specified description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param description Description of the activity associated with the ToDo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a representation of the ToDo that will be saved in the hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return String representation of the ToDo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"T | \" + (super.isDone ? 1 : 0) + \" | \" + super.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 28
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the user interface of the Duke application. The user interface is"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * responsible for constructing responses to user commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Constructs a Ui object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a line display."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Line display."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"----------------------------------------------------------\" + System.lineSeparator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays a welcome message to the user when the Duke application starts up."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays a farewell message to the user when the Duke application exits."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a response specifying an error that has occurred during the execution"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * of a user command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param errorMessage Message specifying the error encountered."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String showError(String errorMessage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d errorMessage + System.lineSeparator();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a response indicating that a specified task in the task list of the Duke application"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * has been marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param task Task in the task list that has been marked as done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String showDone(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"   \" + task + System.lineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a response indicating that a specified task has been added to the task list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * of the Duke application. The response also indicates the updated size of the task list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param task Task that has been added to the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param taskListSize Updated size of the task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String showAdd(Task task, int taskListSize) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"Got it. I\u0027ve added this task:\" + System.lineSeparator();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"    \" + task + System.lineSeparator();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"Now you have \" + taskListSize + \" tasks in the list.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a response indicating that specified tasks have been deleted from the task list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * of the Duke application. The response also indicates the updated size of the task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param tasks ArrayList of tasks that have been deleted from the task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param taskListSize Updated size of the task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String showDelete(ArrayList\u003cTask\u003e tasks, int taskListSize) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"Noted. I\u0027ve removed these tasks: \" + System.lineSeparator();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            response +\u003d \"   \" + task + System.lineSeparator();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"Now you have \" + taskListSize + \" tasks in the list.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a response that displays the tasks in the task list of the Duke application."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param tasks ArrayList of tasks in the task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String showList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"Here are the tasks in your list:\" + System.lineSeparator();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            response +\u003d (i + 1) + \".\" + tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a response indicating the tasks in the task list of the Duke application"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * that match a given keyword."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param tasks ArrayList of tasks in the task list that match a given keyword."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return Response of the user interface."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String showFind(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d \"Here are the matching tasks in your list:\" + System.lineSeparator();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            response +\u003d \"   \" + (i + 1) + \".\" + tasks.get(i) + System.lineSeparator();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        response +\u003d showLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Reads the command entered by the user."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return User command."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 157
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" minHeight \u003d \"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void testFind() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            ArrayList\u003cString\u003e expectedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            expectedList.add(\"Find\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            expectedList.add(\"book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            assertEquals(expectedList, parser.parseUserCommand(\"find book\", 10));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void testDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            assertEquals(\"Oct 15 2020 06:30 PM\", parser.parseDateTime(\"2020-10-15 1830\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (DateException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void testInvalidCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        assertThrows(InvalidTaskArgumentException.class, () -\u003e new Parser()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                .parseUserCommand(\"event project meeting\", 10));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 39
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "T | 0 | join sports club"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "T | 0 | join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "T | 0 | borrow book"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 6
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 4,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Command.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\DateException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\InvalidCommandException.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\InvalidDeleteException.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\InvalidDoneException.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\InvalidTaskArgumentException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Parser.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Storage.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\TaskList.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\ToDo.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Ui.java"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 16
    }
  }
]
