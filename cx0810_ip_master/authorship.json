[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 40,
      "cx0810": 19
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Supports adding of tasks to the TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates AddCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param input Input from user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    AddCommand(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Executes command by adding the new task to TaskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * and write data to storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks   TaskList containing the tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param storage To read and write to file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param ui      Interact with user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @throws DukeException If input does not meet requirements."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String taskType \u003d inputArr[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String taskDescription \u003d inputArr[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        if (taskType.equals(Instruction.TODO.getInstruction())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (taskDescription.equals(Instruction.EMPTY.getInstruction())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid name for To Do\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            newTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else if (taskType.equals(Instruction.DEADLINE.getInstruction())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String[] deadlineArr \u003d taskDescription.split(\" /by \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (deadlineArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid name and date for the Deadline\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String deadlineName \u003d deadlineArr[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String deadlineDateTime \u003d deadlineArr[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (deadlineDateTime.equals(Instruction.EMPTY.getInstruction())) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid date and time for the Deadline\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.parse(deadlineDateTime, formatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            newTask \u003d new Deadline(deadlineName, localDateTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else if (taskType.equals(Instruction.EVENT.getInstruction())) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String[] eventArr \u003d taskDescription.split(\" /at \", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (eventArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid name and date for the Event\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String eventName \u003d eventArr[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String eventDuration \u003d eventArr[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (eventDuration.equals(Instruction.EMPTY.getInstruction())) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid duration for the Event\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.parse(eventDuration, formatter);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            newTask \u003d new Event(eventName, localDateTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.showAddTask(newTask, tasks.getSize());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        storage.saveTasksToFile(tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 82
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Encapsulates an abstract Command class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Abstract method for executing a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks   TaskList containing the tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param storage To read and write to file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param ui      Interact with user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @throws DukeException If input does not meet requirements."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public abstract void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Checks for the termination of the programme."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Boolean to indicate the termination of programme."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 26
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Encapsulates a Deadline Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    protected LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param description   The description of deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param localDateTime The local date and time for said deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Deadline(String description, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.localDateTime \u003d localDateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates Deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param description   The description of deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param isDone        Status of completion of deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param localDateTime The local date and time for said deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.localDateTime \u003d localDateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Formats the date and time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return String containing the formatted date and time."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    String formatDateTime() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyy, hh:mm a\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.localDateTime.format(formatter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Overrides toString() method."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return String for Deadline Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatDateTime() + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 55
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Supports deleting of tasks from the TaskList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private int taskIdx;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates DeleteCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param taskIdx Index of task to be deleted."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DeleteCommand(int taskIdx) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.taskIdx \u003d taskIdx;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Executes command by deleting required task from TaskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * and rewrite data to storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks   TaskList containing the tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param storage To read and write to file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param ui      Interact with user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @throws DukeException If input does not meet requirements."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        Task task \u003d tasks.deleteTask(taskIdx);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.showDeleteTask(task, tasks.getSize());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        storage.saveTasksToFile(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 35
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 61
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates DoneCommand."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param idx Index of completed task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DoneCommand(int idx) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Executes command by marking completion for task in"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * TaskList and save data to storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks   TaskList containing the tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param storage To read and write to file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param ui      Interact with user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @throws DukeException If input does not meet requirements."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        Task task \u003d tasks.markAsDone(idx);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.showTaskDone(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        storage.saveTasksToFile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 30
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Encapsulates a Duke object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates a Duke object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasksFromFile());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Shows the greeting message when user first launch Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return greeting message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String showGreetingMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.clearMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.showGreeting();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return ui.getMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Show exit message when user exits the programme."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return exit message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String showExitMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.clearMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return ui.getMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Returns the message displayed by Duke after user keys in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * an input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Duke output."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.clearMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            Command command \u003d Parser.readUserInput(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            command.execute(tasks, storage, ui);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return ui.getMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public boolean getExitProgram() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 68,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Contains error handling for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Create a new DukeException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param msg Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Overrides toString() method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return String for error message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"\\uD83D\\uDE40\" + \"OOPS!!! \" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 27
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Encapsulates an Event Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    protected LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param description   The description of event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param localDateTime The local date and time for said event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Event(String description, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.localDateTime \u003d localDateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param description   The description of event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param isDone        Status of completion of event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param localDateTime The local date and time for said event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.localDateTime \u003d localDateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Formats the date and time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return String containing the formatted date and time."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    String formatDateTime() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyy, hh:mm a\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.localDateTime.format(formatter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Overrides toString() method."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return String for Event Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formatDateTime() + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 55
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Exits the programme."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Executes command by exiting the Duke Programme."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks   TaskList containing the tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param storage To read and write to file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param ui      Interact with user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Returns the boolean value to exit the programme."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Boolean to indicate end of programme."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 29
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Supports finding the task with given keyword."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    FindCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ArrayList\u003cTask\u003e tasksArrayList \u003d tasks.getTasksList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        TaskList tasksFound \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        for (Task task : tasksArrayList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (task.getDescription().contains(input)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                tasksFound.addTask(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.showTasksFound(tasksFound);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 26
    }
  },
  {
    "path": "src/main/java/duke/Instruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Stores instructions given by user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public enum Instruction {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    EMPTY(\"\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    FIND(\"find\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private final String i;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    Instruction(String i) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Gets instructions."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Instruction given by user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String getInstruction() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.i;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 31
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 11
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Returns tasks in TaskList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Executes command by displaying tasks in the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks   TaskList containing the tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param storage To read and write to file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param ui      Interact with user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ui.showTasksList(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 18
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().dukeWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        if (duke.getExitProgram()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            duke.showExitMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void dukeWelcome() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.showGreetingMessage(), dukeImage));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 59
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Parse user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Reads user input and invoke the Command based on the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * input provided."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param userInput Input from user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Returns appropriate Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    static Command readUserInput(String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        if (userInput.equals(Instruction.BYE.getInstruction())) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else if (userInput.equals(Instruction.LIST.getInstruction())) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String[] inputArr \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String taskName \u003d inputArr[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (taskName.equals(Instruction.DONE.getInstruction())) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                int itemsIdx \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                return new DoneCommand(itemsIdx);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            } else if (taskName.equals(Instruction.DELETE.getInstruction())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                int itemsIdx \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                return new DeleteCommand(itemsIdx);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            } else if (taskName.equals(Instruction.FIND.getInstruction())) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                String keyword \u003d inputArr[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                return new AddCommand(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 37
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Encapsulates data storage into hard disk."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates a Storage object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param filepath Directory to the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Loads the tasks that were saved in the hard drive previously."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return ArrayList of existing tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @throws DukeException If error occurs while reading the file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    ArrayList\u003cTask\u003e loadTasksFromFile() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    String[] data \u003d sc.nextLine().split(\" / \", 4);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    String taskType \u003d data[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    boolean isDone \u003d data[1].equals(\"1\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    String description \u003d data[2];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyy, hh:mm a\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        tasksList.add(new Todo(description, isDone));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        String dateTime \u003d data[3];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        LocalDateTime localDateTime \u003d LocalDateTime.parse(dateTime, formatter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        tasksList.add(new Event(description, isDone, localDateTime));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        String dateTime \u003d data[3];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        LocalDateTime localDateTime \u003d LocalDateTime.parse(dateTime, formatter);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        tasksList.add(new Deadline(description, isDone, localDateTime));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        throw new DukeException(\"Error reading tasks from file.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                return tasksList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            throw new DukeException(\"Error loading tasks from file.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Writes tasks to file storage."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks TaskList containing the ArrayList of tasks to be written."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @throws DukeException If an error occurs while saving the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    void saveTasksToFile(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        FileWriter fileWriter;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            for (Task task : tasks.getTasksList()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    fileWriter.write(\"T\" + \" / \" + (task.getIsDone() ? \"1\" : \"0\") + \" / \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                            + task.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    fileWriter.write(\"E\" + \" / \" + (task.getIsDone() ? \"1\" : \"0\") + \" / \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                            + task.getDescription() + \" / \" + ((Event) task).formatDateTime() + System.lineSeparator());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    fileWriter.write(\"D\" + \" / \" + (task.getIsDone() ? \"1\" : \"0\") + \" / \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                            + task.getDescription() + \" / \" + ((Deadline) task).formatDateTime()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                            + System.lineSeparator());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    throw new DukeException(\"Error saving task to file.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            throw new DukeException(\"Error occurred while saving the tasks.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 103
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Stores a Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates a Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param description Name of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instatiates a task with completion status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param description Name of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param isDone      Completion status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Returns an visual representation of the completion"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * status of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Tick or cross symbol."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Name of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Returns the completion status of the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Boolean of completion status."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Sets the completion status of the task to true."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Overrides toString() method."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 75
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Encapsulates an ArrayList containing the tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates TaskList containing empty ArrayList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates TaskList with existing tasks saved in hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasksList Existing ArrayList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.tasksList \u003d tasksList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Returns the ArrayList contained in the TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.tasksList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Sets the completion status of the task to be true."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param idx Index of the given task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Task that has just been set to completed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @throws DukeException If task does not exist."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Task markAsDone(int idx) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        if (idx \u003c 0 || idx \u003e getSize() - 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            throw new DukeException(\"Sorry, the task does not exist\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            Task task \u003d tasksList.get(idx);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Adds a given Task to the ArrayList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Deletes a Task from the ArrayList."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param idx Task to be deleted."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Task that was deleted from the ArrayList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @throws DukeException If task does not exist."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Task deleteTask(int idx) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        if (idx \u003c 0 || idx \u003e getSize() - 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            throw new DukeException(\"Sorry, the task does not exist\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            Task task \u003d tasksList.get(idx);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            tasksList.remove(idx);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Returns the size of the TaskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return Size of TaskList."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 87
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Encapsulates a Todo Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param description The description of todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates Todo."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param description The description of todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param isDone      Status completion of todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Overrides the toString() method."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return String representation of Todo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 35
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": " * Encapsulates the user interactions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Instantiates Ui."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Clear the current message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void clearMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Get the current message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @return current message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Prints welcome message for user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showGreeting() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Prints loading error message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"Sorry, an error occurred while loading the data\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Prints exit message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Prints the list of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks TaskList to be printed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showTasksList(TaskList tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d tasks.getTasksList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        for (Task t : tasksList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            this.message \u003d this.message + index + \". \" + t + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Prints the task added."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param task Task added."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param size Size of the updated TaskList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String taskText \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + task + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String totalText \u003d \"Now you have \" + size + \" tasks in the list\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d taskText + totalText;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Prints the task deleted."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param task Task deleted."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param size Size of the updated TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showDeleteTask(Task task, int size) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Prints the completed Task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param task Task completed."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showTaskDone(Task task) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Print error message."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * Prints the tasks that matches the keyword."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     * @param tasks TaskList of tasks that matches keyword."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cx0810"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void showTasksFound(TaskList tasks) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.message \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d tasks.getTasksList();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        for (Task t : tasksList) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            this.message \u003d this.message + index + \". \" + t + \"\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 123
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "cx0810": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "cx0810": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String deadlineDateTime \u003d \"2020-12-10 1230\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(deadlineDateTime, formatter);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        assertEquals(new Deadline(\"Study\", localDateTime).toString(), \"[D][✘] Study (by: Dec 10 2020, 12:30 pm)\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 20
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        tasks.addTask(new Todo(\"Drink Water\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String deadlineDateTime \u003d \"2020-09-10 2320\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(deadlineDateTime, formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        tasks.addTask(new Event(\"Meeting\", localDateTime));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        assertEquals(tasks.getSize(), 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void deleteTaskTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            tasks.deleteTask(-1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            assertEquals(\"Sorry, the task does not exist\", e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "todo study"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cx0810": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "# diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "cx0810": 5
    }
  }
]
