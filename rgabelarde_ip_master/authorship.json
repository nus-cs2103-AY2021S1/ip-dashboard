[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "# Moco project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Moco.java` file, right-click it, and choose `Run Moco.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 2,
      "-": 24
    }
  },
  {
    "path": "src/moco/logic/MocoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class MocoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public MocoException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "//        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 8
    }
  },
  {
    "path": "src/moco/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private enum type {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        Todo {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        Deadline {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        Event {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"event\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        Delete {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"delete\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static boolean parse(String input, TaskList tasks, Ui ui, Storage storage) throws MocoException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        if (input.equals((\"bye\"))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            storage.Save();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else if (input.equals(\"hi\") || input.equals(\"hello\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            ui.printGreeting();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            ui.printTaskList(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            doneCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            ui.printBorder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.contains(type.Todo.toString())) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                toDoCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else if (input.contains(type.Deadline.toString())) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                deadlineCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else if (input.contains(type.Event.toString())) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                eventCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else if (input.contains(type.Delete.toString())) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                deleteCommand(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static void doneCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                ui.doneTask(tasks.get(index));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\" ☹ OOPS!!! What task did you complete? Please specific a valid task index.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\" ☹ OOPS!!! You went out of the valid values, please specific a valid task index.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static void toDoCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Todo t \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.addTask(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                ui.addTask(t, tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\"☹ Insufficient details! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static void deadlineCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            String[] s \u003d input.split(\"/by \", 2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (s[0].length() \u003e 9) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String[] s2 \u003d s[1].split(\"-\", 3);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate by \u003d LocalDate.parse(s2[2] + \"-\" + s2[1] + \"-\" + s2[0]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String[] desc \u003d s[0].split(\" \", 2);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Deadline dl \u003d new Deadline(desc[1], by);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.addTask(dl);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                ui.addTask(dl, tasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\" ☹ Insufficient details! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Date not/wrongly entered! (Please provide in this format: deadline description /by dd-mm-yyyy\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\" ☹ Date wrongly entered, please remember to format date in dd-MM-yyyy!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static void eventCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            String[] s \u003d input.split(\"/at \", 2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (s[0].length() \u003e 6) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String[] s2 \u003d s[1].split(\"-\", 3);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate at \u003d LocalDate.parse(s2[2] + \"-\" + s2[1] + \"-\" + s2[0]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String[] desc \u003d s[0].split(\" \", 2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Event e \u003d new Event(desc[1], at);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.addTask(e);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                ui.addTask(e, tasks);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\" ☹ Insufficient details! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Date not/wrongly entered! (Please provide in this format: event description /at dd-mm-yyyy\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\" ☹ Date wrongly entered, please remember to format date in dd-MM-yyyy!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static void deleteCommand(String input, TaskList tasks, Storage storage, Ui ui) throws MocoException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.length() \u003e 7) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Task t \u003d tasks.get(index);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.deleteTask(index);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                storage.Save();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                ui.deleteTask(t, tasks);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                throw new MocoException(\"Please provide the index of the task you would like to remove.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"The index you specified is not valid. Please try again.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(e.getMessage());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 155
    }
  },
  {
    "path": "src/moco/logic/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private File taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.taskList \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws MocoException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (taskList.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                FileReader fr \u003d new FileReader(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String input;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                while ((input \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    String[] task \u003d input.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    addToTaskList(task, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    taskList.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                } catch (IOException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    ex.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Unable to find file of name \u0027tasklist\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Error accessing file\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private void addToTaskList(String[] s, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        boolean isDone \u003d s[2].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        switch (s[0]) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Todo t \u003d new Todo(s[2], isDone);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate by \u003d LocalDate.parse(s[3]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Deadline dl \u003d new Deadline(s[2], isDone, by);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(dl);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate at \u003d LocalDate.parse(s[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Event e \u003d new Event(s[2], isDone, at);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void Save() throws MocoException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            FileWriter newList \u003d new FileWriter(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                newList.write(t.saveText());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            newList.flush();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            newList.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            throw new MocoException(\"Error saving update to task list\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 84
    }
  },
  {
    "path": "src/moco/logic/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            System.out.println(\"\\nYou have a saved list! Here: \\n\" + this.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            s +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 47
    }
  },
  {
    "path": "src/moco/main/Moco.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.logic.MocoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.logic.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.logic.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.logic.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Moco {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Moco(String filePath) throws MocoException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ui.startBot();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        boolean isCommand \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        while (isCommand) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                isCommand \u003d Parser.parse(input, tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } catch (MocoException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                ui.printBorder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        ui.stopBot();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static void main(String[] args) throws MocoException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        new Moco(\"tasklist.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 37,
      "-": 2
    }
  },
  {
    "path": "src/moco/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"D | \" + getStatusIcon() + \" | \" + description + \" | \" + by + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 28
    }
  },
  {
    "path": "src/moco/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"E | \" + getStatusIcon() + \" | \" + description + \" | \" + at + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 28
    }
  },
  {
    "path": "src/moco/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //returns tick or X symbol accordingly"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    abstract public String saveText();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 26
    }
  },
  {
    "path": "src/moco/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"T | \" + getStatusIcon() + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 22
    }
  },
  {
    "path": "src/moco/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "package moco.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.logic.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import moco.logic.MocoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private Scanner userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private String lastError;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return userInput.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void startBot() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Hello I\u0027m Moco, a task list bot to help you stay on top of your tasks!\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void stopBot() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Bye. Moco hopes to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Hello! My name is Moco, I am excited to help! c:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void printError(String error) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.lastError \u003d error;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void printBorder() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void printTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void doneTask(Task t) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void deleteTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void addTask(Task task, TaskList tasks) throws MocoException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 74
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "todo working example"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline no date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline test /by wrong format"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline test /by no date"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline /by 12-12-2020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event no date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event test /by wrong format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event test /by no date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event /by 12-12-2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Moco.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "java -classpath ..\\bin Moco \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "java -classpath ../bin Moco \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 2,
      "-": 36
    }
  }
]
