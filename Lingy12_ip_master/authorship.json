[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "//    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "//"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "//checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "//    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "//}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 22,
      "-": 40
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents the duke system."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Storage of the system */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Task list that stores tasks */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** User interface to interact with user */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private  Ui ui \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates new Duke chat bot from given storage path."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param filePath Data file path."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            //ui \u003d new Ui(storage, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this(\"data/duke.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            c.execute(tasks, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return c.getResponse();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 57
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 32
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a storage manager to handle file I/O."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * String representation of path that stores user data"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    protected String dataPath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a storage to certain path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param dataPath Data path (relative)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Storage(String dataPath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.dataPath \u003d dataPath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Loads the task list from stored file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return An array list that represents the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @throws IOException An exception when the system cannot create the file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            File dataFile \u003d new File(dataPath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            Scanner sc \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            //Read the file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                String nowTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                String[] taskComponents \u003d nowTask.split(\" / \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                //Decode the file representation of list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                switch (taskComponents[0]) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    taskList.add(new Todo(taskComponents[1].equals(\"1\"), taskComponents[2]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    taskList.add(new Event(taskComponents[1].equals(\"1\"), taskComponents[2],"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                             LocalDateTime.parse(taskComponents[3])));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    taskList.add(new Deadline(taskComponents[1].equals(\"1\"), taskComponents[2],"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                            LocalDateTime.parse(taskComponents[3])));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    return taskList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (!new File(dataPath).exists()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                if (!new File(\"data\").mkdir() || !new File(dataPath).createNewFile()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    System.out.println(\"error\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Saves the changes to the storage path."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param taskList Current task list in the system."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\"data/duke.txt\", false);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            //Write the list to the file"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                writer.write(task.toFileStringFormat() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 104
    }
  },
  {
    "path": "src/main/java/duke/ValidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.AmbiguousInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * ValidCommand enum represents the possible command type."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public enum ValidCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    DELETE(\"delete\", \"DELETE\", \"del\", \"DEL\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    DEADLINE(\"deadline\", \"DEADLINE\", \"ddl\", \"DDL\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    EVENT(\"event\", \"EVENT\", \"eve\", \"EVE\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    TODO(\"todo\", \"TODO\", \"to\", \"TO\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    CLEAR(\"clear\", \"CLEAR\", \"clr\", \"CLR\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    EXIT(\"bye\", \"BYE\", \"quit\", \"QUIT\", \"EXIT\", \"exit\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    FIND(\"find\", \"search\", \"FIND\", \"SEARCH\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    DONE(\"done\", \"DONE\", \"FINISH\", \"finish\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    LIST(\"list\", \"LIST\", \"ls\", \"LS\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Map that match alias with valid command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final Map\u003cString, ValidCommand\u003e aliasMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Valid alias for the commands"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final String[] aliases;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        for (ValidCommand command : ValidCommand.values()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            for (String alias : command.aliases) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                aliasMap.put(alias, command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates command alias from aliases list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param aliases Aliases list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    ValidCommand(String... aliases) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.aliases \u003d aliases;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns a specific command regarding to user input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param alias User input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return A command name."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @throws AmbiguousInputException When system cannot recognize the command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static ValidCommand commandType(String alias) throws AmbiguousInputException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        ValidCommand command \u003d aliasMap.get(alias);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            throw new AmbiguousInputException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 68
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents an command that add task to list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * @author Linngy"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Target task that will be added to the list */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final Task targetTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private int currentListSize;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a command to add task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param task Task that will be added to the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.targetTask \u003d task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        tasks.add(targetTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        currentListSize \u003d tasks.getSize();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \" + \"\\n\\t\\t\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                + targetTask.toString() + \"\\n\\t\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\\n\", currentListSize);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 47
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represent the command that to clear all data."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class ClearCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Message after clear command is executed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final String CLEAR_MESSAGE \u003d \"I have cleared all tasks!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return ClearCommand.CLEAR_MESSAGE + \"\\n\\t\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 32
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * @author Lingy12."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Executes a certain command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param tasks List of the tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param storage Manager of the file I/O."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @throws DukeException when there is exception in execution process."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    void execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Checks whether the command is an exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return True if the command is an instance of ExitCommand, false otherwise."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    boolean isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns the response after executing a certain command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return String of the response."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    String getResponse();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 35
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a command to delete element with certain index in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Index of the target task to be deleted */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final int targetIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private Task deletedTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private int currentListSize;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a delete command to delete specific task in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param index Index of task that will be deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.targetIndex \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        deletedTask \u003d tasks.delete(targetIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        currentListSize \u003d tasks.getSize();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \" + \"\\n\\t\\t\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                + deletedTask.toString()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                + String.format(\"\\nNow you have %d tasks in the list.\\n\", currentListSize);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a command to mark element with certain index as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done: \\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Index of task that will be marked as done */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final int targetIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private Task doneTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a command to mark certain task as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param index Index of tasks that is going to be marked as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.targetIndex \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        doneTask \u003d tasks.markDone(targetIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return DoneCommand.DONE_MESSAGE + \"\\n\\t\" + doneTask.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 42
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a command to exit from Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Exit message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Bye ! Hope to see you again soon.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return ExitCommand.EXIT_MESSAGE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a command to find certain task with keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Search keyword for the list */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final TaskList resultTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a find command with search keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param key Search keyword."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public FindCommand(String key) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.keyword \u003d key;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        //Add the tasks whose description contains keyword"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        for (Task task: tasks.getTasks()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (task.containsKeyWord(keyword)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                resultTaskList.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return Ui.getTaskListString(resultTaskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 48
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a command which list all tasks in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return Ui.getTaskListString(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 30
    }
  },
  {
    "path": "src/main/java/duke/exception/AmbiguousInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents an exception when the system cannot recognize the command (input)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class AmbiguousInputException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public AmbiguousInputException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/DeletionIndexEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents the exception that user does not specify the task they want to delete."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class DeletionIndexEmptyException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public DeletionIndexEmptyException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(\"OOPS!!! The deletion index cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/DescriptionEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents the exception that the description of a task is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class DescriptionEmptyException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public DescriptionEmptyException(String type) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(String.format(\"OOPS!!! The description of a %s cannot be empty.\", type));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/DoneIndexEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents an exception that the parameter for done command is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class DoneIndexEmptyException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public DoneIndexEmptyException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(\"Your index for done command should not be empty\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents the exceptions that happen in Duke system."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public DukeException(String e) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents the exception that the task with the same description has been created."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class TaskExistException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public TaskExistException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(\"You task has been in the list. Please change the description.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/TimeEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents the exceptions that user provides empty time for event and deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class TimeEmptyException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public TimeEmptyException(String type) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(String.format(\"OOPS!!! The time of a %s cannot be empty.\", type));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 12
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Deadline of a task */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a task with description and deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a task with status, description and deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param isDone Status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Deadline(boolean isDone, String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String toFileStringFormat() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return String.format(\"D / %d / %s / %s\", isDone ? 1 : 0, this.desciption, this.by);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Event time of a task */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates an events with given time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param at Time for the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates an events with status, description and time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param isDone Status of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param at Time for the event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Event(boolean isDone, String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String toFileStringFormat() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return String.format(\"E / %d / %s / %s\", isDone ? 1 : 0, this.desciption, this.at);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** Description of a task */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    protected String desciption;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /** The status of the task*/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a task with description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.desciption \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns the icon of current task status."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return Tick if task is done and cross otherwise."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return (isDone ? Task.TICK_ICON : Task.CROSS_ICON);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Marks current instance of task as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns true when the description contains certain keyword, false otherwise."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param keyword Search key."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return True when contains the search key and false otherwise."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean containsKeyWord(String keyword) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return this.desciption.contains(keyword);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns the status of a task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return True if the task has done and false other wise."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns a string to be stored in data file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return Formatted string to be used in data file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String toFileStringFormat() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return String.format(\"%d / %s\", isDone ? 1 : 0, this.desciption);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns whether the task has the exact description as this object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param task Task that user intend to add."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return True if the description is the same, false otherwise."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean isExactDescription(Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return this.desciption.equals(task.desciption);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.desciption);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 86
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Create a todo item with description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param description Description of the todo item."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a todo item with status and description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param isDone      Status of the todo item."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param description Descrption of the todo item."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Todo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String toFileStringFormat() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return String.format(\"T / %d / %s\", isDone ? 1 : 0, this.desciption);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 35
    }
  },
  {
    "path": "src/main/java/duke/tool/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.ValidCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.AmbiguousInputException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DeletionIndexEmptyException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DescriptionEmptyException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DoneIndexEmptyException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.TimeEmptyException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents a parser to interpret the user\u0027s command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Formatter for input date"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final DateTimeFormatter acceptedFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns a command that associate with the specific input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param input A complete input stream from user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return A command to be excuted"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @throws DukeException An exception that happen in Duke system"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        //Detect ambiguous input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        if (input.equals(\"\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            throw new AmbiguousInputException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        //Detect the command and give it parameter"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        String[] s \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        //TODO:Detect command with unresonable space (eg. \"done \")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        ValidCommand command \u003d ValidCommand.commandType(s[0]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case CLEAR:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                throw new DoneIndexEmptyException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            int index \u003d Integer.parseInt(s[1]) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                throw new DescriptionEmptyException(\"find\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new FindCommand(s[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                throw new DescriptionEmptyException(\"todo\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new AddCommand(new Todo(s[1]));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case DEADLINE: {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                throw new DescriptionEmptyException(\"dealine\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            String[] set \u003d s[1].split(\" /by \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (set.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                throw new TimeEmptyException(\"deadline\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new AddCommand(new Deadline(set[0], LocalDateTime.parse(set[1], acceptedFormatter)));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case EVENT: {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                throw new DescriptionEmptyException(\"event\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            String[] set \u003d s[1].split(\" /at \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (set.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                throw new TimeEmptyException(\"event\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new AddCommand(new Event(set[0], LocalDateTime.parse(set[1], acceptedFormatter)));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case DELETE: {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                throw new DeletionIndexEmptyException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(s[1]) - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            throw new AmbiguousInputException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 121
    }
  },
  {
    "path": "src/main/java/duke/tool/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.TaskExistException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents the task list stored in Duke system."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * List of tasks stored in system"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a task list from given list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param tasks Task list that have stored tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        taskList \u003d tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns the list size of task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return Size of current list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Adds new task into the current list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param newTask New task to be added to the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @throws TaskExistException When task\u0027s description is the same as some task in list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void add(Task newTask) throws TaskExistException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        if (this.containsExactDescription(newTask)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            throw new TaskExistException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Deletes the certain task with given index."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return Task that has been deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return this.taskList.remove(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns a task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return Task list of current object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Marks the task with given element to done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param index Index of the element."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return Task that has been marked as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Task markDone(int index) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Task targetTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        targetTask.markAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return targetTask;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Clear all task in current list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns whehter there is exact same task in the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param targetTask Task that user want to add into list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return True if there is a task with exact description, false otherwise."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public boolean containsExactDescription(Task targetTask) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (task.isExactDescription(targetTask)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 113
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final Insets BOX_PADDING \u003d new Insets(10, 2 , 10 , 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final Insets TEXT_PIC_PADDING \u003d new Insets(0, 0, 0 , 10);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private Label dialog \u003d new Label();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private ImageView displayPicture \u003d new ImageView();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a dialog box in GUI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param l Label to be displayed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param iv Imageview to be displayed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Circle clipCircle \u003d new Circle(50, 50, 50);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        l.setWrapText(true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        l.setPadding(DialogBox.TEXT_PIC_PADDING);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        iv.setFitWidth(100.0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        iv.setFitHeight(100.0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        iv.setClip(clipCircle);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.setPadding(DialogBox.BOX_PADDING);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.getChildren().addAll(l, iv);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Circle clipCircle \u003d new Circle(50, 50, 50);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        displayPicture.setClip(clipCircle);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        DialogBox db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 90
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/me.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ben.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.WELCOME_MESSAGE,dukeImage));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 53
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " * Represents the UI manager for the system."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**Welcome message*/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d \"Hello, I am Duke! \\n\\t What can I do for you?\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Horizontal Line"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final String LINE \u003d \"-------------------------------------\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/me.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/ben.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Logo of Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**Storage of the system.*/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Task list that stores tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates a Ui manager."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param storage Storage of Duke system."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param tasks Task list in the system."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public Ui(Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Processes the application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param stage javaFX stage."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void process(Stage stage) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        this.stage \u003d stage;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        //Formatting the window"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Label welcome \u003d new Label(Ui.WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcome, new ImageView(duke)));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        sendButton.setOnMouseClicked((event -\u003e handleUserInput()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        userInput.setOnAction((event -\u003e handleUserInput()));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        String fullCommand \u003d userInput.getText();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            c.execute(tasks, storage);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                userInput.clear();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                stage.close();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            Label userText \u003d new Label(fullCommand);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            Label dukeText \u003d new Label(c.getResponse());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            );"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            printLog(e.getMessage());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            Label errorMsg \u003d new Label(e.getMessage());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox.getDukeDialog(errorMsg, new ImageView(duke)));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Prints the log of Duke."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param s Log content."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void printLog(String s) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        System.out.println(formatOut(s));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Print the task list in the system."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param tasks Task list in the system."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public static String getTaskListString(TaskList tasks) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        builder.append(\"Here are the tasks in your list: \\n\\t\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        //Check whether there are any task in the list or not"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            return \"You haven\u0027t added any task here !\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        //Produce output string"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            builder.append(taskList.indexOf(task) + 1).append(\". \")"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                    .append(task.toString()).append(\"\\n\").append(\"\\t\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * Returns a formatted string that Duke interacts with users."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @param s An input String."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     * @return A formatted string with built in format."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private String formatOut(String s) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        return String.format(\"  %s\\n    %s\\n  %s\\n\", Ui.LINE, s, Ui.LINE);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 208
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void toStringTest3() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        assertEquals(new Deadline(true, \"final exam\", LocalDateTime.parse(\"2020-12-29 09:00\", formatter))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                        .toString(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "                \"[D][\\u2713] final exam (by: Dec 29 2020 09:00)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 20
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.exception.TaskExistException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void markAsDoneTest1() throws TaskExistException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Task sample \u003d new Task(\"sample\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        sample.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Task sampleInList \u003d new Task(\"sample1\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        list.add(sampleInList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        list.markDone(0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        assertEquals(sample.getStatus(), list.getTasks().get(0).getStatus());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void markAsDoneTest2() throws TaskExistException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Task sample \u003d new Task(\"sample\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        sample.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Task sampleInList1 \u003d new Task(\"sample1\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Task sampleInList2 \u003d new Task(\"sample2\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        list.add(sampleInList1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        list.add(sampleInList2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        list.markDone(1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        assertEquals(sample.getStatus(), list.getTasks().get(1).getStatus());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 36
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void containsKeywordTest1() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        String keyword \u003d \"read\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Task newTask \u003d new Task(\"read book\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        assertTrue(newTask.containsKeyWord(keyword));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    public void containsKeywordTest2() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        String keyword \u003d \"let\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        Task newTask \u003d new Task(\"read book\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "        assertFalse(newTask.containsKeyWord(keyword));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lingy12"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 4,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "D:\\Study\\20-21Sem1\\CS2103T\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "D:\\Study\\20-21Sem1\\CS2103T\\ip\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "D:\\Study\\20-21Sem1\\CS2103T\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "D:\\Study\\20-21Sem1\\CS2103T\\ip\\src\\main\\java\\TaskList.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "D:\\Study\\20-21Sem1\\CS2103T\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lingy12"
        },
        "content": "D:\\Study\\20-21Sem1\\CS2103T\\ip\\src\\main\\java\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "Lingy12": 6
    }
  }
]
