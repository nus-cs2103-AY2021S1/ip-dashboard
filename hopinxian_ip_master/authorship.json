[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    mainClassName \u003d \"butler.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    archiveBaseName \u003d \"butler\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 19,
      "-": 43
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo something"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo another"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo emo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "incomplete todo more"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 4
    }
  },
  {
    "path": "src/main/java/butler/Butler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents the main logic of a butler that manages a list of tasks for the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Butler maintains a list of tasks across different sessions."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Data of the list of tasks are saved in hard disk within \u003ccode\u003efilePath\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * relative to the program file location."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Butler {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private TaskListManager taskListManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a butler that stores tasks in the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param filePath Location where tasks is stored."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Butler(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskListManager \u003d new TaskListManager(new TaskList(storage.load()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ButlerException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskListManager \u003d new TaskListManager(new TaskList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets a response message to the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Response message to user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return c.execute(taskListManager, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ButlerException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return ui.showErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 52,
      "-": 1
    }
  },
  {
    "path": "src/main/java/butler/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 12
    }
  },
  {
    "path": "src/main/java/butler/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.gui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * A GUI for Butler using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private static final String FILEPATH \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final Butler butler \u003d new Butler(FILEPATH);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Starts the application GUI."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param stage Stage for this application, where the scene is set."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            stage.setTitle(\"Butler - Your Personal Task Manager\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setButler(butler);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 39
    }
  },
  {
    "path": "src/main/java/butler/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to add a \u003ccode\u003eTask\u003c/code\u003e to the current list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to add the given \u003ccode\u003etask\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Adds the task to the current list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Updates the list of tasks saved in the hard disk and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * alerts the user that the task has been successfully added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskListManager Manager of the list of tasks in which task is to be added to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores current list of tasks on hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String response of task execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String execute(TaskListManager taskListManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        TaskList newTaskList \u003d taskListManager.getCurrentTaskList().copy();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        newTaskList.addTask(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskListManager.addLatestTaskList(newTaskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(newTaskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return ui.showTaskIsAdded(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns true if this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns the task to be added."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Task to be added by this command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 61
    }
  },
  {
    "path": "src/main/java/butler/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command that interacts with a list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Executes this command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskListManager Manager of the list of tasks on which this command acts on."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores current list of tasks on hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String response of task execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if an error occurs in the execution of this command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public abstract String execute(TaskListManager taskListManager, Ui ui, Storage storage) throws ButlerException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns true if this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if this is an \u003ccode\u003eExitCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *         else \u003ccode\u003efalse\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public abstract Boolean isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 30
    }
  },
  {
    "path": "src/main/java/butler/command/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to mark multiple tasks as completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final ArrayList\u003cInteger\u003e taskIndexList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to mark multiple tasks as completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Task indexes are specified by \u003ccode\u003etaskIndexList\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndexList List of task indexes to be marked as completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public CompleteCommand(ArrayList\u003cInteger\u003e taskIndexList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskIndexList \u003d taskIndexList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Marks multiple tasks within the current list of tasks as completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Updates the list of tasks saved in the hard disk and"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * alerts the user that the tasks have been marked as completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskListManager Manager of the list of tasks on which this command acts on."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores current list of tasks on hard disk."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String response of task execution."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if an invalid index is given in \u003ccode\u003etaskIndexList\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String execute(TaskListManager taskListManager, Ui ui, Storage storage) throws ButlerException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        TaskList newTaskList \u003d taskListManager.getCurrentTaskList().copy();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (int index : taskIndexList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            newTaskList.completeTask(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            storage.storeTaskList(newTaskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            output.append(ui.showTaskIsCompleted(index));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskListManager.addLatestTaskList(newTaskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(newTaskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns true if this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 61
    }
  },
  {
    "path": "src/main/java/butler/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to delete a \u003ccode\u003eTask\u003c/code\u003e from the current list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to delete a task with specified \u003ccode\u003etaskIndex\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of task to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Deletes the task specified by \u003ccode\u003etaskIndex\u003c/code\u003e from the current list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Updates the list of tasks saved in the hard disk and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * alerts the user that the task has been successfully deleted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskListManager Manager of the list of tasks on which this command acts on."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores current list of tasks on hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String response of task execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if \u003ccode\u003etaskIndex\u003c/code\u003e is an invalid index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String execute(TaskListManager taskListManager, Ui ui, Storage storage) throws ButlerException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        TaskList newTaskList \u003d taskListManager.getCurrentTaskList().copy();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        newTaskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskListManager.addLatestTaskList(newTaskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(newTaskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return ui.showTaskIsDeleted(taskIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns true if this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 53
    }
  },
  {
    "path": "src/main/java/butler/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to exit Butler."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to exit Butler."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Alerts the user that Butler will be closed and updates the task list saved in the hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskListManager Manager of the list of tasks on which this command acts on."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores current list of tasks on hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String response of task execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String execute(TaskListManager taskListManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskListManager.getCurrentTaskList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return ui.showFarewellMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns true if this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 41
    }
  },
  {
    "path": "src/main/java/butler/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to find tasks with specific words."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to find tasks with the given \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param keyword Search keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Finds tasks within the current list of tasks that have the \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Alerts the user about the tasks that have been found"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * and updates the task list saved in the hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskListManager Manager of the list of tasks on which this command acts on."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores current list of tasks on hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String response of task execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String execute(TaskListManager taskListManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        TaskList filteredTasks \u003d taskListManager.getCurrentTaskList().findTasks(keyword);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskListManager.getCurrentTaskList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return ui.showFilteredTaskList(filteredTasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns true if this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 49
    }
  },
  {
    "path": "src/main/java/butler/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to list all tasks in a task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to list all tasks in a task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Lists out the tasks in the current list of tasks using \u003ccode\u003eui\u003c/code\u003e and"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * updates the list of tasks saved in the hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskListManager Manager of the list of tasks on which this command acts on."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores current list of tasks on hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String response of task execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String execute(TaskListManager taskListManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskListManager.getCurrentTaskList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return ui.showTaskList(taskListManager.getCurrentTaskList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns true if this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 42
    }
  },
  {
    "path": "src/main/java/butler/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskListManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a command to undo a number of changes to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final int undoCount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a command to undo some commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param undoCount Number of commands to undo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public UndoCommand(int undoCount) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.undoCount \u003d undoCount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Undo a given number of commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Updates the list of tasks saved in the hard disk and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * alerts the user that changes have been undone."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskListManager Manager of the list of tasks on which this command acts on."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param ui User interface to interact with user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param storage Storage which stores current list of tasks on hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String response of task execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if \u003ccode\u003eundoCount\u003c/code\u003e is an invalid number."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String execute(TaskListManager taskListManager, Ui ui, Storage storage) throws ButlerException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        TaskList taskList \u003d taskListManager.getPastTaskList(undoCount);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        storage.storeTaskList(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return ui.showOldTaskList(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns true if this command is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 51
    }
  },
  {
    "path": "src/main/java/butler/exception/ButlerException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents exceptions resulting from errors in using Butler."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ButlerException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ButlerException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 12
    }
  },
  {
    "path": "src/main/java/butler/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * and a label containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Creates a dialogue box containing text and a profile image."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param text Text message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param img Profile image."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Creates a dialogue box for the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Dialogue box contains text and a profile image."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param text Text message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param img Profile image."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A dialogue box for the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Creates a dialogue box for butler."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Dialogue box contains text and a profile image."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param text Text message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param img Profile image."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A dialogue box for the butler."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public static DialogBox getButlerDialog(String text, Image img) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 82
    }
  },
  {
    "path": "src/main/java/butler/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.Butler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Butler butler;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final Image butlerImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaButler.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Initialises the scroll pane of the application."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String welcomeMsg \u003d \"Welcome! I am your personal manager, Butler.\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"How may I help you today?\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                DialogBox.getButlerDialog(welcomeMsg, butlerImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void setButler(Butler b) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        butler \u003d b;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Butler\u0027s reply"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * and then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String response \u003d butler.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                DialogBox.getButlerDialog(response, butlerImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        // Closes the application upon an exit command"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Stage s \u003d (Stage) userInput.getScene().getWindow();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            PauseTransition p \u003d new PauseTransition(Duration.seconds(2));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            p.setOnFinished(event -\u003e s.close());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            p.play();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 72
    }
  },
  {
    "path": "src/main/java/butler/io/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.CompleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.DeleteCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.UndoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.DeadlineTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.EventTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.ToDoTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a parser to identify the content of the user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Throws \u003ccode\u003eButlerException\u003c/code\u003e when an invalid input is processed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses the given \u003ccode\u003einput\u003c/code\u003e to identify the command given."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input is invalid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public static Command parse(String input) throws ButlerException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String commandType \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return parseCompleteCommand(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return parseDeleteCommand(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return parseTodoCommand(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return parseEventCommand(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return parseDeadlineCommand(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return parseFindCommand(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return parseUndoCommand(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"This is not a valid command type.\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + \"Valid commands start with list, done, delete, \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + \"todo, deadline, event, find, undo or bye.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses a command to add a todo task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input does not have a description."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private static Command parseTodoCommand(String input) throws ButlerException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Task task \u003d new ToDoTask(taskDetails);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please add a description for the ToDo task.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses a command to add a deadline task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input does not have a valid deadline"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *                         or is missing details."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private static Command parseDeadlineCommand(String input) throws ButlerException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String summary \u003d taskDetails.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String deadline \u003d taskDetails.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            LocalDate formattedDeadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Task task \u003d new DeadlineTask(summary, formattedDeadline);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please provide a summary and deadline.\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + \"Separate the deadline from summary using \\\" /by \\\".\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please input a valid Date format.\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + \"Valid Date format is YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses a command to add an event task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input does not provide valid dates"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *      *                  or is missing details."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private static Command parseEventCommand(String input) throws ButlerException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String summary \u003d taskDetails.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String date \u003d taskDetails.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            LocalDate startDate \u003d LocalDate.parse(date.split(\" \")[0]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            LocalDate endDate \u003d LocalDate.parse(date.split(\" \")[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Task task \u003d new EventTask(summary, startDate, endDate);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please provide a summary and date of event.\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + \"Separate the dates from summary using \\\" /at \\\" and \""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + \"separate the two dates using a space.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please input a valid Date format.\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + \"Valid Date format is YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses a command to mark some tasks as complete."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input does not contain valid task indexes."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private static Command parseCompleteCommand(String input) throws ButlerException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String[] commandDetails \u003d input.split(\" \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        int indexCount \u003d commandDetails.length;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String[] indexStringArray \u003d Arrays.copyOfRange(commandDetails, 1, indexCount);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        // Convert index from string to integer"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (String stringIndex : indexStringArray) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Integer index \u003d Integer.parseInt(stringIndex);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                indexList.add(index);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                throw new ButlerException(\"An invalid index was given.\\n\\\"\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                        + stringIndex + \"\\\" is not an integer.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (indexList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"No index was given. Please provide a valid index.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return new CompleteCommand(indexList);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses a command to delete a task."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input does not contain a valid task index."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private static Command parseDeleteCommand(String input) throws ButlerException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String stringIndex \u003d \"\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            stringIndex \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            int index \u003d Integer.parseInt(stringIndex);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"An invalid index was given.\\n\\\"\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + stringIndex + \"\\\" is not an integer.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please add the index of the task to be deleted.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses a command to find some tasks."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input does not contain keywords to filter with."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private static Command parseFindCommand(String input) throws ButlerException {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String keyword \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please add some keywords to filter with.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Parses a command to undo previous commands."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input User input to be parsed."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Command represented by the \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the user input does not contain a valid number."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private static Command parseUndoCommand(String input) throws ButlerException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String stringUndoCount \u003d \"\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            stringUndoCount \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            int undoCount \u003d Integer.parseInt(stringUndoCount);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return new UndoCommand(undoCount);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"An invalid undo count was given.\\n\\\"\""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + stringUndoCount + \"\\\" is not an integer.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please add the number of commands to undo.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 232
    }
  },
  {
    "path": "src/main/java/butler/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.command.AddCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a storage responsible for reading and writing into the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Reads a list of tasks from a given location in the hard disk and"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * stores the list of tasks into the same location within the hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a new storage with the given \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * The storage will read and write into the file at the given \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param filePath File path of the file to be read from and written into."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Stores the given \u003ccode\u003etaskList\u003c/code\u003e into the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to be written into the hard disk."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void storeTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String fileText \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            // Content of text to be written into file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            int listSize \u003d taskList.getSize();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String taskDetails \u003d task.toStorageString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                fileText +\u003d taskDetails + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fw.write(fileText);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            assert false : \"There is an error with writing to the path. File is not detected.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Loads the list of tasks from the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A list of tasks read from the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if there is an error within the content of the file"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *                         or the file is not detected."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws ButlerException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            //Inputs each task line by line"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                Task task \u003d loadTaskFromLine(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            createFilePath();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"There is no file to access.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Loads a task from a line of input."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param input String representation of a task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A task represented by \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if there is an error within the input."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private Task loadTaskFromLine(String input) throws ButlerException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String taskDetails \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            AddCommand c \u003d (AddCommand) Parser.parse(taskDetails);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Task task \u003d c.getTask();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            String completionStatus \u003d input.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            if (completionStatus.equals(\"complete\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                task.markComplete();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"There is an error inside the file. The task has incomplete details.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Instead of tasks, a command was written into the file.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Creates a filePath. Called only when filePath does not exist."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private void createFilePath() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Files.createDirectory(Paths.get(\"./data/\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            Files.createFile(Paths.get(filePath));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            assert false : \"FilePath was already created when calling this method.\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + e.getMessage();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 124
    }
  },
  {
    "path": "src/main/java/butler/io/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a user interface that interacts with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * \u003ccode\u003eUi\u003c/code\u003e returns string responses for the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a user interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string of the list of tasks in the given \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to be listed out."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A string of the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        // Message header"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String message \u003d \"Here are your list of tasks.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"You have \" + taskList.getSize()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + (taskList.getSize() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" in total.\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        message +\u003d showTaskListBodyMessage(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a response message that a task was added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Task that was added is specified by \u003ccode\u003etask\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param task Task that was added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Response message that a task was added."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String showTaskIsAdded(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        message \u003d \"The following task has been added to task list.\\n\" + task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a response message that a task was marked as completed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * The task is specified by the \u003ccode\u003etaskIndex\u003c/code\u003e given."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of task marked as completed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Response message that a task was marked as completed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String showTaskIsCompleted(int taskIndex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        message \u003d \"Task \" + taskIndex + \" has been marked as complete.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a response message that a task was deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Deleted task is specified by \u003ccode\u003etaskIndex\u003c/code\u003e."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of task that was deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Response message that a task was deleted."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String showTaskIsDeleted(int taskIndex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        message \u003d \"Task \" + taskIndex + \" has been deleted.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string of the given filtered list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to be listed out."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A string of the list of filtered tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String showFilteredTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        // Message header"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String message \u003d \"Here are the matching tasks in your list.\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"You have \" + taskList.getSize()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + (taskList.getSize() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" that match.\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        message +\u003d showTaskListBodyMessage(taskList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Formats and returns the given \u003ccode\u003eerrorMessage\u003c/code\u003e."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param errorMessage Error message."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Formatted error message."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String showErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"ERRORS: \" + errorMessage;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns the farewell message."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Farewell message."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String showFarewellMessage() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String farewell;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        farewell \u003d \"It is my honor to have served you.\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"Please come back again.\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return farewell;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string of the given old list of tasks."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList Old list of tasks."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String of old list of tasks."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String showOldTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        // Message header"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String message \u003d \"Here are the current tasks after undoing the previous commands.\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \"You have \" + taskList.getSize()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + (taskList.getSize() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" in total.\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        message +\u003d showTaskListBodyMessage(taskList);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns the message body for the list of tasks."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to be listed out."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Message body for the list of tasks."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private String showTaskListBodyMessage(TaskList taskList) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String taskListBodyMessage \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskListBodyMessage +\u003d \"\\n\" + (i + 1) + \": \" + taskList.getTask(i);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskListBodyMessage;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 139
    }
  },
  {
    "path": "src/main/java/butler/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a deadline task with the given \u003ccode\u003esummary\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * and \u003ccode\u003edeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param summary Summary of this task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param deadline Deadline for this task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public DeadlineTask(String summary, LocalDate deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private String getDeadlineString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return deadline.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + deadline.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + deadline.getYear();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this deadline task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this deadline task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" (by: \" + getDeadlineString() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this task for storage in hard disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this task for storage in hard disk."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return super.toStorageString()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" /by \" + deadline;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a deep copy of this task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A deep copy of this task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task copy() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        DeadlineTask task \u003d new DeadlineTask(summary, deadline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        task.isComplete \u003d this.isComplete;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 63
    }
  },
  {
    "path": "src/main/java/butler/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task occurring over a period of time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * This task has a starting date and ending date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final LocalDate startDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private final LocalDate endDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs an event task with the given \u003ccode\u003esummary\u003c/code\u003e,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * \u003ccode\u003estartDate\u003c/code\u003e and \u003ccode\u003eendDate\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param summary Summary of this task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param startDate Starting date of this task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param endDate Ending date of this task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public EventTask(String summary, LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the time period of this event task in human readable format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Time period of this event task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getEventPeriod() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return startDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + startDate.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + startDate.getYear() + \" to \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + endDate.getYear();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this event task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" (from: \" + getEventPeriod() + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this task for storage in hard disk."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this task for storage in hard disk."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return super.toStorageString()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + \" /at \" + startDate + \" \" + endDate;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a deep copy of this task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A deep copy of this task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task copy() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        EventTask task \u003d new EventTask(summary, startDate, endDate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        task.isComplete \u003d this.isComplete;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 75
    }
  },
  {
    "path": "src/main/java/butler/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * \u003ccode\u003eTask\u003c/code\u003e has a summary, a completion status and type."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * All tasks are initialised as incomplete by default."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    protected final String summary;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    protected boolean isComplete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs an incomplete task with the given \u003ccode\u003esummary\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param summary Summary of this task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task(String summary) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.isComplete \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the summary of this task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Summary of this task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Marks this task as complete."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void markComplete() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        isComplete \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return (isComplete ? \"[Y]\" : \"[N]\") + \" \" + summary;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this task for storage in hard disk."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this task for storage in hard disk."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return (isComplete ? \"complete\" : \"incomplete\") + \" \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                + taskType.toString() + \" \" + summary;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a deep copy of this task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A deep copy of this task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public abstract Task copy();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 67
    }
  },
  {
    "path": "src/main/java/butler/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a pre-filled list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * The list of tasks is given by \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList List of tasks to populate list with."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs an empty list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the number of tasks in this list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Number of tasks in this list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Gets the task at the specified \u003ccode\u003etaskIndex\u003c/code\u003e."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Valid indexes range from 0 to less than the size of this list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Task at the specified \u003ccode\u003etaskIndex\u003c/code\u003e."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return taskList.get(taskIndex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Adds the given \u003ccode\u003etask\u003c/code\u003e to this list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param task Task to be added to this list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Marks the task at the specified \u003ccode\u003etaskIndex\u003c/code\u003e as complete."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Valid indexes range from 1 to the size of this list of tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of the task to mark as complete."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the index is out of range."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void completeTask(int taskIndex) throws ButlerException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskList.get(taskIndex - 1).markComplete();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please give a valid index. \\\"\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + taskIndex + \"\\\" is not a valid index.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Removes the task at the specified \u003ccode\u003etaskIndex\u003c/code\u003e from this list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Valid indexes range from 1 to the size of this list of tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskIndex Index of the task to be removed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if the index is out of range."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void deleteTask(int taskIndex) throws ButlerException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            taskList.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"Please give a valid index. \\\"\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                    + taskIndex + \"\\\" is not a valid index.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Produces a sub list of tasks that contains the given \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param keyword Keyword by which tasks are filtered by."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A list of tasks that contains the given \u003ccode\u003ekeyword\u003c/code\u003e."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ArrayList\u003cTask\u003e filteredArrayList \u003d taskList.stream()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                .filter(t -\u003e t.getSummary().contains(keyword))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return new TaskList(filteredArrayList);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a deep copy of this task list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Deep copy of this task list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList copy() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ArrayList\u003cTask\u003e taskListCopy \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskList.forEach(t -\u003e taskListCopy.add(t.copy()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return new TaskList(taskListCopy);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 115
    }
  },
  {
    "path": "src/main/java/butler/task/TaskListManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import butler.exception.ButlerException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task list manager that manages the history of changes of a task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class TaskListManager {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private ArrayList\u003cTaskList\u003e taskListHistory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    private TaskList currentTaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Creates a manager for a task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList Task list to be managed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskListManager(TaskList taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.currentTaskList \u003d taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Adds the latest task list to the manager."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Updates the history of the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param taskList Latest task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void addLatestTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskListHistory.add(currentTaskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.currentTaskList \u003d taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns the current task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Current task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList getCurrentTaskList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return currentTaskList;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns the task list from \u003ccode\u003eundoCount\u003c/code\u003e changes before."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Reverts the history of the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param undoCount Number of commands to undo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return Task List from \u003ccode\u003eundoCount\u003c/code\u003e changes before."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @throws ButlerException if \u003ccode\u003eundoCount\u003c/code\u003e is more than the number of changes"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *                         in history or is negative."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public TaskList getPastTaskList(int undoCount) throws ButlerException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        int size \u003d taskListHistory.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (undoCount \u003e size) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"There is not enough past changes to undo.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        if (undoCount \u003c\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            throw new ButlerException(\"You need to reverse a positive number of changes.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        // Copies a new task history"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        int newTaskHistorySize \u003d size - undoCount;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ArrayList\u003cTaskList\u003e newTaskListHistory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        for (int i \u003d 0; i \u003c newTaskHistorySize; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            newTaskListHistory.add(taskListHistory.get(i).copy());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        // Update manager"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        currentTaskList \u003d taskListHistory.get(newTaskHistorySize);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        taskListHistory \u003d newTaskListHistory;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return currentTaskList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 74
    }
  },
  {
    "path": "src/main/java/butler/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Enums for task types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * There are three possible task types which are deadline, event and todo."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return name().toLowerCase();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 14
    }
  },
  {
    "path": "src/main/java/butler/task/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * Represents a task to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " * This task has a summary."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Constructs a task with the given \u003ccode\u003esummary\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @param summary Summary of this task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public ToDoTask(String summary) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        super(summary);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        this.taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a string representation of this task for storage in hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return String representation of this task for storage in hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return super.toStorageString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * Returns a deep copy of this task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     * @return A deep copy of this task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public Task copy() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ToDoTask task \u003d new ToDoTask(summary);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        task.isComplete \u003d this.isComplete;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 50
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"butler.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type command here.\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            \u003cFont size\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "      \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 30
    }
  },
  {
    "path": "src/test/java/butler/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ExitCommand c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(true, c.isExit());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 14
    }
  },
  {
    "path": "src/test/java/butler/command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ListCommand c \u003d new ListCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(false, c.isExit());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 14
    }
  },
  {
    "path": "src/test/java/butler/exception/ButlerExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class ButlerExceptionTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void getMessageTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        ButlerException e \u003d new ButlerException(\"Test Message\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(\"Test Message\", e.getMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 14
    }
  },
  {
    "path": "src/test/java/butler/io/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void showTaskIsDeletedTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        String expectedOutput \u003d \"Task 1 has been deleted.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(expectedOutput, ui.showTaskIsDeleted(1));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 14
    }
  },
  {
    "path": "src/test/java/butler/task/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "package butler.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    public void getTimeTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        EventTask eventTask \u003d new EventTask(\"summary\", LocalDate.parse(\"2020-02-12\"), LocalDate.parse(\"2021-12-12\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "        assertEquals(\"12 FEBRUARY 2020 to 12 DECEMBER 2021\", eventTask.getEventPeriod());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "todo sth"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "deadline do this /by this date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event conduct event /at this location"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "done 0 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "done 1 2 3 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "ekwjwl"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "deadline ewff /at ewsf"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "comment"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event cwfwe /by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "event ffwef /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDoTask.java ..\\src\\main\\java\\EventTask.java ..\\src\\main\\java\\DeadlineTask.java ..\\src\\main\\java\\Butler.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hopinxian"
        },
        "content": "java -classpath ..\\bin Butler \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hopinxian": 2,
      "-": 19
    }
  }
]
