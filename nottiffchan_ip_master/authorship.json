[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "T , 0 , homework , "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "D , 1 , return book , 2020-07-30"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "E , 1 , read book , 2020-08-01"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "E , 0 , eat book , 2015-04-12"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "D , 0 , dinner , 2012-01-02"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 5
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "T , 0 , homework , "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "D , 1 , return book , 2020-07-30"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "E , 1 , read book , 2020-08-01"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "E , 0 , huh , 2015-04-12"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "E , 1 , ije , 2012-01-02"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 5
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Command when a new Task is to be added to TaskList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    String[] words;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param words Array that contains the different segments of a Task input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public AddCommand(String[] words) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.words \u003d words;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    private void printAddedOutput(Task t, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"Mr Camel has added: \" + t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"\\tNumber of tasks: \" + tasks.getTasklist().size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Adds a Todo, Event or Deadline object to Tasklist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks TaskList containing Tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param ui Ui object that handles printing of any necessary output."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param storage Storage object that handles saving Tasks to hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException a DukeException."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws IOException an IOException."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String command \u003d this.words[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Task t \u003d new Task(\"null\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                t \u003d tasks.addToDo(this.words[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                t \u003d tasks.addDeadline(this.words[1], this.words[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                t \u003d tasks.addEvent(this.words[1], this.words[2]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                throw new DukeException(\"Word not recognised!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        printAddedOutput(t, tasks, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 58
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Implements the parent structure of all Commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Getter for isExit."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return boolean to indicate whether or not to break the main loop in Duke class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Passes the Tasks in TaskList to Storage to update to hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks TaskList containing Tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param ui Ui object that handles printing of any necessary output."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param storage Storage object that handles saving Tasks to hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws IOException IOException."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        storage.update(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 33
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Implements a Deadline Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    protected DukeDate by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param description String denoting the name of the Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param by String denoting the date of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException a DukeException."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.by \u003d new DukeDate(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of a Deadline object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of a Deadline object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of Deadline Task in a format to be saved in hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of Deadline Task in a format to be saved in hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return \"D , \" + super.fileFormat() + by.getStringDate();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 36
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Carries out the deletion of tasks from tasklist, and saves the changes to hard disk."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    int taskIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param taskIndex Integer indicating the index of task to be deleted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Prints output of task deletion as well as delete the task, thereafter saving to hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks TaskList containing Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param ui Ui object that handles printing of any necessary output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param storage Storage object that handles saving Tasks to hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws IOException IOException."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Task t \u003d tasks.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"Mr Camel will delete this task:\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"\\t\" + t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"Number of tasks: \" + tasks.getTasklist().size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 38
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Command invoked when a task is called to be marked as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    int taskIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param taskIndex Integer indicating the index of task to be marked as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Marks task as done, prints output, saves changes to hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks TaskList containing Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param ui Ui object that handles printing of any necessary output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param storage Storage object that handles saving Tasks to hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws IOException IOException."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Task t \u003d tasks.doneTask(taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"Mr Camel will mark this task as done:\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"\\t\" + t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 37
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Engages all the other classes to execute Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public static String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param filePath filepath."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Loops to continuously check for user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                ui.printError((DukeException) e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 49,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Class to convert between a String object and LocalDate object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class DukeDate {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    final String formatPattern \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    String stringDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param stringDate a String date in format yyyy-mm-dd."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public DukeDate(String stringDate) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            this.stringDate \u003d stringDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            this.date \u003d LocalDate.parse(stringDate);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"Invalid date!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Getter for the String format of the date."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representing the date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String getStringDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return this.stringDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of date in format formatPattern provided."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of date in format formatPattern provided."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(formatPattern));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 44
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Encompasses exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param errorMsg Error message to print."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        super(\"OOPS!!! \" + errorMsg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 14
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Implements an Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    protected DukeDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.at \u003d new DukeDate(at);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of Event object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of Event object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of Event object to be saved to hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of Event object to be saved to hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return \"E , \" + super.fileFormat() + at.getStringDate();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 30
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Exits the main loop in Duke class as well as prints goodbye message when \"bye\" is received as input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Changes isExit to true to quit the main loop. Prints goodbye message and saves the list to hard disk"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks TaskList containing Tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param ui Ui object that handles printing of any necessary output."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param storage Storage object that handles saving Tasks to hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws IOException IOException."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 23
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Locates tasks that contain the given keyword, storing them in an arraylist."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.keyword \u003d keyword.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Locates tasks that contain the given keyword, storing them in an arraylist."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks TaskList containing Tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param ui Ui object that handles printing of any necessary output."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param storage Storage object that handles saving Tasks to hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws IOException IOException."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        for (Task t : tasks.getTasklist()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            System.out.println(\"TASK: \" + t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                relevantTasks.add(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"Here are the matching tasks Mr Camel found:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        for (Task t : relevantTasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            ui.printMsg(counter + \". \" + t.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 44
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Command invoked when list is passed as input. Prints out current contents of TaskList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Prints the contents of the TaskList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks TaskList containing Tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param ui Ui object that handles printing of any necessary output."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param storage Storage object that handles saving Tasks to hard disk."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ArrayList\u003cTask\u003e tasklist \u003d tasks.getTasklist();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printMsg(\"Tasks\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        for (int i \u003d 1; i \u003c tasklist.size() + 1; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            ui.printMsg(\"\\t\" + i + \". \" + tasklist.get(i-1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        ui.printDivider();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 28
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Parses string input and invokes different commands for different inputs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Parses the raw chunk of user input and returns a Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param line the line of input given as a string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return Command object representing different commands available."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public static Command parse(String line) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Scanner sc \u003d new Scanner(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String sentence \u003d sc.next();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        switch (sentence) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new AddCommand(parseToDo(sc.nextLine()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new AddCommand(parseDeadline(sc.nextLine()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new AddCommand(parseEvent(sc.nextLine()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new DoneCommand(sc.nextInt());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new DeleteCommand(sc.nextInt());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new FindCommand(sc.nextLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"Sorry, I\u0027m not sure what that means :(\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    private static String[] parseToDo(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        if (nextLine.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"Please give description!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String[] words \u003d {\"todo\", nextLine.trim()};"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return words;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    private static String[] parseDeadline(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String[] temp \u003d nextLine.split(\"/by\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String description \u003d temp[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String by \u003d temp[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        if (description.length() \u003c\u003d 0 || by.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"Please provide both a description and date in format \u0027description /by date\u0027!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String[] words \u003d {\"deadline\", description, by};"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return words;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    private static String[] parseEvent(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String[] temp \u003d nextLine.split(\"/at\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String description \u003d temp[0].trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String at \u003d temp[1].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        if (description.length() \u003c\u003d 0 || at.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"Please provide both a description and date in format \u0027description /at date\u0027!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String[] words \u003d {\"event\", description, at};"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return words;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 75
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Implements the loading and storing of Tasks to an external text file.."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    String filePath \u003d Duke.filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * If the text file does not exist, create a file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param f Text file to check existence for."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws IOException IOException."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void checkFileExistence(File f) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Method to update current task list to disk."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks TaskList that represents a collection of Task objects."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void update(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            checkFileExistence(this.file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.getTasklist().size() + 1; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                Task t \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                String text \u003d t.fileFormat() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                bw.write(text);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"Can\u0027t update file!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Method to load list of tasks from disk and make a new TaskList object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return TaskList that represents a collection of Task objects."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            checkFileExistence(file);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                Task t \u003d processTaskToLoad(s.nextLine());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                storedTasks.add(t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return new TaskList(storedTasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Checks if a Task object has been marked as done."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param s the character that denotes whether a Task has been completed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param task the task object that is being checked."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void checkIfDone(String s, Task task) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        if (s.equals(\"1\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Convert the task from String format in the disk to a Task object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param line string of input from the disk in hard disk format."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return a Task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    private Task processTaskToLoad(String line) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String[] data \u003d line.split(\" , \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Task t \u003d new Task(\"null\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            t \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            checkIfDone(data[1], t);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            t \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            checkIfDone(data[1], t);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        if (data[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            t \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            checkIfDone(data[1], t);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 122
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Represents a Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return isDone ? \"X\" : \" \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of Task object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of Task object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of Task object to be saved to hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of Task object to be saved to hard disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String indicateDone \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return indicateDone + \" , \" + description + \" , \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 48
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Meant to represent an ArrayList of Tasks to simplify operations done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param tasks an ArrayList of Tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.tasklist \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Getter for the ArrayList of Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return the ArrayList of Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasklist() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return this.tasklist;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Adds a Todo object to the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param description Description of the Todo object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return the ToDo object added to list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Task addToDo(String description) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Task t \u003d new Todo(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.tasklist.add(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Adds a Deadline object to the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param description Description of the Deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param by the Deadline object\u0027s deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return the Deadline object added."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Task addDeadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Task t \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.tasklist.add(t);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Adds an Event object to the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param description The Event object\u0027s description."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param at the date at which the event is being held."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return the Event object added."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Task addEvent(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Task t \u003d new Event(description, at);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.tasklist.add(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Removes a task from the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param taskIndex The index of the task that is to be removed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return the Task removed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Task deleteTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            Task t \u003d this.tasklist.get(taskIndex - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            this.tasklist.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Marks a Task as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param taskIndex The index of the task to be marked as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return the Task marked as done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @throws DukeException DukeException."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Task doneTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            Task t \u003d tasklist.get(taskIndex - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Getter for the Task at given index."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param index index of the Task to be returned."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return the Task at given index."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return tasklist.get(index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 106
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Implements a ToDo Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param description Title of the Todo Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of Todo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of Todo object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * String representation of Todo object to be saved to hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return String representation of Todo object to be saved to hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return \"T , \" + super.fileFormat();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 31
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " * Deals with reading the input and printing the output."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Takes in the next input line."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @return the next input line."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Prints the divider line that output is nested in."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void printDivider() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        System.out.println(\"\\t______________________________________________\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Prints divider line for errors."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void printErrorDivider() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        System.out.println(\"\\t!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Prints welcome message when application starts up."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        String MrCamel \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                \"\\t                  ,,__\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                        + \"\\t        ..  ..   / o._)\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                        + \"\\t       /--\u0027/--\\\\  \\\\-\u0027|| \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                        + \"\\t      /        \\\\_/ / |\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                        + \"\\t    .\u0027\\\\  \\\\__\\\\  __.\u0027.\u0027\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                        + \"\\t      )\\\\ |  )\\\\ |\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                        + \"\\t     // \\\\\\\\ // \\\\\\\\\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                        + \"\\t    ||_  \\\\\\\\|_  \\\\\\\\_\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "                        + \"\\t    \u0027--\u0027 \u0027--\u0027\u0027 \u0027--\u0027\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        System.out.println(\"\\tMr Camel says hello. What can Mr Camel do for you today?\\n\" + MrCamel);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Prints goodbye message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        System.out.println(\"\\tBye. Mr Camel will miss you! :(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param e the DukeException."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void printError(DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        printErrorDivider();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        System.out.println(\"\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        printErrorDivider();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * Prints a message passed as argument."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     * @param msg an arbitrary sentence to be printed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void printMsg(String msg) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        System.out.println(\"\\t\" + msg);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 85
    }
  },
  {
    "path": "src/main/java/duke/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "E , 1 , croccy , 2020-03-01"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "D , 0 , huhuh , 2020-03-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "T , 1 , hi , "
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 3
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void checkStringOutput() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Deadline d \u003d new Deadline(\"return book\", \"2020-08-28\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        assertEquals(\"[D][ ] return book (by: Aug 28 2020)\", d.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        d.markAsDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        assertEquals(\"[D][X] return book (by: Aug 28 2020)\", d.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void checkFileFormat() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Deadline d \u003d new Deadline(\"birthday party\", \"2040-01-01\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        assertEquals(\"D , 0 , birthday party , 2040-01-01\", d.fileFormat());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        d.markAsDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        assertEquals(\"D , 1 , birthday party , 2040-01-01\", d.fileFormat());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 23
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void checkStringOutput() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Event e \u003d new Event(\"workshop\", \"2020-08-28\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        assertEquals(\"[E][ ] workshop (at: Aug 28 2020)\", e.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        e.markAsDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        assertEquals(\"[E][X] workshop (at: Aug 28 2020)\", e.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void checkFileFormat() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        Event e \u003d new Event(\"birthday party\", \"2040-01-01\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        assertEquals(\"E , 0 , birthday party , 2040-01-01\", e.fileFormat());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        e.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        assertEquals(\"E , 1 , birthday party , 2040-01-01\", e.fileFormat());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 23
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void testParse_listCommand() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            Command c \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            assertTrue(c instanceof ListCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    public void testParse_invalidCommand() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            Command c \u003d Parser.parse(\"rtdcfghuiygtfcg\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "            assertEquals(\"OOPS!!! Sorry, I\u0027m not sure what that means :(\", e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "deadline return book /by tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nottiffchan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nottiffchan": 1,
      "-": 20
    }
  }
]
