[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 16,
      "-": 46
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "T | 0 | read book | -"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "T | 0 | buy bread | -"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "D | 0 | essay submission (by: 15 Oct 2020) | 2020-10-15"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "E | 0 | project meeting (at: 21 Nov 2020) | 2020-11-21"
      }
    ],
    "authorContributionMap": {
      "thutahw": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class that contains Deadline tasks with the type \"D\"."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param desc the description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param isDone the status icon of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param time the time of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Deadline(String desc, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        super(desc, isDone, time);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        type \u003d \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 30
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * The class with the chat bot dealing with the user\u0027s inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        storage \u003d new Storage(Path.of(filePath));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            taskList \u003d new TaskList(storage.showTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        storage \u003d new Storage(Path.of(\"duke.txt\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            taskList \u003d new TaskList(storage.showTasks());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String trimmed \u003d input.trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String first \u003d trimmed.split(\" \")[0].trim(); // checking the first word"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String last \u003d input.substring(first.length()).trim(); // get rid of the first word"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        switch (first) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return Parser.parseDone(last, taskList, storage, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return Parser.parseToDo(last, taskList, storage, ui);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return Parser.parseDeadline(last, taskList, storage, ui, formatter);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return Parser.parseEvent(last, taskList, storage, ui, formatter);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        case \"find\":   // finds the task even if the keyword matches the task partially"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            ArrayList\u003cTask\u003e findTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                if (task.getDescription().contains(last)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    findTasks.add(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return ui.printMatchingTasks(findTasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return Parser.parseDelete(last, taskList, storage, ui);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return ui.showList(taskList.getTasks());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return ui.exit();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return ui.invalidInput();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 86,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * An exception class related to the Duke class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param msg message to be printed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class that contains event tasks with the type \"E\"."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param desc description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param isDone status icon."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param time time of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Event(String desc, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        super(desc, isDone, time);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        type \u003d \"E\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 31
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class that launches the GUI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "thutahw": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String input \u003d \"Wazzup! I am Duke the Nuke \\uD83D\\uDE08\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                + \"What do you want?\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(input, dukeImage));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class that takes in user\u0027s input and performs tasks using it."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Makes a todo Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param last the description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param taskList the taskList containing current tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param storage the storage to store tasks in the hard disk"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param ui to interact with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return a String containing the message related to a Todo task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static String parseToDo(String last, TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            Todo todo \u003d Todo.makeToDo(last, false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            taskList.addTask(todo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            storage.saveTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return ui.addTask() + todo.toString() + \"\\n\" + ui.showNumberOfTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return \"Todo cannot be empty\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Makes a deadline Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param last the description of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param taskList the taskList containing current tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param storage the storage to store tasks in the hard disk"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param ui to interact with the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param formatter the datetimeformatter to format the date."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return a String containing the message related to a deadline task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @throws DukeException to indicate that it cannot save tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static String parseDeadline(String last, TaskList taskList, Storage storage, Ui ui, DateTimeFormatter formatter) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String job \u003d last.split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String time \u003d last.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Deadline work \u003d new Deadline(job + \" (by: \" + formatter.format(date) + \")\", false, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        taskList.addTask(work);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        storage.saveTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return ui.addTask() + work.toString() + \"\\n\" + ui.showNumberOfTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Makes a event Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param last the description of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param taskList the taskList containing current tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param storage the storage to store tasks in the hard disk"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param ui to interact with the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param formatter the datetimeformatter to format the date."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return a String containing the message related to an event task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @throws DukeException to indicate that it cannot save tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static String parseEvent(String last, TaskList taskList, Storage storage, Ui ui, DateTimeFormatter formatter) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String job \u003d last.split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String time \u003d last.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Event work \u003d new Event(job + \" (at: \" + formatter.format(date) + \")\", false, date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        taskList.addTask(work);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        storage.saveTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return ui.addTask() + work.toString() + \"\\n\" + ui.showNumberOfTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Marks a task as done and updates the records."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param last the description of the task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param taskList the taskList containing current tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param storage the storage to store tasks in the hard disk"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param ui to interact with the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return a String containing the message related to the task that is done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @throws DukeException to indicate that it cannot save tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static String parseDone(String last, TaskList taskList, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        int id \u003d Integer.parseInt(last) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String changed \u003d taskList.getTask(id).getDescription();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String type \u003d taskList.getTask(id).getType();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        taskList.getTask(id).markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        storage.saveTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return ui.doneTask() + \"[\" + type + \"][\" + \"\\u2713\" + \"]\" + changed + \"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Marks a task as done and updates the records."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param last the description of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param taskList the taskList containing current tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param storage the storage to store tasks in the hard disk"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param ui to interact with the user."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return a String containing the message related to the task that is deleted."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @throws DukeException to indicate that it cannot save tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static String parseDelete(String last, TaskList taskList, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        int index \u003d Integer.parseInt(last) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String deleted \u003d taskList.getTask(index).getDescription();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String deletedType \u003d taskList.getTask(index).getType();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String status \u003d taskList.getTask(index).getStatusIcon();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Task removedTask \u003d taskList.removeTask(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        storage.saveTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return ui.removeTask() + \"[\" + deletedType + \"][\" + status + \"] \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                + deleted + \"\\n\" + ui.showNumberOfTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 106
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class responsible for saving and loading tasks to and from the hard disk respectively."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private final Path path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Storage(Path path) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Loads the tasks from the hard disk. Creates a new file if the file doesnt exist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return the arrayList containing the tasks stored in the hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @throws DukeException an exception with the \"failure to load\" message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public ArrayList\u003cTask\u003e showTasks() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            assert path !\u003d null : \"Path cannot be null\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                Files.createFile(path);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            Stream\u003cTask\u003e taskStream \u003d Files.lines(path).map(item -\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                String[] dataArray \u003d item.split(\"\\\\|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                String taskType \u003d dataArray[0].trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                boolean isDone \u003d dataArray[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                String taskDescription \u003d dataArray[2].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                String time \u003d dataArray[3].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    task \u003d new Todo(taskDescription, isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    task \u003d new Deadline(taskDescription, isDone, LocalDate.parse(time));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    task \u003d new Event(taskDescription, isDone, LocalDate.parse(time));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            taskStream.forEach(tasks::add); // add tasks from the hard disk to the arrayList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            throw new DukeException(\"Unable to load tasks\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Saves the tasks to the hard disk."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param taskList arrayList containing the tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @throws DukeException an exception with the \"failure to save\" message"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        for (Task tsk : taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            String time \u003d tsk.getTime() \u003d\u003d null ? \"-\" : tsk.getTime().toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            String entry \u003d tsk.getType() + \" | \" + tsk.getStatus() + \" | \" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    tsk.getDescription() + \" | \" + time  + System.lineSeparator();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            message \u003d message.concat(entry);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            Files.write(path, message.getBytes());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            throw new DukeException(\"Unable to save the tasks.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 96
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class representing the general tasks valid for the Duke class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Task(String task, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        description \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        type \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Gets the task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return \"[\" + this.getType() + \"]\" + \"[\" + this.getStatusIcon() + \"]\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                \" \" + this.getDescription();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class representing the current tasks in a list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Adds the task to the arraylist."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Removes the task from the arraylist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param index the index of the task to be removed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return the task removed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Task task \u003d this.tasks.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 41
    }
  },
  {
    "path": "src/main/java/Tasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Tasks {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public ArrayList\u003cString\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Tasks() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void addTask(String task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        System.out.println(\"added : \" + task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void getList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Iterator\u003cString\u003e iter \u003d taskList.iterator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            System.out.println(index + \". \" + iter.next());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class that has tasks with the type \"T\" which represents Todo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param desc the description of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param isDone the status Icon of the todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Todo(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        super(desc, isDone, null);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        type \u003d \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Checks the given task is a valid todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param desc the description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param isDone the status icon of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return a Todo if the input is valid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @throws DukeException with the message that the todo cannot be empty."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public static Todo makeToDo(String desc, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        if (desc.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return new Todo(desc, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return the type \"T\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 46
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": " * A class responsible for interactions with the user and showing success/failure messages."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints out the given message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Reads the next line from the scanner."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @return the next line"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the loading error message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        printMessage(\"Unable to load tasks\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the welcome message for the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return \"Wazzup! I am Duke the Nuke \\uD83D\\uDE08\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                + \"What do you want?\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the exit message for the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return \"Sayonara!\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the \"invalid input\" error message."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String invalidInput() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the addTask message."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String addTask() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the removeTask message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String removeTask() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the doneTask message."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String doneTask() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the showList message with the list of tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String showList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String header \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d taskList.iterator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            Task currentTask \u003d iter.next();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            String next \u003d currentTask.getDescription();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            message \u003d message + index + \".\" + \"[\" + currentTask.getType() + \"][\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                    + currentTask.getStatusIcon() + \"] \" + next + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return header + message;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the statement with the number of tasks."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * @param tasks the list containing the tasks."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String showNumberOfTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     * Prints the matchingTasks message with the matching tasks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thutahw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    public String printMatchingTasks(ArrayList\u003cTask\u003e findTasks) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String header \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        String found \u003d \"\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        for (Task tsk : findTasks) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            String desc \u003d  tsk.getDescription();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            String taskType \u003d tsk.getType();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            String statusIcon \u003d tsk.getStatusIcon();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            found \u003d found + index + \".\" + \"[\" + taskType + \"][\" + statusIcon + \"] \" + desc + \"\\n\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        return header + found;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "thutahw": 137
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "thutahw": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thutahw"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thutahw"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "thutahw": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book /by 2020-12-31\", false, LocalDate.parse(\"2020-12-31\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        assertEquals(\"\\u2718\", deadline.getStatusIcon()) ;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 15
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Event event \u003d new Event(\"project meeting /at 2020-12-31\", false, LocalDate.parse(\"2020-12-31\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        assertEquals(\"E\", event.getType());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 14
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        Todo todo \u003d new Todo(\"read book\", false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "        assertEquals(\"read book\", todo.getDescription());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thutahw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thutahw": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thutahw"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thutahw"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thutahw"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thutahw"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thutahw"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thutahw"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thutahw"
        },
        "content": "bye"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "thutahw": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thutahw"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thutahw"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thutahw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thutahw"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "thutahw": 4,
      "-": 20
    }
  }
]
