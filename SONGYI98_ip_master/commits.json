{
  "authorDailyContributionsMap": {
    "SONGYI98": [
      {
        "date": "2020-08-19",
        "commitResults": [
          {
            "hash": "bf81fb499f67275f930b351498643f7e7701df2d",
            "messageTitle": "Edit Duke\u0027s greeting",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 4,
                "deletions": 2
              }
            }
          },
          {
            "hash": "099d4675d1399a2eedcbb1af46c4c3f341238779",
            "messageTitle": "Implement echo and exit features",
            "messageBody": "",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 3,
                "deletions": 0
              },
              "java": {
                "insertions": 14,
                "deletions": 0
              }
            }
          },
          {
            "hash": "bb13e545290308db1df44de4cc28745992cfa5b2",
            "messageTitle": "Implement add and list features",
            "messageBody": "",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 1
              },
              "java": {
                "insertions": 27,
                "deletions": 2
              },
              "bat": {
                "insertions": 1,
                "deletions": 1
              },
              "sh": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-20",
        "commitResults": [
          {
            "hash": "b4b2ea171efe592d43fb775421ba5be66234144d",
            "messageTitle": "Implement the ability to mark tasks as done",
            "messageBody": "",
            "tags": [
              "Level-3",
              "A-Classes"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 27,
                "deletions": 8
              },
              "bat": {
                "insertions": 2,
                "deletions": 0
              },
              "sh": {
                "insertions": 2,
                "deletions": 0
              }
            }
          },
          {
            "hash": "7de7cc73a17aa3b5b29fa0ca3a9a66904b512005",
            "messageTitle": "Encapsulate the printing of a task",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 7,
                "deletions": 3
              }
            }
          },
          {
            "hash": "fce7dd45f946aaeb2c3cbbd2d8e0e542835509c0",
            "messageTitle": "Implement todo, event and deadline features",
            "messageBody": "",
            "tags": [
              "Level-4",
              "A-TextUiTesting",
              "A-Inheritance"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 5
              },
              "java": {
                "insertions": 76,
                "deletions": 5
              }
            }
          },
          {
            "hash": "6d0237b0c0451d0b400fb2d8a37afacae4bce9e4",
            "messageTitle": "Add comments to Java classes",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 28,
                "deletions": 4
              }
            }
          },
          {
            "hash": "905df4595cd1399595b9897c962d85130299aced",
            "messageTitle": "Encapsulate the processing of inputs",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 83,
                "deletions": 52
              }
            }
          },
          {
            "hash": "530ad41d798b20cf22571f2b094e92422c901739",
            "messageTitle": "Handle invalid user inputs",
            "messageBody": "",
            "tags": [
              "Level-5",
              "A-Exceptions"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 15,
                "deletions": 1
              },
              "java": {
                "insertions": 77,
                "deletions": 26
              }
            }
          },
          {
            "hash": "e9fab16429a3258d10e63e007d34cf6eeed579e7",
            "messageTitle": "Implement delete feature",
            "messageBody": "",
            "tags": [
              "Level-6",
              "A-Collections"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 1
              },
              "java": {
                "insertions": 41,
                "deletions": 10
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-25",
        "commitResults": [
          {
            "hash": "28ebe59ebf18f4d7e5b3259afafbb44cdef692d9",
            "messageTitle": "Create duke.txt when user first launches Duke",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 0,
                "deletions": 0
              },
              "java": {
                "insertions": 48,
                "deletions": 1
              }
            }
          },
          {
            "hash": "69723895df7429f2278b6761d894b5952d434513",
            "messageTitle": "Save tasks\u0027 data to duke.txt",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 3,
                "deletions": 0
              },
              "java": {
                "insertions": 56,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-26",
        "commitResults": [
          {
            "hash": "b762d07828ea6158689ff30a8f113cdb1947b2b3",
            "messageTitle": "Store event and deadline dates and times as LocalDateTime",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 4,
                "deletions": 1
              },
              "java": {
                "insertions": 44,
                "deletions": 14
              }
            }
          },
          {
            "hash": "2f49dd29c651764edc79a8a21881bdb0ff0eeadf",
            "messageTitle": "Allow user to get tasks from a certain date",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 4,
                "deletions": 0
              },
              "java": {
                "insertions": 58,
                "deletions": 1
              }
            }
          },
          {
            "hash": "17bb2b39bf73429012a1a545841fbe5dbea1b559",
            "messageTitle": "Load data from duke.txt when Duke starts up",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 4
              },
              "java": {
                "insertions": 96,
                "deletions": 25
              }
            }
          },
          {
            "hash": "eee4e17ec491597a3eca99f964e125ce42777497",
            "messageTitle": "Use more OOP in the code",
            "messageBody": "",
            "tags": [
              "A-MoreOOP"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 7,
                "deletions": 7
              },
              "java": {
                "insertions": 480,
                "deletions": 323
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-27",
        "commitResults": [
          {
            "hash": "cfa8ccb045616eec7fba823d26746f9701ede46d",
            "messageTitle": "Divide Java classes into packages",
            "messageBody": "",
            "tags": [
              "A-Packages"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 43,
                "deletions": 0
              },
              "bat": {
                "insertions": 2,
                "deletions": 2
              },
              "sh": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "7ac8b3abbcf1ce954aa230e94de7fc58c68748a0",
            "messageTitle": "Add JUnit tests for Parser and DateTimeHandler classes",
            "messageBody": "",
            "tags": [
              "A-JUnit"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 102,
                "deletions": 0
              }
            }
          },
          {
            "hash": "70374ae6105a022840dd096b44fcf5c289952a24",
            "messageTitle": "Configure build.gradle to create JAR file",
            "messageBody": "",
            "tags": [
              "A-Jar"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "420ca250849ee64851fe502e8d28d7f3ba46b64e",
            "messageTitle": "Add comments to Java code",
            "messageBody": "Add comments to all field members, constructors and getter and setter\nmethods.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 123,
                "deletions": 1
              }
            }
          },
          {
            "hash": "18a7f6691aebef519a11e29eda68f26bdd0890a7",
            "messageTitle": "Comply with given coding standard",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 8,
                "deletions": 8
              }
            }
          },
          {
            "hash": "8de7ed3a33bdf053655f5a85a3f1809e46ca6f8f",
            "messageTitle": "Implement find feature",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 3,
                "deletions": 0
              },
              "java": {
                "insertions": 37,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-02",
        "commitResults": [
          {
            "hash": "d1d426dc176b83a19ea7b9de6c0a82c54eebf9a9",
            "messageTitle": "Edit code style to better adhere to coding standard",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 98,
                "deletions": 98
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-03",
        "commitResults": [
          {
            "hash": "27ce5b6074572158cfd1827d653c498b475f742d",
            "messageTitle": "Encapsulate execution of commands to Executor class",
            "messageBody": "Add Command enum class to represent all possible commands.\nThis allows code related to the execution of command to be abstracted\nout into a new Executor class.\n\nChange test cases in ParserTest to reflect this abstraction.\n",
            "tags": [
              "A-Enums"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 356,
                "deletions": 205
              }
            }
          },
          {
            "hash": "d3fb2ffc2bcf31bb2061f81884adecfca365cf43",
            "messageTitle": "Use Checkstyle to resolve coding style violations",
            "messageBody": "",
            "tags": [
              "A-CheckStyle"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              },
              "java": {
                "insertions": 38,
                "deletions": 21
              }
            }
          },
          {
            "hash": "1d73d8e24f8b48b898cba70e0942d2b2516ee89e",
            "messageTitle": "Implement GUI with JavaFX",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 7,
                "deletions": 0
              },
              "java": {
                "insertions": 209,
                "deletions": 9
              }
            }
          },
          {
            "hash": "c19624aa953b6070e1c2b13d78fa018e0d3d36a0",
            "messageTitle": "Use FXML for GUI design",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 35,
                "deletions": 0
              },
              "java": {
                "insertions": 132,
                "deletions": 169
              }
            }
          },
          {
            "hash": "81cc9bef1df0174bc10f0d0eb8e4c16aab496fc5",
            "messageTitle": "Integrate Duke logic into GUI",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 151,
                "deletions": 80
              }
            }
          },
          {
            "hash": "c3d88d2a54863dca07b438fca4153d33f3b2b346",
            "messageTitle": "Allow GUI to read and write data to storage",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 13,
                "deletions": 14
              }
            }
          },
          {
            "hash": "b919cf1f579accbbbf47e74fafc35067f9795fd8",
            "messageTitle": "Edit code style to better adhere to coding standard",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 15,
                "deletions": 11
              },
              "java": {
                "insertions": 34,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-09",
        "commitResults": [
          {
            "hash": "65084cc799df59705ab3daf28527d4ff86f16450",
            "messageTitle": "Configure build.gradle to create JAR file with GUI",
            "messageBody": "",
            "tags": [
              "v0.2"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "6499bd1e02ad185ab9e8b151930061348a2600d5",
            "messageTitle": "Add assertions to Parser class",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 2,
                "deletions": 0
              }
            }
          },
          {
            "hash": "b0b2f875e3f4f04d9500b2aa78367e0938a2f634",
            "messageTitle": "Improve code quality",
            "messageBody": "Use named constants to avoid magic literals for message strings.\n",
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 4,
                "deletions": 2
              },
              "java": {
                "insertions": 83,
                "deletions": 47
              }
            }
          },
          {
            "hash": "524b8a2cb2a6df65f35b0f22f7f77a4a4b0e650b",
            "messageTitle": "Use lambda to check task\u0027s index in Executor class",
            "messageBody": "Check if the task\u0027s index is outside the task list\u0027s size range.\n",
            "tags": [
              "A-Lambdas"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 8,
                "deletions": 13
              }
            }
          },
          {
            "hash": "34d7ea23bac12af6a83ae3319fefc3cdc59c17db",
            "messageTitle": "Use streams for filtering tasks in Executor class",
            "messageBody": "Streams are used to check if the task\u0027s date matches the required date\nand if the task\u0027s description matches the relevant keyword.\n",
            "tags": [
              "A-Streams"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 28,
                "deletions": 31
              }
            }
          },
          {
            "hash": "a3affbd0b63b3d783198754b1ef360d787e19b04",
            "messageTitle": "Set up continuous integration",
            "messageBody": "Add gradle.yml.\nReset Duke\u0027s data for I/O redirection test.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 0,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-10",
        "commitResults": [
          {
            "hash": "142aecf97d2a4fadc03503f17fd261d00e592a8d",
            "messageTitle": "Repackage Java classes",
            "messageBody": "Shift Storage and TaskList classes into existing util package.\nShift Executor and Parser classes into new logic package.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 1
              },
              "java": {
                "insertions": 25,
                "deletions": 5
              },
              "bat": {
                "insertions": 1,
                "deletions": 1
              },
              "sh": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "e080764f7a65c43a72f943024a2e1cb8d056e95a",
            "messageTitle": "Allow user to attach priority to a task",
            "messageBody": "Users have to attach low, medium or high priority to a task.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 13,
                "deletions": 11
              },
              "java": {
                "insertions": 152,
                "deletions": 36
              }
            }
          },
          {
            "hash": "efd7983cd15e52ade0deb39abcf01baf39df6cde",
            "messageTitle": "Implement the ability to filter tasks by priority",
            "messageBody": "",
            "tags": [
              "BCD-Extension"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 7,
                "deletions": 1
              },
              "java": {
                "insertions": 62,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-14",
        "commitResults": [
          {
            "hash": "2049baa82aae82b87d3e14f5b89a75ae62cf8903",
            "messageTitle": "Improve GUI design",
            "messageBody": "",
            "tags": [
              "A-BetterGui"
            ],
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 13,
                "deletions": 6
              },
              "java": {
                "insertions": 56,
                "deletions": 5
              }
            }
          },
          {
            "hash": "a495f527af34d99c5b1ddbb3701f81756c881692",
            "messageTitle": "Add README.md",
            "messageBody": "",
            "tags": [
              "A-UserGuide"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 1
              },
              "md": {
                "insertions": 191,
                "deletions": 8
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-15",
        "commitResults": [
          {
            "hash": "ddd21e0cdaa171460117929d590c0567758e8ff8",
            "messageTitle": "Display introduction message upon launching GUI",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 24,
                "deletions": 3
              }
            }
          },
          {
            "hash": "fbeee80057916c358a73a6ca858bba4f9708faa6",
            "messageTitle": "Fix GUI using different storage path",
            "messageBody": "CLI and GUI are now using the same storage path to store data.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 1
              },
              "java": {
                "insertions": 7,
                "deletions": 1
              }
            }
          },
          {
            "hash": "10f292252c4d7fc97ee50fc1428bb294409c8d98",
            "messageTitle": "Fix dialog box not expanding when text overrun",
            "messageBody": "Dialog box now expands vertically when there is text overrun.\n",
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 3,
                "deletions": 3
              }
            }
          },
          {
            "hash": "749058e89e47a48b48ee7eee2199be5931901511",
            "messageTitle": "Fix missing error for wrong formats of adding task",
            "messageBody": "An error is now shown to prompt the user to use the correct format when\nadding a task.\n",
            "tags": [
              "v1.0"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 31,
                "deletions": 12
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-29",
        "commitResults": [
          {
            "hash": "5b60fd83dc18041a92ccd516f838920db589f45c",
            "messageTitle": "Edit build.gradle",
            "messageBody": "Include JavaFX libraries for Mac and Linux.\n",
            "tags": [
              "v1.1",
              "A-Release"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 8,
                "deletions": 0
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "SONGYI98": {
      "java": 1754,
      "md": 191,
      "fxml": 48,
      "sh": 4,
      "bat": 4,
      "gradle": 17,
      "txt": 47
    }
  },
  "authorContributionVariance": {
    "SONGYI98": 76525.6
  },
  "authorDisplayNameMap": {
    "SONGYI98": "CS2103T-F13-4 ANG ..G YI"
  }
}
