[
  {
    "path": "src/main/java/rogue/Rogue.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.Executable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.parser.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.exceptions.StorageException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Main driver of {@code Rogue}. Consists of three main elements: the {@code Storage},"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * the {@code TaskList}, and the {@code Ui}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Rogue {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs {@code Rogue}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Loads data from the file at the given path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * The data is used to recreate the tasks if it is successfully parsed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Otherwise, an empty {@code TaskList} is used instead."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param filePath The relative or absolute path where persistent information is stored."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Rogue(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        storage \u003d Storage.init(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (StorageException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            ui.print(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Runs {@code Rogue}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Continues to prompt the user for more inputs, parsing and executing them appropriately,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * until the user initiates the exit sequence (i.e. {@code Action.EXIT})."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                Executable e \u003d Parser.createExe(fullCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                Report r \u003d e.execute(storage, tasks, ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                ui.print(r);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                isExit \u003d r.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            } catch (UnknownCommandException | IncorrectArgumentException | StorageException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                ui.print(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        new Rogue(\"./data/tasks.txt\").start();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 69
    }
  },
  {
    "path": "src/main/java/rogue/commons/exceptions/IncorrectArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class IncorrectArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public IncorrectArgumentException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 7
    }
  },
  {
    "path": "src/main/java/rogue/commons/util/DateTimeUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class DateTimeUtil {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public static LocalDate stringAsDate(String dateString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return LocalDate.parse(dateString, formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 13
    }
  },
  {
    "path": "src/main/java/rogue/commons/util/StringUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class StringUtil {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public static int findIndex(String[] arr, String searchTerm) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length; ++i) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            if (arr[i].equals(searchTerm)) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public static String strArrJoin(String[] arr, int startIndex, int endIndex, String delimiter)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        for (int i \u003d startIndex; i \u003c endIndex; ++i) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            builder.append(arr[i]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            // Do not add delimiter in final iteration"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            if (i !\u003d endIndex - 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                builder.append(delimiter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 29
    }
  },
  {
    "path": "src/main/java/rogue/logic/Report.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Feedback generated after an {@code Executable} is executed by {@code Rogue}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * May contain messages for success, errors, or other miscellaneous information."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Report {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code Report}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description The main content of the report."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Report(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code Report}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The main content of the report."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param isExit        Indicates whether {@code Rogue} should exit."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Report(String description, boolean isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 40
    }
  },
  {
    "path": "src/main/java/rogue/logic/directives/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Maps each possible action that {@code Rogue} can take to"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * a list of keywords. These keywords are entered by the user as inputs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * to execute the corresponding actions."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public enum Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    ADD_TODO        (\"todo\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    ADD_DEADLINE    (\"deadline\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    ADD_EVENT       (\"event\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    LIST            (\"list\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    FIND            (\"find\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    DELETE          (\"delete\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    MARK_AS_DONE    (\"done\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    EXIT            (\"bye\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    INVALID         (\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /** Stores keyword to action mappings. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private static final Map\u003cString, Action\u003e ACTION_KEYWORD_MAP \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    // Caches the keyword and its corresponding action for fast reverse lookup. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        for (Action action : values()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            ACTION_KEYWORD_MAP.put(action.keyword, action);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs an {@code Action}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param keyword The keyword that is mapped to the action."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    Action(String keyword) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Performs a reverse lookup for {@code Action} given a keyword."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * {@code Action.INVALID} is returned if the keyword is not mapped"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * to any {@code Action}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param keyword The keyword to be searched"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return An {@code Action} matching the keyword, or {@code Action.INVALID} if no match."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public static Action getAction(String keyword) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        Action action \u003d ACTION_KEYWORD_MAP.get(keyword);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return (action !\u003d null) ? action : Action.INVALID;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 55
    }
  },
  {
    "path": "src/main/java/rogue/logic/directives/AddDirective.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.exceptions.StorageException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Adds a {@code Task} to the {@code TaskList}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class AddDirective implements Executable {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /** Message to add to a {@code Report} upon adding a {@code Task} successfully. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String MESSAGE_ADD_SUCCESS \u003d \"sInCe yOu\u0027rE So hElPlEsS, i\u0027lL ReMeMbEr \\\"%s\\\" FoR YoU.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \"yOu hAvE MaDe mE ReMeMbEr %d tAsK(s).\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final Action action;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs an {@code AddDirective}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param action        The type of {@code Task} to add."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The description of the {@code Task}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public AddDirective(Action action, String description) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs an {@code AddDirective}."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param action        The type of {@code Task} to add."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The description of the {@code Task}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param date          The date of the {@code Deadline} or {@code Event}."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public AddDirective(Action action, String description, LocalDate date) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Adds a {@code Todo}, {@code Deadline}, or {@code Event} to the {@code TaskList}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Which {@code Task} is added depends on the {@code Action}: {@code Action.ADD_TODO},"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * {@code Action.ADD_DEADLINE}, and {@code Action.ADD_EVENT} respectively."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * All {@code Task} are then saved to {@code Storage}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param storage   An instance of {@code Storage}."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks     The {@code TaskList} to which a {@code Task} is added."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param ui        An instance of {@code Ui}."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A {@code Report} with a success message"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws StorageException if data cannot be saved to file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Report execute(Storage storage, TaskList tasks, Ui ui) throws StorageException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return new Report(String.format(MESSAGE_ADD_SUCCESS, task, tasks.count()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 92
    }
  },
  {
    "path": "src/main/java/rogue/logic/directives/DeleteDirective.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.exceptions.StorageException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Deletes a {@code Task} from the {@code TaskList}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class DeleteDirective implements Executable {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /** Message to add to a {@code Report} when index is invalid. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_INCORRECT_INDEX \u003d \"sToP TrYiNg tO FoOl mE. taSK #%d dOeS NoT ExIsT.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /** Message to add to a {@code Report} upon deleting a {@code Task} successfully. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String MESSAGE_DELETE_SUCCESS \u003d \"gReAt! OnE FeWeR ThInG To rEmEmBeR: %s\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            \"i sTiLl nEeD To rEmEmBeR %d tAsK(s).\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code DeleteDirective}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param index The index of the {@code Task} to delete."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public DeleteDirective(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Deletes a {@code Task} from the {@code TaskList}."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * All {@code Task} are then saved to {@code Storage}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param storage   An instance of {@code Storage}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks     The {@code TaskList} from which a {@code Task} is deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param ui        An instance of {@code Ui}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A {@code Report} with a success message"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws IncorrectArgumentException if the index provided is invalid."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws StorageException if data cannot be saved to file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Report execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throws IncorrectArgumentException, StorageException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            Task deletedTask \u003d tasks.delete(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new Report(String.format(MESSAGE_DELETE_SUCCESS, deletedTask.toString(), tasks.count()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(String.format(ERROR_INCORRECT_INDEX, index + 1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 62
    }
  },
  {
    "path": "src/main/java/rogue/logic/directives/DoneDirective.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.exceptions.StorageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Marks a {@code Task} as complete."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class DoneDirective implements Executable {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /** Message to add to a {@code Report} when index is invalid. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_INCORRECT_INDEX \u003d \"sToP TrYiNg tO FoOl mE. taSK #%d dOeS NoT ExIsT.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /** Message to add to a {@code Report} when {@code Task} is marked as done successfully. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String MESSAGE_DONE_SUCCESS \u003d \"fInAlLy, I feLL AsLeEp wHiLe wAiTiNg fOr yOu tO FiNiSh: %s\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code DoneDirective}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param index The index of the {@code Task} to mark as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public DoneDirective(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Marks a {@code Task} from the {@code TaskList} as complete."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param storage   An instance of {@code Storage}."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks     The {@code TaskList} from which a {@code Task} is marked as complete."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param ui        An instance of {@code Ui}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A {@code Report} with a success message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws IncorrectArgumentException if the index provided is invalid."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws StorageException if data cannot be saved to file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Report execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throws IncorrectArgumentException, StorageException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new Report(String.format(MESSAGE_DONE_SUCCESS, tasks.get(index).toString()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(String.format(ERROR_INCORRECT_INDEX, index + 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 58
    }
  },
  {
    "path": "src/main/java/rogue/logic/directives/Executable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.exceptions.StorageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Represents an action that can be executed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public interface Executable {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Gets {@code Rogue} to execute an action."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param storage   An instance of {@code Storage}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks     An instance of {@code TaskList}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param ui        An instance of {@code Ui}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A {@code Report} containing a message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws IncorrectArgumentException when incorrect parameters are provided for an {@code Action}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws StorageException if data cannot be saved to file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    Report execute(Storage storage, TaskList tasks, Ui ui) throws IncorrectArgumentException, StorageException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 29
    }
  },
  {
    "path": "src/main/java/rogue/logic/directives/ExitDirective.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Starts the exit sequence to stop {@code Rogue} from running."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class ExitDirective implements Executable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /** Message to add to a {@code Report} for when {@code Rogue} is exiting. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String MESSAGE_EXIT_SUCCESS \u003d \"hOpE To sEe yOu aGaIn. NoT.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Starts the exit sequence for {@code Rogue}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param storage   An instance of {@code Storage}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks     An instance of {@code TaskList}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param ui        An instance of {@code Ui}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A {@code Report} with a success message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Report execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return new Report(MESSAGE_EXIT_SUCCESS, true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 30
    }
  },
  {
    "path": "src/main/java/rogue/logic/directives/FindDirective.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class FindDirective implements Executable {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String MESSAGE_FIND_SUCCESS \u003d \"wHaT? iS NaP TiMe oVeR? hErE ArE YoUr tAsKs tHeN:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String MESSAGE_FIND_FAILURE \u003d \"oF CoUrSe %s iS NoT FoUnD. \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \"DoN\u0027T YoU EvEn rEmEmBeR ThE TaSkS YoU AdDeD?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String searchTerm;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public FindDirective(String searchTerm) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.searchTerm \u003d searchTerm;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Report execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d tasks.search(searchTerm);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new Report(MESSAGE_FIND_FAILURE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            builder.append(String.format(MESSAGE_FIND_SUCCESS, searchTerm));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            builder.append(\"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            for (Task task : matchingTasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                builder.append(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new Report(builder.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 42
    }
  },
  {
    "path": "src/main/java/rogue/logic/directives/ListDirective.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Lists all stored {@code Task} within the {@code TaskList}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class ListDirective implements Executable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Lists the {@code Task} in the {@code TaskList}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param storage   An instance of {@code Storage}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks     The {@code TaskList} from which {@code Task} should be listed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param ui        An instance of {@code Ui}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A {@code Report} with a list of {@code Task}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Report execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        builder.append(\"dO YoU ReAlLy nEeD Me tO NaMe tHeM OuT foR yOu?\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            builder.append(String.format(\"%d. %s\\n\", ++i, task));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return new Report(builder.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 36
    }
  },
  {
    "path": "src/main/java/rogue/logic/parser/AddDirectiveParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.Action;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.AddDirective;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.util.DateTimeUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.util.StringUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class AddDirectiveParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_MISSING_DESC \u003d \"sToP TrYiNg tO FoOl mE. \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \"a tOdO MuSt bE FoLlOwEd bY A DesCrIpTiOn.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_MISSING_DESC_OR_DATE \u003d \"sToP TrYiNg tO FoOl mE. \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \"a%s MuSt bE FoLlOwEd bY A DeScRiPtIoN AnD dAtE.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_MISSING_DATE \u003d \"sToP TrYiNg tO FoOl mE.\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \" tHe dAtE MuSt cOmE RiGhT AfTeR \\\"%s\\\".\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_INCORRECT_DATE_FORMAT \u003d \"sToP TrYiNg tO FoOl mE.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \" dAtE MuSt bE In yEaR-MoNtH-DaY FoRmAt.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public AddDirective parse(Action action, String[] args) throws IncorrectArgumentException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return parseDeadline(action, args);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return parseEvent(action, args);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return parseTodo(action, args);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private AddDirective parseTodo(Action action, String[] args) throws IncorrectArgumentException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(ERROR_MISSING_DESC);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String description \u003d StringUtil.strArrJoin(args, 1, args.length, \" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return new AddDirective(action, description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private AddDirective parseDeadline(Action action, String[] args) throws IncorrectArgumentException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        if (args.length \u003c 4) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(String.format(ERROR_MISSING_DESC_OR_DATE, \" dEaDlInE\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        int index \u003d StringUtil.findIndex(args, \"/by\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(String.format(ERROR_MISSING_DATE, \"/by\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String description \u003d StringUtil.strArrJoin(args, 1, index, \" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            String dateString \u003d StringUtil.strArrJoin(args, index + 1, args.length, \" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            LocalDate by \u003d DateTimeUtil.stringAsDate(dateString);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new AddDirective(action, description, by);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(ERROR_INCORRECT_DATE_FORMAT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private AddDirective parseEvent(Action action, String[] args) throws IncorrectArgumentException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        if (args.length \u003c 4) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(String.format(ERROR_MISSING_DESC_OR_DATE, \"N EvEnT\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        int index \u003d StringUtil.findIndex(args, \"/at\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(String.format(ERROR_MISSING_DATE, \"/at\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String description \u003d StringUtil.strArrJoin(args, 1, index, \" \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            String dateString \u003d StringUtil.strArrJoin(args, index + 1, args.length, \" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            LocalDate at \u003d DateTimeUtil.stringAsDate(dateString);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new AddDirective(action, description, at);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(ERROR_INCORRECT_DATE_FORMAT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 89
    }
  },
  {
    "path": "src/main/java/rogue/logic/parser/DeleteDirectiveParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.DeleteDirective;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class DeleteDirectiveParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_INCORRECT_INDEX \u003d \"sToP TrYiNg tO FoOl mE. tHe \\\"delete\\\" ComMand\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \" mUsT Be FolLoWed bY tHe InDEx Of THe TAsK.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public DeleteDirective parse(String[] args) throws IncorrectArgumentException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            // The index provided by the user is off by one"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            int index \u003d Integer.parseInt(args[1]) - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new DeleteDirective(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(ERROR_INCORRECT_INDEX);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 21
    }
  },
  {
    "path": "src/main/java/rogue/logic/parser/DoneDirectiveParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.DoneDirective;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class DoneDirectiveParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_INCORRECT_INDEX \u003d \"sToP TrYiNg tO FoOl mE. tHe \\\"done\\\" ComMand\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \" mUsT Be FolLoWed bY tHe InDEx Of THe TAsK.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public DoneDirective parse(String[] args) throws IncorrectArgumentException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            // The index provided by the user is off by one"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            int index \u003d Integer.parseInt(args[1]) - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new DoneDirective(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(ERROR_INCORRECT_INDEX);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 21
    }
  },
  {
    "path": "src/main/java/rogue/logic/parser/FindDirectiveParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.FindDirective;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.util.StringUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class FindDirectiveParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_MISSING_SEARCH_TERM \u003d \"sToP TrYiNg tO FoOl mE. \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            + \"fInD MuSt bE FoLlOwEd bY ThE SeArCh tErM.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public FindDirective parse(String[] args) throws IncorrectArgumentException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new IncorrectArgumentException(ERROR_MISSING_SEARCH_TERM);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String searchTerm \u003d StringUtil.strArrJoin(args, 1, args.length, \" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return new FindDirective(searchTerm);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 22
    }
  },
  {
    "path": "src/main/java/rogue/logic/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.Action;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.Executable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.ExitDirective;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.directives.ListDirective;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.parser.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private static final String ERROR_INCORRECT_ARGUMENT \u003d \"i hAtE YoU! sToP MaKiNg mE Do sOmEtHiNg iMpOsSiBlE.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private static final String ERROR_UNKNOWN_COMMAND \u003d \"sToP TrYiNg tO FoOl mE. %s iS An uNkNoWn cOmMaNd.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public static Executable createExe(String fullCommand)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throws UnknownCommandException, IncorrectArgumentException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String[] args \u003d fullCommand.trim().split(\"\\\\s\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        Action action \u003d Action.getAction(args[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new ExitDirective();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new ListDirective();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new FindDirectiveParser().parse(args);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case MARK_AS_DONE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new DoneDirectiveParser().parse(args);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new DeleteDirectiveParser().parse(args);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case ADD_TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return new AddDirectiveParser().parse(action, args);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new UnknownCommandException(String.format(ERROR_UNKNOWN_COMMAND, args[0]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 46
    }
  },
  {
    "path": "src/main/java/rogue/logic/parser/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public UnknownCommandException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 7
    }
  },
  {
    "path": "src/main/java/rogue/model/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Represents a task that can be tracked by Rogue."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * A deadline additionally has a date component to specify"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * by when the task should be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code Deadline}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param by            By when the task should be completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code Deadline}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The task description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param isDone        Whether the task is completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param by            By when the task should be completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String summarize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return String.format(\"D | %s | %s\", super.summarize(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 48
    }
  },
  {
    "path": "src/main/java/rogue/model/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Represents a task that can be tracked by Rogue."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * An event additionally has a date component to specify"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * when the task will happen."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs an {@code Event}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param at            By when the task should be completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs an {@code Event}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The task description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param isDone        Whether the task is completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param at            By when the task should be completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String summarize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return String.format(\"E | %s | %s\", super.summarize(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                at.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 49
    }
  },
  {
    "path": "src/main/java/rogue/model/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Represents a task that can be tracked by Rogue."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code Task}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code Task}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The task description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param isDone        Whether the task is completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Displays an icon based on completion status of a {@code Task}."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A tick if completed, or a cross otherwise"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Marks a {@code Task} as completed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Retrieves print-friendly summary of a {@code Task}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * 1 indicates a completed {@code Task}, and 0 an incomplete {@code Task}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return Print-friendly summary of task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String summarize() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return String.format(\"%d | %s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 65
    }
  },
  {
    "path": "src/main/java/rogue/model/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Wraps a list of {@code Task}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Provides bookkeeping functionalities to manage {@code Task} objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code TaskList}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code TaskList}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks A list of task to initialize the {@code TaskList}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Adds a {@code Task} to the {@code TaskList}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Retrieves {@code Task} corresponding to provided index from the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param index Index of the task to retrieve."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws IndexOutOfBoundsException when index is out of range."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Task get(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Deletes {@code Task} corresponding to provided index from the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param index Index of the task to delete."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws IndexOutOfBoundsException when index is out of range."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Task delete(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public List\u003cTask\u003e search(String searchTerm) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return tasks.stream()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                .filter(task -\u003e task.getDescription().contains(searchTerm))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Retrieves the number of {@code Task} currently in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return Number of tasks in list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 77
    }
  },
  {
    "path": "src/main/java/rogue/model/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Represents a task that can be tracked by Rogue."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * A todo is any general task that has to be done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code Todo}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The task description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs a {@code Todo}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param description   The task description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param isDone        Whether the task is completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String summarize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return String.format(\"T | %s\", super.summarize());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 36
    }
  },
  {
    "path": "src/main/java/rogue/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.model.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.storage.exceptions.StorageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.util.DateTimeUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Deals with file I/O and persisting information across multiple executions."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String FORMAT_TASK_FIELD_DELIMITER \u003d \"\\\\s\\\\|\\\\s\"; // Separator for each field in file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String VALUE_TASK_COMPLETE \u003d \"1\"; // The value corresponding to whether a task is completed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_INCORRECT_FILE_FORMAT \u003d \"ERROR: Saved file does not have the correct format!\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final String ERROR_IO \u003d \"ERROR: Unable to %s tasks from file!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs the {@code Storage}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param filePath The relative or absolute path where persistent information is stored."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private Storage(Path filePath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Factory method for producing the {@code Storage}."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Terminates program if the file or its parent directories"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * cannot be created."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param fileName The relative or absolute path where persistent information is stored."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public static Storage init(String fileName) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        Path path \u003d Paths.get(fileName);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        Path parentDirPath \u003d path.getParent();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            // Create parent directories if they do not exist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            if (parentDirPath !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                Files.createDirectories(parentDirPath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            if (Files.notExists(path)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                path \u003d Files.createFile(path);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            System.err.println(\"ERROR: Unable to create file for saving and loading tasks!\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return new Storage(path);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Writes the summary of each {@code Task} to the file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks A list of tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws StorageException if the file cannot be written to."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws StorageException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            List\u003cString\u003e taskSummary \u003d tasksToString(tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            Files.write(filePath, taskSummary, StandardOpenOption.TRUNCATE_EXISTING);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new StorageException(String.format(ERROR_IO, \"save\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Reads the summary of each {@code Task} from the file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Converts each summary into a {@code Task}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A list of tasks"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public List\u003cTask\u003e load() throws StorageException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            List\u003cString\u003e taskSummary \u003d Files.readAllLines(filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            return stringToTask(taskSummary);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            throw new StorageException(String.format(ERROR_IO, \"load\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Retrieves the summary from each {@code Task} in the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param tasks A list of tasks."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A list of extracted summary"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private List\u003cString\u003e tasksToString(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        List\u003cString\u003e taskSummary \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            taskSummary.add(task.summarize());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return taskSummary;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Converts each entry in the task summary to an actual {@code Task}."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * If any of the entries cannot be parsed, an exception is thrown."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param taskSummary"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return A list of tasks"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @throws StorageException if any summary is invalid."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private List\u003cTask\u003e stringToTask(List\u003cString\u003e taskSummary) throws StorageException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        for (String summary : taskSummary) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                String[] args \u003d summary.split(FORMAT_TASK_FIELD_DELIMITER);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                boolean isDone \u003d (args[1].equals(VALUE_TASK_COMPLETE)) ? true : false;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                String description \u003d args[2];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                switch (args[0]) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                    LocalDate date \u003d DateTimeUtil.stringAsDate(args[3]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                    tasks.add(new Deadline(description, isDone, date));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                    date \u003d DateTimeUtil.stringAsDate(args[3]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                    tasks.add(new Event(description, isDone, date));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                    tasks.add(new Todo(description, isDone));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            } catch (IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "                throw new StorageException(ERROR_INCORRECT_FILE_FORMAT);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 155
    }
  },
  {
    "path": "src/main/java/rogue/storage/exceptions/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.storage.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class StorageException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public StorageException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 7
    }
  },
  {
    "path": "src/main/java/rogue/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.Report;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * The interface of {@code Rogue} with which the user interacts."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * Reads user input from the console, and displays messages,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " * errors, and other textual information onto the console."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private final BufferedReader textParser; // Reads user inputs"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs the {@code Ui}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        textParser \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Constructs the {@code Ui}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param in The source from which the Ui should read user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public Ui(InputStream in) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        textParser \u003d new BufferedReader(new InputStreamReader(in));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Reads a line of input from the specified source."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * A line is terminated by any of the \u0027\\n\u0027, \\r\u0027, \u0027\\r\\n\u0027, or EOF characters."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Terminates program if an I/O error occurs."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            text \u003d textParser.readLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            System.err.println(\"ERROR: Unable to parse input stream!\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Displays a greeting on console."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        printWithDecorations(\"yOu HavE nO cOnTrOL ovEr ME!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Displays stylized text on console."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param text The text to print."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void print(String text) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        printWithDecorations(text);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Displays stylized text on console."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param report The report to print."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void print(Report report) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        printWithDecorations(report.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Prefixes the text with a \u0027\\t\u0027 character and whitespace."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param textToIndent The text to indent."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @return Indented text"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private String indentText(String textToIndent) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        return String.format(\"\\t %s\", textToIndent);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Displays a header and footer for texts."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private void printDecorations() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        System.out.printf(\"\\t|%s|\\n\", \" @ . \".repeat(20));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * Formats the text with a header and footer."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     * @param text The text to format."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    private void printWithDecorations(String text) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String[] sentences \u003d text.split(\"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        printDecorations();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        for (String sentence : sentences) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            System.out.println(indentText(sentence));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        printDecorations();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 111
    }
  },
  {
    "path": "src/test/java/rogue/commons/util/StringUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class StringUtilTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void findIndex_strInArray_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String[] strings \u003d { \"first\", \"second\", \"third\" };"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(StringUtil.findIndex(strings, \"first\"), 0);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(StringUtil.findIndex(strings, \"second\"), 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(StringUtil.findIndex(strings, \"third\"), 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void findIndex_strNotInArray_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        String[] strings \u003d { \"first\", \"second\", \"third\" };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(StringUtil.findIndex(strings, \"fourth\"), -1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(StringUtil.findIndex(strings, \"123\"), -1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 24
    }
  },
  {
    "path": "src/test/java/rogue/logic/directives/ActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.directives;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class ActionTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void getAction_validAction_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"event\"), Action.ADD_EVENT);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"todo\"), Action.ADD_TODO);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"deadline\"), Action.ADD_DEADLINE);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"done\"), Action.MARK_AS_DONE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"list\"), Action.LIST);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"delete\"), Action.DELETE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"done\"), Action.MARK_AS_DONE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"bye\"), Action.EXIT);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void getAction_invalidAction_returnInvalid() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"\"), Action.INVALID);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"test\"), Action.INVALID);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertEquals(Action.getAction(\"123\"), Action.INVALID);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 26
    }
  },
  {
    "path": "src/test/java/rogue/logic/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "package rogue.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.logic.parser.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import rogue.commons.exceptions.IncorrectArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void createExe_invalidArguments_exceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertThrows(IncorrectArgumentException.class, () -\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            Parser.createExe(\"done book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        });"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertThrows(IncorrectArgumentException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            Parser.createExe(\"delete note\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    public void createExe_invalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        assertThrows(UnknownCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "            Parser.createExe(\"create todo borrow book\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "deadline do home /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "w-yeehong"
        },
        "content": "java -classpath ..\\bin Rogue \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "w-yeehong": 2,
      "-": 19
    }
  }
]
