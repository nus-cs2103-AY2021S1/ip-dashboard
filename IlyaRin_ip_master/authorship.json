[
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "1.[T][DONE] hello "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "2.[E][NOT DONE] meet (at: 3pm) "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "3.[D][NOT DONE] hw (by: tonight) "
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Deadline(String task, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public boolean isDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        SimpleDateFormat date \u003d new SimpleDateFormat (\"yyyy-mm-dd\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        date.setLenient(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            date.parse(by.trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String convertDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (isDate()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Date d \u003d new SimpleDateFormat(\"yyyy-MM-dd\").parse(by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                s \u003d new SimpleDateFormat(\"MMM dd yyyy\").format(d);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                s \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(\"Please specify date in the form yyyy-MM-dd\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[D][DONE] %s(by: %s)\", this.task, convertDate());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[D][NOT DONE] %s(by: %s)\", this.task, convertDate());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 48
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void readTasksFromFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            File f \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            Scanner diskScanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            while (diskScanner.hasNext()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                System.out.println(diskScanner.nextLine());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void writeListToDataFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            String filePath \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) { "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                fw.write (String.format (\"%d.%s \\n\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println (\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void sort (String next){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (next.equalsIgnoreCase(\"list\")) {      //Listing out all the tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                list();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else if (next.startsWith(\"done \")) {    //When a task is done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                done(next);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                writeListToDataFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else if (next.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                delete(next);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                writeListToDataFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else {        //Adding a to do, deadline, event"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                tasks(next);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                writeListToDataFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println (\"Oops Sorry! \u003e_\u003c I don\u0027t know what that means... \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(\"Please specify a time!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println (\"Description of a task cannot be empty!!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println (\"Sorry that task does not exist\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void list() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.printf(\"%d.%s \\n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void done(String s) { "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        int index \u003d Integer.parseInt(s.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task t \u003d tasks.get (index - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        t.markDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void tasks(String s) throws DukeException, IllegalArgumentException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (s.contains(\"todo\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (s.substring(4).trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            task \u003d new Todo(s.substring(5));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else if (s.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            String[] str \u003d s.split(\"/by\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (str[0].substring(8).trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            task \u003d new Deadline(str[0].substring(9), str[1].trim());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else if (s.contains (\"event\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            String[] str \u003d s.split (\"/at\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (str[0].substring(5).trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            task \u003d new Event (str[0].substring(6), str[1].trim());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.printf (\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void delete(String s) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        int index \u003d Integer.parseInt(s.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task t \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (t);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        tasks.remove (index - 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.printf (\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Scanner sc \u003d new Scanner (System.in);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        //Greeting the user"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Hello! I\u0027m Duke  ^_^\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"What can I do for you??\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Here are your tasks from last time\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        readTasksFromFile();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        while (!next.equalsIgnoreCase(\"bye\")){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            sort(next);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        //Exit"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Bye! Hope to see you again soon! :)\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 144,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Event(String task, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public boolean isDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            new SimpleDateFormat (\"yyyy-MM-dd\").parse(at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String convertDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (isDate()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Date d \u003d new SimpleDateFormat(\"yyyy-MM-dd\").parse(at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                s \u003d new SimpleDateFormat(\"MMM dd yyyy\").format(d);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                s \u003d at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(\"Please specify date in the form yyyy-MM-dd\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[E][DONE] %s(at: %s)\", this.task, convertDate());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[E][NOT DONE] %s(at: %s)\", this.task, convertDate());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 47
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[DONE] %s\", this.task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[NOT DONE] %s\", this.task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[T][DONE] %s\", this.task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[T][NOT DONE] %s\", this.task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "deadline project /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event dog"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event eat ramen /at Thursday 7pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event ice skating /at 2020-08-26"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event no /at 2020/09/13"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 3,
      "-": 20
    }
  }
]
