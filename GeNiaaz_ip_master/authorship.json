[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 19,
      "-": 45
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "T | 0 | gg"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "T | 1 | byee"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "E | 1 | go gym #mac | Sep 21 2020 12:34:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "T | 1 | ddf  #h  #mac #mac #apple #reeeply"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 4
    }
  },
  {
    "path": "src/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "T | 0 | buy milk"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "T | 0 | get monitor"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "E | 1 | get 6packs | Aug 13 2011 14:26:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "T | 1 | add milk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "D | 1 | finish task 8 | Sep 20 2024 14:44:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "E | 0 | halo infinite | Sep 10 2021 15:21:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "E | 1 | buy steak| Jan 21 2020 14:32:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "D | 1 | test | May 21 2040 13:43:00"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 8
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private static final Path filepath \u003d Paths.get(\".\", \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private boolean isExtracted \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Creates an instance of Duke and ui. Initialises TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Initialises empty list of tasks if file lookup is unsuccessful."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert filepath instanceof Path : \"Filepath for data file must be defined\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            taskList \u003d new TaskList(storage.getListOfTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            isExtracted \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Executes logic in this class"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param args default style for this method"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Greets user with welcome message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return String of message to the duke.Gui application"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String getGreeting() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String response \u003d \"Hello and welcome to the GeNiaaz personal assistant\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (!this.isExtracted) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            return response + \"\\n\\nData was not extracted successfully, new list created\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Gets string of response to be shown to user"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param input command given by user"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of response to show user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        Gui gui \u003d new Gui();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList \u003d c.execute(taskList, gui, storage, responseList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.add(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        for (String s : responseList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            response \u003d response + (\"\\n\") + (s);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 75,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.Gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Constructor for DialogBox instance"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param text message to be shown to user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param img image of user to be shown in display window"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param isAssistant boolean to check if is assistant or user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private DialogBox(String text, Image img, boolean isAssistant) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        //font"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        dialog.setFont(Font.font(\"Verdana\", 13));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        //makeshift padding"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (!isAssistant) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            dialog.setText(text + \"  \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author GeNiaaz-reused"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        //Reused from lll-jy / ip ... DialogBox.java"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setBorder(new Border(new BorderStroke(Color.DARKBLUE,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isAssistant) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        int count \u003d dialog.getText().endsWith(\"\\n\") ? 1 : 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] stringList \u003d dialog.getText().split(\"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        count +\u003d stringList.length + 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String substring : stringList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            count +\u003d substring.length() / 32;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setMinHeight(count * 15 + 30);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * returns new instance of dialogbox"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param text message to be shown to user"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param img image of user to be shown in display window"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return new instance of dialogbox"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * returns new instance of dialogbox"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param text message to be shown to user"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param img image of user to be shown in display window"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return new instance of dialogbox"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        var db \u003d new DialogBox(text, img, true);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 90,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/Gui/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.Gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class Gui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private static final String INDENT \u003d \"  \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    Scanner scan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public Gui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return (\"Hello! I\u0027m duke.Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e showBye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String BYE_MESSAGE \u003d \"Bye!!! Hope to see you again real soon.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.add(BYE_MESSAGE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"Return type of the result of this method should be an ArrayList\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e showDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"Return type of the result of this method should be an ArrayList\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String DONE_MESSAGE \u003d \"The following task has been marked done: \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.add(DONE_MESSAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e addTag(String[] arrOfTags) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"Return type of the result of this method should be an ArrayList\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String ADD_TAG_MESSAGE_PREFIX \u003d \"The following tags \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String ADD_TAG_MESSAGE_SUFFIX \u003d \"\\nhave been added to the following task: \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.add(ADD_TAG_MESSAGE_PREFIX);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        for (int i \u003d 1; i \u003c arrOfTags.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.add(\"#\" + arrOfTags[i] + \" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.add(ADD_TAG_MESSAGE_SUFFIX);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String showError(String e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return (e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Prints out all the tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param list list of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e listAllTasks(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"Return type of the result of this method should be an ArrayList\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String LIST_MESSAGE \u003d \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.add(LIST_MESSAGE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        int LENGTH_OF_LIST \u003d list.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (LENGTH_OF_LIST \u003e 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            list.forEach(task -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                int counter \u003d list.indexOf(task) + 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                responseList.add(\"  \" + counter + \".\" + task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.remove(0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.add(\"No tasks found, add a task now!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Message displayed after item added to list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasksLeft integer value of tasks remaining in the list of tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e addMessage(Task task, int tasksLeft) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"Return type of the result of this method should be an ArrayList\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.add(\"Got it, the following task has been added:\\n\" + INDENT + INDENT + task +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \"\\n\" + INDENT + this.messageForTasksLeft(tasksLeft));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Message after searching for term with Find"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param listOfTasksFound list of taks found containing that term"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e findMessage(ArrayList\u003cTask\u003e listOfTasksFound) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"Return type of the result of this method should be an ArrayList\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (listOfTasksFound.isEmpty()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            final String NO_TASKS_FOUND_MESSAGE \u003d \"No tasks found with that term\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.add(NO_TASKS_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            final String MATCHING_TASKS_MESSAGE \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.add(MATCHING_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d listOfTasksFound.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                responseList.add(i + \".\" + listOfTasksFound.get(i - 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Message displayed after deleting a task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param task task to be deleted."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasksLeft integer value of tasks remaining in the list of tasks."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e deleteMessage(Task task, int tasksLeft) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"Return type of the result of this method should be an ArrayList\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String DELETED_TASK_MESSAGE \u003d \"Noted. I have removed this task:\\n\" + INDENT + INDENT + task + \"\\n\" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                this.messageForTasksLeft(tasksLeft);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.add (DELETED_TASK_MESSAGE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Message to show number of tasks left."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasksLeft integer value of tasks remaining in the list of tasks."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of message."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e messageForTasksLeft(int tasksLeft) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"Return type of the result of this method should be an ArrayList\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String TASKS_LEFT_MESSAGE \u003d \"Now you have \" + tasksLeft + \" tasks in the list.\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.add(TASKS_LEFT_MESSAGE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (tasksLeft \u003d\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            final String NO_TASKS_FOUND_MESSAGE \u003d \"No tasks found. Add a task now!\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.add(NO_TASKS_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Shows icon based on whether task is done or not."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param task task to be checked."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of icon with brackets."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String getStatusIcon(Task task) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String STATUS_ICON_MESSAGE \u003d \"[\" + (task.getIsDone() ? \"\\u2713\" : \"\\u2718\") + \"] \";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return (STATUS_ICON_MESSAGE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 162
    }
  },
  {
    "path": "src/main/java/duke/Gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.Gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/assistant.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getGreeting(), dukeImage));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 53
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Executes logic in thie  Main class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param stage stage for the execution of program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            stage.setTitle(\"Assistant\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 34
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.EnumUserInstruction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    EnumUserInstruction.userInstruction instructionCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * constructor for command to add tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param fullCommand entire string of input from user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param instructionCommand enum of the command instruction from the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public AddCommand(String fullCommand, EnumUserInstruction.userInstruction instructionCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.instructionCommand \u003d instructionCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Executes command, main logic for creating a new task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param taskList list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param gui instance of Ui to deal with user interface."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param storage to read / write to storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception thrown when exception caught while running."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e execute(TaskList taskList, Gui gui, Storage storage, ArrayList\u003cString\u003e responseList)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String[] userInputArr \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        switch (this.instructionCommand) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                if (userInputArr[1].isBlank()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                Task todoTask \u003d new Todo(fullCommand.substring(5));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                taskList.addItem(todoTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                // change data file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                storage.addTask(todoTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return gui.addMessage(todoTask, taskList.getTasksLeft());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                String substring \u003d fullCommand.substring(9);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                String[] strArr \u003d substring.split(\"/by\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                String description \u003d strArr[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                String date \u003d strArr[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                Task deadlineTask \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                taskList.addItem(deadlineTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                // change data file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                storage.addTask(deadlineTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return gui.addMessage(deadlineTask, taskList.getTasksLeft());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(\"Please give me details for your deadline task\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException a) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(\"Please give date / time after \u0027/by\u0027 for this deadline task\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                String substring \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                String[] strArr \u003d substring.split(\"/at\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                String description \u003d strArr[0];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                String date \u003d strArr[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                Task eventTask \u003d new Event(description, date);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                taskList.addItem(eventTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                // change data file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                storage.addTask(eventTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return gui.addMessage(eventTask, taskList.getTasksLeft());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(\"Please give me information about your event!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException a) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(\"Please give date / time after \u0027/at\u0027 for this event\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e l \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        l.add(\"THIS SHOULD NOT SHOW, addcommand class last line\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return l;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 102
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Used to show bye message to user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param gui instance of Ui to deal with user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param storage to read / write to storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e execute(TaskList tasks, Gui gui, Storage storage, ArrayList\u003cString\u003e responseList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return gui.showBye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * to break the loop and terminate the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return true that satisfies the condition in main class and breaks the loop."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 33
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * abstract method to be implemented by child classes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param gui instance of Ui to deal with user interface."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param storage to read / write to storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception caught when method implemented by child classes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public abstract ArrayList\u003cString\u003e execute(TaskList tasks, Gui gui, Storage storage,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cString\u003e responseList) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * method that returns false by default."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return boolean to remain in loop in main method in Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param fullCommand full input string from user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Executes command, main logic for creating a new task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasklist list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param gui instance of Ui to deal with user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param storage to read / write to storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception thrown when exception caught while running."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e execute(TaskList tasklist, Gui gui, Storage storage, ArrayList\u003cString\u003e responseList)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String taskNumberToDelete \u003d this.fullCommand.substring(7);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            int index \u003d Integer.parseInt(taskNumberToDelete) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            Task deleteTask \u003d tasklist.getItem(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            tasklist.deleteItem(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            // change data file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            storage.deleteTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            return gui.deleteMessage(deleteTask, tasklist.getTasksLeft());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Please enter a task number within the range of tasks\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number for me to delete\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * constructor for fullCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param fullCommand full string from user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Executes command, main logic for creating a new task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param taskList list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param gui instance of Ui to deal with user interface."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param storage to read / write to storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception thrown when exception caught while running."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e execute(TaskList taskList, Gui gui, Storage storage, ArrayList\u003cString\u003e responseList)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String numberCharacter \u003d this.fullCommand.substring(5);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            int index \u003d Integer.parseInt(numberCharacter) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            Task taskToChange \u003d taskList.getItem(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            taskToChange.markDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            storage.modifyTask(taskToChange, index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.addAll(gui.showDone());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.add(taskToChange.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            return responseList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Please enter a task number within the range of tasks\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (NumberFormatException a) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number for me to mark as done\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 52
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    String bodyCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public FindCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            this.bodyCommand \u003d fullCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"please enter a term to search for\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Main logic executed to perform search"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param gui instance of Ui to deal with user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param storage to read / write to storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e execute(TaskList tasks, Gui gui, Storage storage, ArrayList\u003cString\u003e responseList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        list.forEach(task -\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            if (task.isContain(this.bodyCommand)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                listOfTasksFound.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.addAll(gui.findMessage(listOfTasksFound));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Executes command, main logic for creating a new task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param taskList list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param gui instance of Ui to deal with user interface."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param storage to read / write to storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e execute(TaskList taskList, Gui gui, Storage storage, ArrayList\u003cString\u003e responseList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        responseList.addAll(gui.listAllTasks(listOfTasks));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert responseList instanceof ArrayList : \"ResponseList has to be a list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return responseList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 25
    }
  },
  {
    "path": "src/main/java/duke/command/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.Gui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class TagCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public TagCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Executes command to tag a task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param taskList list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param gui instance of Ui to deal with user interface."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param storage to read / write to storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param responseList list of strings to return to user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception thrown to be caught by caller method"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cString\u003e execute(TaskList taskList, Gui gui, Storage storage, ArrayList\u003cString\u003e responseList)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert taskList instanceof TaskList : \"tasklist had to be an isntance of a TaskList\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            // preparing index of task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            char numberCharacter \u003d this.fullCommand.charAt(4);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            int index \u003d Integer.parseInt(String.valueOf(numberCharacter)) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            if (index \u003e taskList.getTasksLeft()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(\"Please enter a task number within the range of tasks to be tagged\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            // preparing tags"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String stringOfTags \u003d this.fullCommand.substring(6);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String[] arrOfTags \u003d stringOfTags.split(\"#\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String test \u003d arrOfTags[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            // retrieve and modify"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            Task taskToChange \u003d taskList.getItem(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            for (int i \u003d 1; i \u003c arrOfTags.length; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                taskToChange.addTag(arrOfTags[i]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            // push new item to list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            taskList.modifyItem(index, taskToChange);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            storage.modifyTask(taskToChange, index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            ArrayList\u003cString\u003e addTagMessage \u003d gui.addTag(arrOfTags);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String taskInfo \u003d taskToChange.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.addAll(addTagMessage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            responseList.add(taskInfo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            return responseList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException a) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Please enter a valid tag\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (NumberFormatException n) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Please enter a valid number task to be tagged\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 90
    }
  },
  {
    "path": "src/main/java/duke/component/CliUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class CliUi {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private static final String INDENT \u003d \"  \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    Scanner scan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public CliUi() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        System.out.println(\"Bye!!! Hope to see you again real soon.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void showDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        System.out.println(\"The following task has been marked done: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        System.out.println(\"_____________________________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * prints out all the tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param list list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void listAllTasks(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        int LENGTH_OF_LIST \u003d list.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (LENGTH_OF_LIST \u003e 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                System.out.println(\"  \" + counter + \".\" + task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            System.out.println(\"No tasks found, add a task now!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * message after adding a task to list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasksLeft integer value of tasks remaining in the list of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void addMessage(Task task, int tasksLeft) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        System.out.println(\"Got it, the following task has been added:\\n\" + INDENT + INDENT + task +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \"\\n\" + INDENT + this.taskLeftMessage(tasksLeft));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * message after searching for term with Find"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param listOfTasksFound list of taks found containing that term"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void findMessage(ArrayList\u003cTask\u003e listOfTasksFound) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (listOfTasksFound.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            System.out.println(\"No tasks found with that term\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d listOfTasksFound.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                System.out.println(i + \".\" + listOfTasksFound.get(i - 1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * message after deleting a message."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param task task to be deleted."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasksLeft integer value of tasks remaining in the list of tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void deleteMessage(Task task, int tasksLeft) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        System.out.println(\"Noted. I have removed this task:\\n\" + INDENT + INDENT + task + \"\\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                this.taskLeftMessage(tasksLeft));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * message to show number of tasks left."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tasksLeft integer value of tasks remaining in the list of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of message."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String taskLeftMessage(int tasksLeft) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String end \u003d \"No tasks found. Add a task now!\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (tasksLeft \u003e 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            end \u003d \"Now you have \" + tasksLeft + \" tasks in the list.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void print(String s) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * shows icon based on whether task is done or not."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param task task to be checked."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of icon with brackets."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String getStatusIcon(Task task) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return (\"[\" + (task.getIsDone() ? \"\\u2713\" : \"\\u2718\") + \"] \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 119
    }
  },
  {
    "path": "src/main/java/duke/component/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Returns a standard Duke exception"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param errorMessage string that gets printed after error message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        super(\"OH NO!!! :( \" + errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert errorMessage instanceof String : \"Error message has to an instance of a String\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "//☹"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 14
    }
  },
  {
    "path": "src/main/java/duke/component/EnumUserInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class EnumUserInstruction {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * list of enums for user instructions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public enum userInstruction {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        BYE, LIST, FIND, DONE, DELETE, TODO, DEADLINE, EVENT, TAG"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 10
    }
  },
  {
    "path": "src/main/java/duke/component/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * Reads user input and returns appropriate command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param fullCommand complete string of user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return instance of Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception caught in method."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String[] userInputArr \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String instructionCommand \u003d userInputArr[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert userInputArr instanceof  String[] : \"When Command parses instructions, the strings must be stored in \" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \"an array\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        // ENUM generation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            EnumUserInstruction.userInstruction enumInstruction \u003d EnumUserInstruction.userInstruction."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    valueOf(instructionCommand.toUpperCase());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            switch (enumInstruction) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case TAG:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return new TagCommand(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                return new AddCommand(fullCommand, enumInstruction);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                throw new DukeException(\"Please enter a valid instruction (eg. todo, list, done...)\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (IllegalArgumentException i) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Please enter a valid instruction (eg. todo, list, done...)\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 51
    }
  },
  {
    "path": "src/main/java/duke/component/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private List\u003cString\u003e listOfTaskStrings;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * constructor for Storage instance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param filePath specifies where to search for the txt file to take in tasks from storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            if (Files.exists(this.filePath)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                this.listOfTaskStrings \u003d Files.readAllLines(this.filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                // create folder if needed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                Path folderPath \u003d filePath.getParent();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                Files.createDirectories(folderPath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                Files.createFile(this.filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                this.listOfTaskStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            this.listOfTaskStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * retrieves the tasks from storage and returns a list of it formatted as Tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return list of tasks from storage."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception thrown when exception caught while running."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cTask\u003e getListOfTasks() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert listOfTaskStrings instanceof List : \"ListOfTaskStrings must be of type List\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            for (String stringTask : this.listOfTaskStrings) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                char typeOfTask \u003d stringTask.charAt(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                char doneChar \u003d stringTask.charAt(4);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                boolean isDone \u003d Task.checkIfDone(doneChar);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                Task tempTask;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                switch (typeOfTask) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    tempTask \u003d new Todo(stringTask.substring(8));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                        tempTask.markDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    listOfTasks.add(tempTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    // Splitting string"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    String substringE \u003d stringTask.substring(8);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    String[] strArrE \u003d substringE.split(\"\\\\|\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    String descriptionE \u003d strArrE[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    String dateE \u003d convertBackDateTime(strArrE[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    tempTask \u003d new Event(descriptionE, dateE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                        tempTask.markDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    listOfTasks.add(tempTask);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    String substringD \u003d stringTask.substring(8);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    String[] strArrD \u003d substringD.split(\"\\\\|\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    String descriptionD \u003d strArrD[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    String dateD \u003d convertBackDateTime(strArrD[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    tempTask \u003d new Deadline(descriptionD, dateD);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                        tempTask.markDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    listOfTasks.add(tempTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    throw new DukeException(\"duke.task.Task was not recognised: \" + stringTask);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "//            System.out.println(e.getMe"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (NullPointerException | StringIndexOutOfBoundsException n) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"No data found in file\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * converts datetime formatted string back to resemble input date and time."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param dateTime string of formatted datetime."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of date time resembling input."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private String convertBackDateTime(String dateTime) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String dateUnconverted \u003d dateTime.substring(1, 12);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String timeConverted \u003d dateTime.substring(13, 18);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        // converting date"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateUnconverted, dtf);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtf2 \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String dateConverted \u003d date.format(dtf2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return \" \" + dateConverted + \" \" + timeConverted;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * updates storage with updated information."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void saveFile() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        if (!listOfTaskStrings.isEmpty()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(String.valueOf(filePath));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                for (String task : listOfTaskStrings) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                    fileWriter.write(task + \"\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                System.out.println(\"There was an error when writing the tasks to file: \" + e.getMessage());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * adds task to list and updates storage."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param task task to add."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String taskString \u003d task.stringToSave();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.listOfTaskStrings.add(taskString);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.saveFile();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * deletes task from list and updates storage."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param index index of task to delete."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.listOfTaskStrings.remove(index);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.saveFile();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * modifies task and updates storage."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param task task to modify."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param index index of task to modify."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void modifyTask(Task task, int index) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String taskString \u003d task.stringToSave();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.listOfTaskStrings.set(index, taskString);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.saveFile();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 177
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * constructor of Deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param description string of description of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param by date and time that task is to be completed by."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception thrown when exception caught while running."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String[] dateTimeUnformattedArr \u003d by.substring(1).split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String dateUnformatted \u003d dateTimeUnformattedArr[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String timeUnformatted \u003d dateTimeUnformattedArr[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            this.date \u003d extractDate(dateUnformatted);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            this.time \u003d extractTime(timeUnformatted);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException | DateTimeException a) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Date / time not formatted correctly, please follow format: yyyy/mm/dd hh:mm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * extracts date."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param dateUnformatted string of unformatted date."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return formatted Localdate from string of unformatted date."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private LocalDate extractDate(String dateUnformatted) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        dateUnformatted \u003d dateUnformatted.replaceAll(\"/\", \"-\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        LocalDate dateFormatted \u003d LocalDate.parse(dateUnformatted);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dateFormatted instanceof LocalDate : \"Return type of this method should be of type LocalDate\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return dateFormatted;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * extracts time."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param timeUnformatted string of unformatted time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return formatted Localtime from string of unformatted time."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private LocalTime extractTime(String timeUnformatted) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return LocalTime.parse(timeUnformatted);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * returns string of task to be printed out and shown to user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtfDate \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtfTime \u003d DateTimeFormatter.ISO_LOCAL_TIME;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dtfDate instanceof DateTimeFormatter : \"date formatter has to be of type DateTimeFormatter\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dtfTime instanceof DateTimeFormatter : \"time formatter has to be of type DateTimeFormatter\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String DEADLINE_STRING_SHOWED_TO_USER \u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \"[D]\" + super.toString() + this.stringOfTags + \" \" + \"(by: \" + this.date.format(dtfDate) + \" \" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                        this.time.format(dtfTime) + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return DEADLINE_STRING_SHOWED_TO_USER;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * returns string of task to be saved in storage."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String stringToSave() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        char status \u003d this.isDone ? \u00271\u0027 : \u00270\u0027;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtfDate \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtfTime \u003d DateTimeFormatter.ISO_LOCAL_TIME;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dtfDate instanceof DateTimeFormatter : \"date formatter has to be of type DateTimeFormatter\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dtfTime instanceof DateTimeFormatter : \"time formatter has to be of type DateTimeFormatter\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String DEADLINE_STRING_TO_SAVE \u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \"D \" + \"| \" + status + \" | \" + this.description + this.stringOfTags + \" \" + \"| \" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                        this.date.format(dtfDate) + \" \" + this.time.format(dtfTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return DEADLINE_STRING_TO_SAVE;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 90
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * constructor of Event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param description string of description of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param at date and time event takes place."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception thrown when exception caught while running."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String[] dateTimeUnformattedArr \u003d at.substring(1).split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String dateUnformatted \u003d dateTimeUnformattedArr[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            String timeUnformatted \u003d dateTimeUnformattedArr[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            this.date \u003d extractDate(dateUnformatted);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            this.time \u003d extractTime(timeUnformatted);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException | DateTimeException a) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Date / time not formatted correctly, please follow format: yyyy/mm/dd hh:mm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * extracts date."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param dateUnformatted string of unformatted date."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return formatted Localdate from string of unformatted date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private LocalDate extractDate(String dateUnformatted) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        dateUnformatted \u003d dateUnformatted.replaceAll(\"/\", \"-\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        LocalDate formattedDate \u003d LocalDate.parse(dateUnformatted);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert formattedDate instanceof LocalDate : \"return value of this method has to be of type LocalDate\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return formattedDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * extracts time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param timeUnformatted string of unformatted time."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return formatted Localtime from string of unformatted time."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private LocalTime extractTime(String timeUnformatted) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        LocalTime formattedTime \u003d LocalTime.parse(timeUnformatted);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert formattedTime instanceof LocalTime : \"return value of this method has to be of type LocalTime\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return formattedTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * returns string of task to be printed out and shown to user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtfDate \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtfTime \u003d DateTimeFormatter.ISO_LOCAL_TIME;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dtfDate instanceof DateTimeFormatter : \"date formatter has to be of type DateTimeFormatter\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dtfTime instanceof DateTimeFormatter : \"time formatter has to be of type DateTimeFormatter\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String EVENT_STRING_SHOWED_TO_USER \u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \"[E]\" + super.toString() + this.stringOfTags + \" \" + \"(at: \" + this.date.format(dtfDate) +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \" \" + this.time.format(dtfTime) + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return EVENT_STRING_SHOWED_TO_USER;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * returns string of task to be saved in storage."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String stringToSave() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        char status \u003d this.isDone ? \u00271\u0027 : \u00270\u0027;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtfDate \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        DateTimeFormatter dtfTime \u003d DateTimeFormatter.ISO_LOCAL_TIME;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dtfDate instanceof DateTimeFormatter : \"date formatter has to be of type DateTimeFormatter\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assert dtfTime instanceof DateTimeFormatter : \"time formatter has to be of type DateTimeFormatter\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String EVENT_STRING_TO_SAVE \u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \"E \" + \"| \" + status + \" | \" + this.description+ this.stringOfTags + \" \" + \"| \" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                        this.date.format(dtfDate) + \" \" + this.time.format(dtfTime);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return EVENT_STRING_TO_SAVE;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 93
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected ArrayList\u003cString\u003e listOfTags;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    protected String stringOfTags;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * constructor for task abstract class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param description string of task\u0027s description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.listOfTags \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.stringOfTags \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * returns approprivate icon for task done or not."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of icon."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String STATUS_ICON_PREFIX \u003d  (\"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return STATUS_ICON_PREFIX;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * changes status of task to done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * adds tag to a ask"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param tag string of tag to be added to task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void addTag(String tag) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String tagAdded \u003d \"#\" + tag;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.listOfTags.add(tagAdded);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.stringOfTags \u003d this.stringOfTags + tagAdded;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void removeTag(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.listOfTags.remove(index - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return this.getStatusIcon() + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * checks if task is done based on inary value."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param number character of number representing done status."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return boolean representing icon status."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @throws DukeException exception thrown when exception caught while running."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public static boolean checkIfDone(char number) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        switch (number) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        case \u00270\u0027:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        case \u00271\u0027:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            throw new DukeException(\"Item in list on HDD does not have a \u0027done\u0027 status\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public boolean isContain(String term) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        String stringToSearch \u003d this.description + this.stringOfTags;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final boolean isContainsTerm \u003d stringToSearch.contains(term);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return isContainsTerm;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public abstract String stringToSave();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 90
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * constructor for tasklist if no list was retrieved from storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * overloaded constructor for tasklist if list was retrieved from storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @param newList list generated from tasks in storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e newList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.list \u003d newList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void addItem(Task i) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        list.add(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void deleteItem(int itemIndex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        list.remove(itemIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public Task getItem(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void modifyItem(int index, Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        list.set(index, task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public int getTasksLeft() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void setList(ArrayList\u003cTask\u003e newList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        this.list.addAll(newList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 51
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String TODO_TASK_STRING \u003d  \"[T]\" + super.toString() + \" \" + this.stringOfTags;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return TODO_TASK_STRING;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * generates string of task to save in storage file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     * @return string of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public String stringToSave() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        char status \u003d this.isDone ? \u00271\u0027 : \u00270\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        final String TODO_TASK_TO_SAVE \u003d \"T \" + \"| \" + status + \" | \" + this.description + \" \" + this.stringOfTags;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        return TODO_TASK_TO_SAVE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 25
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Assistant\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"35.0\" fitWidth\u003d\"35.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            fx:controller\u003d\"duke.Gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 21
    }
  },
  {
    "path": "src/out/artifacts/ip_jar/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "T | 0 | make milk"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 1
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void toStringTest_newTask_stringOutput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            Deadline deadlineTask \u003d new Deadline(\"get 6 abs\", \"2040/05/21 13:43\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            assertEquals(\"[D][✘] get 6 abs (by: May 21 2040 13:43:00)\", deadlineTask.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            System.out.println(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void extractStringToSave_newTask_taskInProperFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            Deadline deadlineTask \u003d new Deadline(\"test\", \"2040/05/21 13:43\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            assertEquals(\"D | 0 | test | May 21 2040 13:43:00\", deadlineTask.stringToSave());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "            System.out.println(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 29
    }
  },
  {
    "path": "src/test/java/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.component.CliUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void tasksLeft_0_noneFoundMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        CliUi ui \u003d new CliUi();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assertEquals(\"No tasks found. Add a task now!\", ui.taskLeftMessage(0));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    public void getStatusIcon_null_appropriateMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        CliUi ui \u003d new CliUi();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        Todo task \u003d new Todo(\"save the world\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assertEquals(\"[✘] \", ui.getStatusIcon(task));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "        assertEquals(\"[✓] \", ui.getStatusIcon(task));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 27
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "deadline get 6 packs /by eternity"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "todo join SIA app challenge"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "event strongman challenge /at daily"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "todo run 70 mile Iron man"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GeNiaaz"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "GeNiaaz": 1,
      "-": 20
    }
  }
]
