[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 17,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "![spongebob](spongebob.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Spongebob, the highly efficient/reknowned employee of the fine establishment that is the Krusty Krab, is now offering his services as your personal assistant to help you through this arduous CS life."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### Multi-purpose Tasklist"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "In this tasklist you will be able to add, delete different types of tasks in your tasklist. This includes:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "- TODOS -- A simple task such as \"Feed Gary\" or \"Complete CS2103 IP submission\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "- FIXED_DURATION_TASKS -- For tasks with fixed durations \"Complete 5x Burgers in 2hours)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "- DEADLINES -- For tasks with deadline, \"Replenish Kelp stock by 20 March 2020\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "- EVENTS -- For events such as \"Do nothing with patrick on 31 Feb 2020\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Youll be able to mark these tasks as done once you are done with them (Integrity please.)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### Search through your Tasklist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Spongebob can also help you quickly find tasks by keywords."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### Duplicate Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Spongebob ensures that you do not accidentally add duplicate tasks so as to not artificially inflate your tasklist."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### Saves Tasklist on computer"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Spongebob saves your tasklist on your computer so that no one can see your private tasks ;)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `list` - View all tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "This allows you to view all tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "![list_outcome](list_outcome.png)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `bye` - Closing Spongebob"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Closes the program"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`Program Closes.`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `todo TASK_DESCRIPTION` - Create new TODO task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Creates a new TODO task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`todo buy kelp`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "`outcome`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `deadline TASK_DESCRIPTION /by YYYY-MM-DD HHmm` - Create new DEADLINE task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Creates a new DEADLINE task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`deadline replenish kelp /by 2020-04-28 0600`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "![deadline_outcome](deadline_outcome.png)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `event TASK_DESCRIPTION /at YYYY-MM-DD HHmm` - Create new EVENT task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Creates a new EVENT task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`event Showdown with Salley /at 2020-04-27 1330`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "![event_outcome](event_outcome.png)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `fdtask TASK_DESCRIPTION /for TASK_DURATION` - Create new FIXED_DURATION_TASK task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Creates a new FIXED_DURATION_TASK task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`fdtask Do nothing with patrick /for 2 hours`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "![fdtask_outcome](fdtask_outcome.png)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `find QUERY` - Completes a task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Searches through your tasklist to find tasks whose description contains your query"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`find patrick`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "![find_outcome](find_outcome.png)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `done TASK_ID` - Completes a task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Marks a Task as done. TASK_ID can be found using `list`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "![done_outcome](done_outcome.png)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "### `delete TASK_ID` - Deletes a task."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "Deletes a task. TASK_ID can be found using `list`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "![delete_outcome](delete_outcome.png)"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 114,
      "-": 23
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private HBox chatBubble;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private DialogBox(String text, Image img, String chatStyle) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        chatBubble.getStyleClass().add(chatStyle);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return new DialogBox(text, img, \"patrickBubble\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"spongebobBubble\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 66
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * Duke the all purpose chatbot to serve your human needs. Made from the finest IDEs, Duke will be the most"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * efficient task list you have ever laid your hands upon."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * To instantiate a Duke instance."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        storage \u003d new Storage(\"./data\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Instantiate Duke instance with custom Storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param s  Custom Storage to be used with duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Duke(Storage s) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        storage \u003d s;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            String lineToPrint \u003d c.execute(tasks, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return lineToPrint;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 43,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.stage.StageStyle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            // Set Up Styles"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            scene.getStylesheets().add(\"/view/DialogBox.css\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            scene.getStylesheets().add(\"/view/MainWindow.css\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            stage.initStyle(StageStyle.UTILITY);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 40
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private ImageView header;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/patrick.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/spongebob.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Image headerImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/header.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * To Initialise MainWindow View component."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        dialogContainer.setBackground(Background.EMPTY);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        header.setImage(headerImg);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * To set Duke instance for component."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        scrollPane.setPannable(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Show welcome message to user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String welcomeMsg \u003d \"I\u0027m ready, I\u0027m ready, I\u0027m ready...\\n Oh hey there what can I do for you today?\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                DialogBox.getDukeDialog(welcomeMsg, dukeImage)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        );"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 77
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.AddTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.EmptyArgumentException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.FixedDurationTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * Parser class that helps to understand user input and returns the correct commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private static Command parseDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assert input.contains(\"done\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.matches(\"done\\\\s*\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new EmptyArgumentException(\"duke.task.Task Index\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (!input.matches(\"done \\\\d+\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new InvalidArgumentException(\"duke.task.Task Index\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        int index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private static Command parseTodoTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assert input.contains(\"todo\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.matches(\"todo\\\\s*\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new EmptyArgumentException(\"todo\u0027s description\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return new AddTaskCommand(new Todo(input.substring(5)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private static Command parseFixedDurationTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String command \u003d \"fdtask\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assert input.contains(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.matches(command + \"\\\\s*\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new EmptyArgumentException(command + \"\u0027s description\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (!input.matches(command + \" .+/for .+\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new InvalidArgumentException(command + \"\u0027s description\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String[] split \u003d input.substring(command.length() + 1).split(\"/for\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String dateTimeString \u003d split[1].stripLeading();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return new AddTaskCommand(new FixedDurationTask(split[0].stripTrailing(), dateTimeString));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private static Command parseDeadlineTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assert input.contains(\"deadline\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.matches(\"deadline\\\\s*\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new EmptyArgumentException(\"deadline\u0027s description\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (!input.matches(\"deadline .+/by \\\\d{4}-\\\\d{1,2}-\\\\d{1,2} \\\\d{4}\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new InvalidArgumentException(\"deadline\u0027s description/time\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String[] split \u003d input.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String dateTimeString \u003d split[1].stripLeading();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        LocalDateTime dateTime \u003d parseDateTime(dateTimeString);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return new AddTaskCommand(new Deadline(split[0].stripTrailing(), dateTime));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private static Command parseEventTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assert input.contains(\"event\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.matches(\"event\\\\s*\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new EmptyArgumentException(\"event\u0027s description\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (!input.matches(\"event .+/at \\\\d{4}-\\\\d{1,2}-\\\\d{1,2} \\\\d{4}\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new InvalidArgumentException(\"event description/datetime\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String[] split \u003d input.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String dateTimeString \u003d split[1].stripLeading();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return new AddTaskCommand(new Event(split[0].stripTrailing(), parseDateTime(dateTimeString)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private static Command parseDelete(String input) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assert input.contains(\"delete\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.matches(\"delete\\\\s*\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new EmptyArgumentException(\"Task Index\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (!input.matches(\"delete \\\\d+\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new InvalidArgumentException(\"Task Index\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        int index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private static Command parseFind(String input) throws EmptyArgumentException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assert input.contains(\"find\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.matches(\"find\\\\s*\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new EmptyArgumentException(\"find argument\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Parse a dateTime string of format : yyyy-mm-dd HHmm"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * and returns with format : yyyy-mm-ddTHH:mm"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param s  String to be parsed."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return  LocalDateTime parsable string."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public static LocalDateTime parseDateTime(String s) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String[] dateTimeSplit \u003d s.split(\" \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String date \u003d dateTimeSplit[0];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String hour \u003d dateTimeSplit[1].substring(0, 2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String min \u003d dateTimeSplit[1].substring(2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return LocalDateTime.parse(date + \"T\" + hour + \":\" + min);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Main method of the Parser class, this will evaluate a input string and"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * return the appropriate command."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param input  Input to be parsed"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return  Command Object that represents the input\u0027s desires."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @throws DukeException  If input is invalid."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else if (input.matches(\"done.*\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return parseDone(input);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else if (input.matches(\"todo.*\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return parseTodoTask(input);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else if (input.matches(\"deadline.*\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return parseDeadlineTask(input);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else if (input.matches(\"event.*\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return parseEventTask(input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else if (input.matches(\"fdtask.*\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return parseFixedDurationTask(input);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else if (input.matches(\"delete.*\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return parseDelete(input);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else if (input.matches(\"find.*\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return parseFind(input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            assert !input.contains(\"done\")"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    \u0026\u0026 !input.contains(\"todo\")"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    \u0026\u0026 !input.contains(\"deadline\")"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    \u0026\u0026 !input.contains(\"event\")"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    \u0026\u0026 !input.contains(\"delete\")"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    \u0026\u0026 !input.contains(\"fdtask\")"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    \u0026\u0026 !input.contains(\"find\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 158
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.FixedDurationTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * Deals with all Storage operations."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private static File memoryFile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String directory;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * To initialise a Storage object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param directory  Directory where storage file will be stored."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Storage(String directory) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.directory \u003d directory;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        path \u003d Paths.get(directory + \"/data.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private List\u003cTask\u003e parseData(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assert f !\u003d null : \"File should not be null\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            String str \u003d s.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            String[] args \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            // Deconstruct Task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            String taskType \u003d args[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            boolean isDone \u003d args[1].equals(\"1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            String description \u003d args[2];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                task \u003d new Deadline(description, LocalDateTime.parse(args[3]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                task \u003d new Event(description, LocalDateTime.parse(args[3]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            case \"FT\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                task \u003d new FixedDurationTask(description, args[3]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                assert false : \"Data File has unknown types\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                System.out.println(\"Corrupted Data Entry found : \" + str);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Writes given task to memory."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param task  Task to be saved."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @throws IOException  If FileWriter faces writing issues."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void writeData(Task task) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path.toString(), true);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        fw.write(task.convertToData() + \"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Rewrites entire memory file with TaskList."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param tasks  TaskList to be saved."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @throws IOException  If FileWriter faces exceptions"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void rewriteData(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            fw.write(t.convertToData() + \"\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Initialise a TaskList from memory file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param tasks  TaskList to be initialised."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void initialiseTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        memoryFile \u003d new File(path.toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (Files.exists(path)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            System.out.println(\"Loading Tasks from Memory...\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                List\u003cTask\u003e memoryList \u003d parseData(memoryFile);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                tasks.addAll(memoryList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                System.out.println(\"Error loading data.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            System.out.println(\"Load Successful!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            System.out.println(\"No Memory Found.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            File directory \u003d new File(this.directory);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                directory.mkdirs();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                FileWriter fw \u003d new FileWriter(path.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                System.out.println(\"Creating new memory file..\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                fw.write(\"\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                System.out.println(\"Done.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                System.out.print(e.getMessage());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 153
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.WriteToStorageException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * Represents a list of Task objects. Contains functions to manipulate tasklist."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Storage store;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * To instantiate a TaskList, pass in Storage object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param store  Storage Object to store Task data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public TaskList(Storage store) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        store.initialiseTasks(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Returns TaskList\u0027s Storage Object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return TaskList\u0027s Storage Object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Storage getStore() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return store;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Add task to TaskList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param task  Task to be added."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @throws WriteToStorageException  If error encountered when writing to db."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void addTask(Task task) throws WriteToStorageException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            store.writeData(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new WriteToStorageException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Mark a task in TaskList as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param index Index of the task to be set as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @throws WriteToStorageException if Storage faces issues writing tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void doneTask(int index) throws WriteToStorageException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            store.rewriteData(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new WriteToStorageException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return \"No task added yet!\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            StringBuilder result \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                result.append(i + 1).append(\". \").append(tasks.get(i).toString()).append(i + 1 \u003d\u003d tasks.size()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                        ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return result.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Delete a task from list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param index Index of task to be removed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return return deleted Task object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Task remove(int index) throws WriteToStorageException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task removedTask \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            store.rewriteData(tasks);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new WriteToStorageException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Searches through TaskList to find all Task that contains query."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param query  Query to be searched"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return  returns list of tasks that contains query."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public List\u003cTask\u003e findAll(String query) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        List\u003cTask\u003e ts \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            if (t.contains(query)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                ts.add(t);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return ts;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Checks whether TaskList contains a certain task."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param t  Task to check against."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return  Return true if list contains task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean contains(Task t) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            if (task.equals(t)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 131
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class AddTaskCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public AddTaskCommand(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String execute(TaskList tasks, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (tasks.contains(task)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return \"Task already exists\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n  \" + task.toString() + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        AddTaskCommand that \u003d (AddTaskCommand) o;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return Objects.equals(task, that.task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return Objects.hash(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 49
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Executes a given command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param tasks  TaskList to be manipulated."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param store  Storage object to manage saving of data."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String execute(TaskList tasks, Storage store) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Return true if command signals the termination of the chatbot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return  True if command terminates Dook and false if otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean isExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String execute(TaskList tasks, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new InvalidArgumentException(\"index\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task deleted \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n  \" + deleted.toString() + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String execute(TaskList tasks, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            throw new InvalidArgumentException(\"index\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks.doneTask(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + tasks.getTask(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String execute(TaskList tasks, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String query;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public FindCommand(String query) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String execute(TaskList tasks, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        List\u003cTask\u003e results \u003d tasks.findAll(query);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String tasksString \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (results.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return \"No matches found :(\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            for (int i \u003d 0; i \u003c results.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                tasksString +\u003d \"\" + (i + 1) + \".\" + results.get(i).toString() + (i + 1 \u003d\u003d tasks.size() ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return \"Here are the matching tasks in your list:\\n\" + tasksString;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String execute(TaskList tasks, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/CorruptedDataFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class CorruptedDataFileException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public CorruptedDataFileException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return String.format(\"data/duke.txt is corrupted.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"onosies there\u0027s an errorz\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class EmptyArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String arg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public EmptyArgumentException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.arg \u003d \"Arguments\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public EmptyArgumentException(String arg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return String.format(\"%s cant be empty patrick!!\", arg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String arg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public InvalidArgumentException(String arg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return String.format(\"You cant let %s be that patrick!!\", arg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Random rnd \u003d new Random();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        int responseNumber \u003d rnd.nextInt(3);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        switch(responseNumber) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return \"speak louder patrick! i cant hear you!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return \"could you repeat that again patrick?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return \"i don\u0027t really know what you are saying patrick\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 19
    }
  },
  {
    "path": "src/main/java/duke/exception/WriteToStorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class WriteToStorageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"Error writing to Store\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * To instantiate a new Deadline Task Object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param description  Description of deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param deadline  Deadline of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy @ h:mma\"))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + deadline.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Instantiate Event Object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param description  Description of Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param time  Time of event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy @ h:mma\"))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + time.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 27
    }
  },
  {
    "path": "src/main/java/duke/task/FixedDurationTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class FixedDurationTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Instantiate Fixed Duration Task Object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param description  Description of Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param time  Time of event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public FixedDurationTask(String description, String time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.duration \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"[FT]\" + super.toString() + \" (\" + duration + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"FT | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + duration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * Represents a task. Task will generally have a description and have a isDone state. Some subclasses"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " * will have other details such as time (e.g. Event, Deadline)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return (isDone ? \"[✓] \" : \"[✗] \") + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task task \u003d (Task) o;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return Objects.equals(description, task.description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return Objects.hash(isDone, description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Returns a string that can be used to write to memory."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return  String that will be used to write to memory."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public abstract String convertToData();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * Check whether Task\u0027s description contains query."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @param query  Query to be checked"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     * @return  returns true if query is contained in description else returns false."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public boolean contains(String query) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return description.contains(query);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 16
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "      \u003cHBox fx:id\u003d\"chatBubble\" prefWidth\u003d\"258.0\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "               \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                  \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "               \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                  \u003cFont size\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" layoutX\u003d\"306.0\" layoutY\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 38
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "      \u003cImageView fx:id\u003d\"header\" fitHeight\u003d\"105.0\" fitWidth\u003d\"600.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" style\u003d\"-fx-background-color: rgb(253,247,49); -fx-border-color: rgb(192,154,13); -fx-border-width: 1; -fx-border-radius: 3;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: rgb(253,247,49)rgb(253,247,49);\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"103.0\" pannable\u003d\"true\" prefHeight\u003d\"655.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"653.0\" prefWidth\u003d\"597.0\" style\u003d\"-fx-background-color: transparent\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 21
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void list_emptyList_emptyListText() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Storage s \u003d new StorageStub();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Duke d \u003d new Duke(s);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(d.getResponse(\"list\"), \"No task added yet!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void todo_validDescription_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Storage s \u003d new StorageStub();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Duke d \u003d new Duke(s);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String actual \u003d d.getResponse(\"todo testTask\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task task \u003d d.getTasks().getTask(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String expected \u003d \"Got it. I\u0027ve added this task:\\n  \" + task.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                + d.getTasks().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void event_validDescription_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Storage s \u003d new StorageStub();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Duke d \u003d new Duke(s);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String actual \u003d d.getResponse(\"event testTask /at 2020-04-23 2355\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task task \u003d d.getTasks().getTask(0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String expected \u003d \"Got it. I\u0027ve added this task:\\n  \" + task.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                + d.getTasks().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void deadline_validDescription_success() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Storage s \u003d new StorageStub();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Duke d \u003d new Duke(s);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String actual \u003d d.getResponse(\"deadline testTask /by 2020-04-23 2355\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task task \u003d d.getTasks().getTask(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String expected \u003d \"Got it. I\u0027ve added this task:\\n  \" + task.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                + d.getTasks().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void fdtask_validDescription_success() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Storage s \u003d new StorageStub();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Duke d \u003d new Duke(s);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String actual \u003d d.getResponse(\"fdtask testTask /for 2 hours\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task task \u003d d.getTasks().getTask(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String expected \u003d \"Got it. I\u0027ve added this task:\\n  \" + task.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                + d.getTasks().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void delete_validIndex_success() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Storage s \u003d new StorageStub();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Duke d \u003d new Duke(s);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        d.getResponse(\"fdtask testTask /for 2 hours\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String actual \u003d d.getResponse(\"delete 1\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertTrue(actual.matches("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "                \"Noted\\\\. I\u0027ve removed this task:\\n  \\\\[.*\\nNow you have \\\\d tasks in the list.\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void find_validIndex_success() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Storage s \u003d new StorageStub();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Duke d \u003d new Duke(s);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        d.getResponse(\"fdtask testTask /for 2 hours\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String actual \u003d d.getResponse(\"find test\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertTrue(actual.matches(\"Here are the matching tasks in your list:\\n.+\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void done_validIndex_success() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Storage s \u003d new StorageStub();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Duke d \u003d new Duke(s);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        d.getResponse(\"fdtask testTask /for 2 hours\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        String actual \u003d d.getResponse(\"done 1\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertTrue(actual.matches(\"Nice! I\u0027ve marked this task as done:\\n\\\\[.+]\\\\[✓].+\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 93
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.command.AddTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void parseDateTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(\"2020-04-27T10:00\", Parser.parseDateTime(\"2020-04-27 1000\").toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void parse_todoCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(new AddTaskCommand(new Todo(\"hello\")), Parser.parse(\"todo hello\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 22
    }
  },
  {
    "path": "src/test/java/duke/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public StorageStub() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void initialiseTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void writeData(Task task) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    public void rewriteData(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 25
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.exception.WriteToStorageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void addTask() throws WriteToStorageException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task task \u003d new Todo(\"hello world\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        TaskList tasks \u003d new TaskList(new StorageStub());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(0 , tasks.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertEquals(1 , tasks.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nopenotj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    void doneTask() throws WriteToStorageException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        Task task \u003d new Todo(\"hello world\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        TaskList tasks \u003d new TaskList(new StorageStub());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        tasks.doneTask(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "        assertTrue(tasks.getTask(0).isDone());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "delete 1"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nopenotj"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nopenotj": 1,
      "-": 37
    }
  }
]
