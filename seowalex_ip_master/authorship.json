[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printPrompt(LOGO"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        );"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private static String createPrompt(String promptText) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String[] lines \u003d promptText.split(\"[\\\\r\\\\n]+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(INDENTATION + HORIZONTAL_LINE + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            output.append(INDENTATION).append(line).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        output.append(INDENTATION).append(HORIZONTAL_LINE).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void printPrompt(String promptText) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        System.out.println(createPrompt(promptText));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void printAddTask(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printPrompt(\"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + task + \"\\n\" + \"Now you have \" + tasks.size()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void addTodo(String description) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printAddTask(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void addDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        int index \u003d input.indexOf(\" /by \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String description \u003d index \u003d\u003d -1 ? input : input.substring(0, index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String by \u003d index \u003d\u003d -1 ? \"\" : input.substring(index + 5);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } else if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printAddTask(deadline);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void addEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        int index \u003d input.indexOf(\" /at \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String description \u003d index \u003d\u003d -1 ? input : input.substring(0, index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String at \u003d index \u003d\u003d -1 ? \"\" : input.substring(index + 5);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } else if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"The date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printAddTask(event);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void doTask(String otherInput) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (otherInput.equals(\"\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Task number required for the done command.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } else if (!otherInput.chars().allMatch(Character::isDigit)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Only positive integers allowed for the done command.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        int taskNo \u003d Integer.parseInt(otherInput);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Task \" + taskNo + \" does not exist.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printPrompt(\"Nice! I\u0027ve marked this task as done:\\n  \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void deleteTask(String otherInput) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (otherInput.equals(\"\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Task number required for the delete command.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        } else if (!otherInput.chars().allMatch(Character::isDigit)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Only positive integers allowed for the delete command.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        int taskNo \u003d Integer.parseInt(otherInput);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"Task \" + taskNo + \" does not exist.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Task task \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printPrompt(\"Noted. I\u0027ve removed this task:\\n  \""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + task + \"\\n\" + \"Now you have \" + tasks.size()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void listTasks() throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            throw new DukeException(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            output.append(tasks.indexOf(task) + 1).append(\".\").append(task).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printPrompt(output.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            int index \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String command \u003d index \u003d\u003d -1 ? input : input.substring(0, index);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            String otherInput \u003d index \u003d\u003d -1 ? \"\" : input.substring(index + 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        if (!otherInput.equals(\"\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        listTasks();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        doTask(otherInput);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        deleteTask(otherInput);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        addTodo(otherInput);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        addDeadline(otherInput);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        addEvent(otherInput);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seowalex"
        },
        "content": "                printPrompt(e.getMessage());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seowalex"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        printPrompt(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 194,
      "-": 7
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(\"\\u2639 OOPS!!! \" + message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seowalex": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seowalex"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seowalex"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seowalex"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "deadline test /by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seowalex"
        },
        "content": "event test /at"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done something"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seowalex"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seowalex"
        },
        "content": "blah"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seowalex"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "seowalex": 22
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seowalex"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "seowalex": 1,
      "-": 37
    }
  }
]
