[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "# Duke.Duke.main.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.Duke.main.Duke.java` file, right-click it, and choose `Run Duke.Duke.main.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 2,
      "-": 24
    }
  },
  {
    "path": "data/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "[T][✘] hahaha"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "[D][✘] hahaha (by: Jan_1_2020)"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 2
    }
  },
  {
    "path": "src/Duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.main.Formating;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class consists all exceptions related to Duke input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void classCastException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.CLASSCASTEXCEPTION.toString())"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void numberFormatException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.NUMBERFORMATEXCEPTION.toString())"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void numberExcessException() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.NUMBEREXCESSEXCEPTION.toString())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void emptyTaskException() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.EMPTYTASKEXCEPTION.toString())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void inputFormatException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.INPUTFORMATEXCEPTION.toString())"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void timeMissingException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.NOTIMEEXCEPTION.toString())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void fileException() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println(new Formating\u003c\u003e(Exceptions.FILEEXCEPTION.toString()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void readLineException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println(new Formating\u003c\u003e(Exceptions.READLINEEXCEPTION.toString()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void FileException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.FILEEXCEPTION.toString())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void ReadLineException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.READLINEEXCEPTION.toString())"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void timeFormatException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(Exceptions.TIMEFORMATEXCEPTION.toString())"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 73
    }
  },
  {
    "path": "src/Duke/exception/Exceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This is an enum class that contains"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * all String for the exception error message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public enum Exceptions {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    NUMBEREXCESSEXCEPTION {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    OOPS!!! It seems like you don\u0027t have this option\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"    Enter list to see options\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    CLASSCASTEXCEPTION {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    The content is not of data type of String\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    NUMBERFORMATEXCEPTION {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    OOPS!!! The format of your index number is incorrect\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    INPUTFORMATEXCEPTION {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    EMPTYTASKEXCEPTION {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    OOPS!!! The description of the task cannot be empty\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    NOTIMEEXCEPTION {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    OOPS!!! The time of a deadline/event cannot be empty\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    FILEEXCEPTION {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    OOPS!!! The file exists but is a directory rather than a regular file,\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"    or does not exist but cannot be created,\\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"    or cannot be opened for any other reason\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    READLINEEXCEPTION {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    OOPS!!! There is a problem reading\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    TIMEFORMATEXCEPTION {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    OOPS!!! Your time format seems incorrect, please follow yyyy-mm-dd\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 73
    }
  },
  {
    "path": "src/Duke/main/Directory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This is an enum class that contains"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * the directories needed for the operation"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * of Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public enum Directory {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    FILEDIRECTORY {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"./data/Duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 15
    }
  },
  {
    "path": "src/Duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This is the main class that"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * is directly called by the users."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String clientInput \u003d ui.conciseInput();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (!parser.isEnd(clientInput)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            parser.run(clientInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            clientInput \u003d ui.conciseInput();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 23
    }
  },
  {
    "path": "src/Duke/main/Formating.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class handles the final format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * that is printed out by Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * @param \u003cT\u003e: T is the data type of the input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Formating\u003cT\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final T content;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize Formating object with content."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param content object of any type."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Formating(T content) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns the content in the format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return content."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public T getContent() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return this.content;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method only can be used when the content"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * is of the type of String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns a Formating object whose content has been"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * shortened by eliminating the extra spaces at the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * beginning of the content and at the end of the content."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return The above described Formating object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Formating\u003cString\u003e shorten() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String input \u003d (String) content;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int length \u003d input.length();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int frontPos \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int backPos \u003d length - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            while (frontPos \u003c length \u0026\u0026 input.charAt(frontPos) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                frontPos++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            while (backPos \u003e\u003d 0 \u0026\u0026 input.charAt(backPos) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                backPos--;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (frontPos \u003e backPos) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return new Formating\u003c\u003e(\"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new Formating\u003c\u003e(input.substring(frontPos, backPos + 1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.classCastException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method only can be used when the content"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * is of the type of String."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns Task whose output of toString method"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * is equal to the content."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return Task whose output of toString method"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         is equal to the content."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Task stringToTask() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String input \u003d (String) content;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String[] inputArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            char typeOfTask \u003d inputArray[0].charAt(1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            boolean isDone \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (inputArray[0].substring(4, 5).equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (typeOfTask \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                task \u003d new Todo(inputArray[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                int lenOfArray \u003d inputArray.length;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                int lenOfLastInArray \u003d inputArray[lenOfArray - 1].length();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                String time \u003d inputArray[lenOfArray - 1]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        .substring(0, lenOfLastInArray - 1)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        .substring(0, lenOfLastInArray - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                if (typeOfTask \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    task \u003d new Deadline(inputArray[1], time);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    task \u003d new Event(inputArray[1], time);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                task.setDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.classCastException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String underscore \u003d"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \"  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (this.content instanceof Task) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return underscore + \"\\n\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    Status.TASKADDED.toString() +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    content + \"\\n\" +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    String.format(Status.REPORT.toString(), Parser.taskList.getTaskList().size()) +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"\\n\" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    underscore;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return underscore + \"\\n\" +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                content + \"\\n\" +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                underscore;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 135
    }
  },
  {
    "path": "src/Duke/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.storage.EditFile;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.storage.ReadFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.storage.WriteIn;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class deals with the strings from the client"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * and enable the string to make sense to Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static TaskList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static String[] extract \u003d new String[3];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static final int command \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static final int taskDetail \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static final int taskTime \u003d 2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is to initialize the Parser."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskList \u003d new TaskList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to refresh the taskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void reloadTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskList \u003d new TaskList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        new ReadFile(Directory.FILEDIRECTORY.toString()).readFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Return true if the input from the"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * user is \"bye\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param inputFromClient Input from the"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                        user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return Return true if input is \"bye\"."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public boolean isEnd(String inputFromClient) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return inputFromClient.equals(Status.BYE.name().toLowerCase());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * The method is to run the Parser."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param order The order is the string after"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *              being shortened by Formating.shorten()."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void run(String order) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        extract \u003d extract(order);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        reloadTaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (order.equals(Status.LIST.name().toLowerCase())) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    new Formating\u003c\u003e(Status.LIST.toString() + taskList)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (extract[command].equals(Status.DONE.name().toLowerCase())) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                done();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else if (extract[command].equals(Status.DELETE.name().toLowerCase())){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                delete();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else if (extract[command].equals((Status.FIND.name().toLowerCase()))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                find(extract[taskDetail]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else if (order.length() \u003d\u003d 0) { }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                identifier();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void done() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to set done the corresponding"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * task on both the taskList and Duke.txt."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param order The order is the string after"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *              being shortened by Formating.shorten()."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void done(String order) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int num \u003d Integer.parseInt(extract[taskDetail]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (num \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                DukeException.numberExcessException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Task task \u003d taskList.getTaskList().get(num - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                task.setDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                EditFile editFile \u003d new EditFile(Directory.FILEDIRECTORY.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                editFile.setTaskDone(num);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        new Formating\u003c\u003e(new Response(Status.DONE.toString() + task)));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.numberFormatException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void delete() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to delete the corresponding"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * task on both the taskList and Duke.txt."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param order The order is the string after"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *              being shortened by Formating.shorten()."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void delete(String order) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int num \u003d Integer.parseInt(extract[taskDetail]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (num \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                DukeException.numberExcessException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Task task \u003d taskList.getTaskList().get(num - 1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                taskList.getTaskList().remove(num - 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                EditFile editFile \u003d new EditFile(Directory.FILEDIRECTORY.toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                editFile.deleteLine(num);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                String response \u003d"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        Status.DELETE.toString() +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                                task + \"\\n\" +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                                String.format"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                                        (Status.REPORT.toString(), taskList.getTaskList().size());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        new Formating\u003c\u003e(new Response(response)));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.numberFormatException();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void find(String content) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskList \u003d new TaskList\u003c\u003e();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        ReadFile readFile \u003d new ReadFile(Directory.FILEDIRECTORY.toString());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        readFile.matchContent(content);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(taskList)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static String[] extract(String description) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to identify the type of Tasks"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * from the description passed down from the upper"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * level, which is essentially the input from the"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * user."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description The description passed down"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    from the upper level, which"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    is essentially the input from"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the user."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void identifier(String description) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int len \u003d description.length();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int pointer \u003d 0;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (pointer \u003c len \u0026\u0026 description.charAt(pointer) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            pointer++;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //the command of the description has been found."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        extract[command] \u003d description.substring(0, pointer);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int separator \u003d pointer;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (separator \u003c len \u0026\u0026 description.charAt(separator) !\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            separator++;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //situation that there is no detail of the task, return"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (pointer \u003d\u003d separator) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return extract;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //details of the description is found"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        extract[taskDetail] \u003d new Formating\u003c\u003e("
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                description"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        .substring(pointer + 1, separator)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                )"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                .shorten()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                .getContent();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (separator \u003c len \u0026\u0026 description.charAt(separator) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            separator++;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //time of the description is found"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (separator \u003c len - 1) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            extract[taskTime] \u003d new Formating\u003c\u003e("
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    description"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .substring(separator + 1)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    .shorten()"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    .getContent();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return extract;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void identifier() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String identity \u003d extract[command];"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String detail \u003d extract[taskDetail];"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String time \u003d extract[taskTime];"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println(identity);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //to check if the input is not a todo or event or deadline"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (!identity.equals(Status.TODO.toString())"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u0026 !identity.equals(Status.EVENT.toString())"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u0026 !identity.equals(Status.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.inputFormatException();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //situation that there is no detail of the task, throw error"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (detail \u003d\u003d null) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.emptyTaskException();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (identity.equals(Status.TODO.toString())) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            task \u003d new Todo(detail);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Time date \u003d new Time(time);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                if (identity.equals(Status.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    task \u003d new Deadline(detail, date.toString());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    task \u003d new Event(detail, date.toString());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                DukeException.timeFormatException();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskList.addMemory(task);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        WriteIn data \u003d new WriteIn(Directory.FILEDIRECTORY.toString(), true);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        data.writeToFile(task.toString());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Formating\u003cTask\u003e formatedResponse \u003d"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(task);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println(formatedResponse);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 264
    }
  },
  {
    "path": "src/Duke/main/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class is to make response"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * to the user\u0027s input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected String response;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a Response."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param response A string which"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                 is the content of"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                 response."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response(String response) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.response \u003d response;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return this.response;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 25
    }
  },
  {
    "path": "src/Duke/main/Status.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This enum class consist of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * all pattern strings printed out"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * by Duke except the exceptions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public enum Status {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    GREET {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    Wonderful! It is nice to see you!\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"    Is there anything I can help?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    It is nice to talk to you.\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"    Hope to see you again!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"      \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"      \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    FIND {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    Here are the matching tasks in your list\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"      \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    TASKADDED {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    Got it. I\u0027ve added this task\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \"      \";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    REPORT {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"    Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    FINISHED {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 103
    }
  },
  {
    "path": "src/Duke/main/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class is to convert the time string"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * of format \"yyyy-mm-dd\" into \"MMM_d_yyyy\"."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a Time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param time A string of format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             of \"yyyy-mm-dd\"."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Time(String time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        localDate \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return localDate.format(DateTimeFormatter.ofPattern(\"MMM_d_yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 26
    }
  },
  {
    "path": "src/Duke/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class is to interact with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a Ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns a string that is equal to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * the user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return The above described string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String readFromClient() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method eliminates the spaces"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * around the user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return A string with spaces around it."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String conciseInput() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String extract \u003d readFromClient();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Formating\u003c\u003e(extract).shorten().getContent();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method prints the beginning greeting that"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * a user will receive at the start of Duke operation."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        new Response(Status.GREET.toString()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                )"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method prints the ending words that"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * a user will receive after he inputs \"bye\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        new Response(Status.BYE.toString()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                )"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 65
    }
  },
  {
    "path": "src/Duke/storage/EditFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.main.Status;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class is to edit the Duke.txt"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * in ../data."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * It has two methods: deleteLine,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * and setTaskDone."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class EditFile {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a EditFile object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param path A string which contains"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             the directory of the file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             that is to be edited."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public EditFile(String path) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to delete the task recorded"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * in Duke.txt with the corresponding line number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param lineNum The index of task that the user want to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                delete."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void deleteLine(int lineNum) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            File fileToBeModified \u003d new File(this.path);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String text \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int currentLineNum \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            while (currentLine !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                if (currentLineNum !\u003d lineNum) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    text +\u003d currentLine + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                currentLineNum++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            fileWriter.write(text);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.readLineException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to set the corresponding"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * task to be marked as done in Duke.txt."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param lineNum The index of task that the user want to"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                delete."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void setTaskDone(int lineNum) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            File fileToBeModified \u003d new File(this.path);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String text \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int currentLineNum \u003d 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            while (currentLine !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                if (currentLineNum !\u003d lineNum) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    text +\u003d currentLine + \"\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    String editedLine \u003d"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            currentLine.substring(0, 4)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                                    + Status.FINISHED.toString()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                                    + currentLine.substring(5);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    text +\u003d editedLine + \"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                currentLineNum++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            fileWriter.write(text);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.readLineException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 97
    }
  },
  {
    "path": "src/Duke/storage/ReadFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.main.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.main.Formating;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class is to read the Duke.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * at ./data."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class ReadFile {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a ReadFile object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param path A string which contains"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             the directory of the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             that is to be read."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public ReadFile(String path) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to convert the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * tasks in Duke.txt into Parser.taskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void readFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            FileReader fileReader \u003d new FileReader(path);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            BufferedReader textReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String currentLine \u003d textReader.readLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            while (currentLine !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Formating\u003cString\u003e stringFormating \u003d new Formating\u003c\u003e(currentLine);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Parser.taskList.addMemory(stringFormating.stringToTask());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                currentLine \u003d textReader.readLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            textReader.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.fileException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void matchContent(String content) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            FileReader fileReader \u003d new FileReader(path);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            BufferedReader textReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String currentLine \u003d textReader.readLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            while (currentLine !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                if (currentLine.contains(content)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    Formating\u003cString\u003e stringFormating \u003d new Formating\u003c\u003e(currentLine);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    Parser.taskList.addMemory(stringFormating.stringToTask());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                currentLine \u003d textReader.readLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            textReader.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.FileException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 74
    }
  },
  {
    "path": "src/Duke/storage/WriteIn.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class is to write the information"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * into Duke.txt at ./data."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class WriteIn {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private boolean append_to_file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a WriteIn object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param path A string which contains"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             the directory of the file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             that is to be read."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param append_to_file A boolean of if the user want to make"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                       the WriteIn work immediately."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public WriteIn(String path, boolean append_to_file) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.append_to_file \u003d append_to_file;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void writeToFile(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to write the input into"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Duke.txt."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param input The input from the users."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void writeToFile (String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            FileWriter writeIn \u003d new FileWriter(path, append_to_file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            PrintWriter printWrite \u003d new PrintWriter(writeIn);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            printWrite.println(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            printWrite.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            DukeException.fileException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 53
    }
  },
  {
    "path": "src/Duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This is a subclass of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a Deadline object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description A string describing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param by A string recording the time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *           of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.time \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return \"[D]\" + super.toString() +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 27
    }
  },
  {
    "path": "src/Duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This is a subclass of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a Event object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description A string describing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param on A string recording the time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *           of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Event(String description, String on) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.time \u003d on;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return \"[E]\" + super.toString() +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \" (on: \" + time + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 29
    }
  },
  {
    "path": "src/Duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class simulates the tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * that the users give to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description A string describing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Return tick when the task is done,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * cross when the task is not done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return A string showing a tick or"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         cross as described above."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                ? \"[\" + \"\\u2713\" + \"]\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                : \"[\" + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method is to set the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return getStatusIcon() + \" \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 47
    }
  },
  {
    "path": "src/Duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class is to contain tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * @param \u003cT\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class TaskList\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private ArrayList\u003cT\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is to add new tasks into"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * the TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param event new task to be added."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void addMemory(T event) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.taskList.add(event);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is to get all Tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public ArrayList\u003cT\u003e getTaskList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String results \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d this.taskList.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (size !\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            for (int i \u003d 1; i \u003c size; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                results +\u003d \"    \" + i + \". \" + taskList.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            results +\u003d \"    \" + size + \". \" + taskList.get(size - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 48
    }
  },
  {
    "path": "src/Duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This is a subclass of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initialize a Task object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description A string describing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 21
    }
  },
  {
    "path": "src/test/java/FormatingTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.main.Formating;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.main.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * This class is to test the Formating class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Mainly 2 methods are tested: shorten() and stringToTask()."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class FormatingTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is to test the shorten() method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input string has"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * unnecessary spaces at forth and in behind."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatShortenTest1() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String test \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(\"   hahaha  \")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                .shorten()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                .getContent();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String expected \u003d \"hahaha\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(test.equals(expected));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is to test the shorten() method."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input string has"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * an string with only spaces."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatShortenTest2() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String test \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Formating\u003c\u003e(\"       \")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        .shorten()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        .getContent();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String expected \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(test.equals(expected));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is to test the stringToTask() method."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input is of a task of Todo."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatStringToTaskTest1() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String string \u003d \"[T][✘] reading\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Todo(\"reading\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task todo \u003d new Formating\u003c\u003e(string).stringToTask();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(todo.toString().equals(expected.toString()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is to test the stringToTask() method."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input is of a task of Deadline."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatStringToTaskTest2() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String string \u003d \"[D][✘] eating (by: Aug_30_2020)\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Deadline(\"eating\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task todo \u003d new Formating\u003c\u003e(string).stringToTask();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(todo.toString().equals(expected.toString()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is to test the stringToTask() method."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input is of a task of Event."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatStringToTaskTest3() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String string \u003d \"[E][✘] eating (at: Aug_30_2020)\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Event(\"eating\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task todo \u003d new Formating\u003c\u003e(string).stringToTask();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(todo.toString().equals(expected.toString()));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 87
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.main.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.main.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import Duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runTodoTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"todo reading\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.reloadTaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Todo(\"reading\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.taskList.getTaskList().size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task currentTask \u003d Parser.taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (currentTask.toString().equals(expected.toString())) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                System.out.println(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                System.out.println(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isExist \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(String.format(\"delete %d\", index + 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isExist);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runDeadlineTest() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"deadline eating /by 2020-08-30\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Deadline(\"eating\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.taskList.getTaskList().size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task currentTask \u003d Parser.taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (currentTask.toString().equals(expected.toString())) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isExist \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(String.format(\"delete %d\", index + 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isExist);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runEventTest() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"event working /by 2020-08-30\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Event(\"working\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.taskList.getTaskList().size();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task currentTask \u003d Parser.taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (currentTask.toString().equals(expected.toString())) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isExist \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(String.format(\"delete %d\", index + 1));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isExist);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runDeleteTest() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"event working /by 2020-08-30\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"delete 1\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Event(\"working\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isDeleted \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.taskList.getTaskList().size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task currentTask \u003d Parser.taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (currentTask.toString().equals(expected.toString())) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isDeleted \u003d false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isDeleted);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runDoneTest() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"event working /by 2020-08-30\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"done 1\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Event(\"working\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        expected.setDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.taskList.getTaskList().size();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task currentTask \u003d Parser.taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (currentTask.toString().equals(expected.toString())) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                index \u003d i + 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(String.format(\"delete %d\", index));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isDone);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 112
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "deadline oiewhfnadl"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "event ahudlnsad"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "done 1 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "done 12"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "dir /s /B ..\\src\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\Duke.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 6,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.Duke.main.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "java -classpath ../bin Duke.Duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 2,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Duke.task.Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.exception.DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Echo.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.task.Event.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.exception.Exceptions.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Exit.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Formating.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Greet.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.task.TaskList.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Parser.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Response.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Status.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.task.Task.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.task.Todo.java"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 15
    }
  }
]
