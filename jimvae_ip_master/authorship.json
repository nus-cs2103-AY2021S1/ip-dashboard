[
  {
    "path": "src/main/java/Chatbot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class Chatbot {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected String inquiry;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected List\u003cTask\u003e planner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String INDENTATION \u003d \"     \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String ERROR_INVALID_TASK \u003d \"⚠⚠⚠ I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String ERROR_INVALID_INDEX \u003d \"⚠⚠⚠ There appears to be a problem with your task number.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String ERROR_EMPTY_ACTION_TASK \u003d \"⚠⚠⚠ Add the appropriate task number after the command \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            + \"\u0027done/delete\u0027.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String ERROR_EMPTY_TODO_TASK \u003d \"⚠⚠⚠ The description of a \u0027todo\u0027 cannot be empty.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String ERROR_EMPTY_DEADLINE_TASK \u003d \"⚠⚠⚠ The description of a \u0027deadline\u0027 cannot be empty.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String ERROR_EMPTY_EVENT_TASK \u003d \"⚠⚠⚠ The description of a \u0027event\u0027 cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String ERROR_DEADLINE_FORMAT \u003d \"⚠⚠⚠ The description of \u0027deadline\u0027 should be accompanied\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            + \u0027\\n\u0027 + INDENTATION + \"    by \u0027/by\u0027 followed by the date\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected final String ERROR_EVENT_FORMAT \u003d \"⚠⚠⚠ The description of \u0027event\u0027 should be accompanied\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            + \u0027\\n\u0027 + INDENTATION + \"    by \u0027/at\u0027 followed by the date\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public Chatbot() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        this.inquiry \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        this.planner \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public void chat() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            introductions();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            this.inquiry \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            while (!inquiry.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    if (inquiry.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                        list();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    } else if (inquiry.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                        taskHandler(TaskType.TODO, inquiry);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    } else if (inquiry.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                        taskHandler(TaskType.DEADLINE, inquiry);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    } else if (inquiry.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                        taskHandler(TaskType.EVENT, inquiry);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    } else if (inquiry.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                        taskAction(TaskType.DONE, inquiry);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    } else if (inquiry.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                        taskAction(TaskType.DELETE, inquiry);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                        throw new DukeInvalidTaskException(ERROR_INVALID_TASK);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    reply(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                inquiry \u003d sc.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            farewell();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    private void taskHandler(TaskType type, String body) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            Task currentTask;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            if (type.equals(TaskType.TODO)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                if (inquiry.equals(\"todo\")) throw new DukeEmptyToDoException(ERROR_EMPTY_TODO_TASK);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                currentTask \u003d new ToDo(body.substring(5));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            } else if (type.equals(TaskType.DEADLINE)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                if (inquiry.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    throw new DukeEmptyDeadlineException(ERROR_EMPTY_DEADLINE_TASK);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                String[] arrOfString \u003d (body.substring(9)).split(\"/by \", 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                if (arrOfString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    throw new DukeDeadlineFormatException(ERROR_DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                String deadline \u003d arrOfString[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                String description \u003d arrOfString[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                currentTask \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                if (inquiry.equals(\"event\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    throw new DukeEmptyEventException(ERROR_EMPTY_EVENT_TASK);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                String[] arrOfString \u003d (body.substring(6)).split(\"/at \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                if (arrOfString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                    throw new DukeEventFormatException(ERROR_EVENT_FORMAT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                String eventDate \u003d arrOfString[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                String description \u003d arrOfString[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                currentTask \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            addToPlanner(currentTask);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            reply(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            reply(INDENTATION + currentTask.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            reply(\"Now you have \" + planner.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    private void taskAction(TaskType type, String inquiry) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            String[] tokens \u003d inquiry.split(\" \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            int num \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            if (num \u003e planner.size() || num \u003c\u003d 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                throw new DukeInvalidIndexException(ERROR_INVALID_INDEX);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            Task currentTask \u003d planner.get(num - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            if (type.equals(TaskType.DONE)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                currentTask.done();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                reply(\"Good job! I\u0027ve marked this task as done\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                reply(INDENTATION + currentTask.toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                planner.remove(num - 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                reply(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                reply(INDENTATION + currentTask.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                reply(\"Now you have \" + planner.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            throw new DukeInvalidIndexException(ERROR_INVALID_INDEX);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            throw new DukeEmptyActionException(ERROR_EMPTY_ACTION_TASK);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    private void introductions() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        reply(\"Hello, I\u0027m Ravenloss\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        reply(\"What can I do for you?\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    private void farewell() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        reply(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public void reply (String string) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        System.out.println(INDENTATION + string);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    private void addToPlanner(Task task) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        planner.add(task);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    private void list() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        if (planner.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            reply(\"You have no pending tasks\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            reply(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            for (int i \u003d 0; i \u003c planner.size(); i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                String number \u003d (i + 1) + \".\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                Task currentTask \u003d planner.get(i);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jimvae"
        },
        "content": "                reply(number + currentTask.toString());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jimvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 162
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        return \"[D]\" + super.getStatusIcon() + \" \" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        Chatbot chatbot \u003d new Chatbot();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        chatbot.chat();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jimvae"
        },
        "content": "//add Now you have 5 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "jimvae": 14,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeDeadlineFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeDeadlineFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeDeadlineFormatException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyActionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeEmptyActionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeEmptyActionException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeEmptyDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeEmptyDeadlineException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeEmptyEventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeEmptyEventException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeEmptyToDoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeEmptyToDoException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 5
    }
  },
  {
    "path": "src/main/java/DukeEventFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeEventFormatException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeEventFormatException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 12
    }
  },
  {
    "path": "src/main/java/DukeInvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeInvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeInvalidIndexException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 5
    }
  },
  {
    "path": "src/main/java/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DukeInvalidTaskException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        return \"[E]\" + super.getStatusIcon() + \" \" + super.toString() + \"(at: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\"; //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 22
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    DEADLINE, TODO, EVENT, DELETE, DONE"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 3
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jimvae"
        },
        "content": "        return \"[T]\" + super.getStatusIcon() + \" \" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jimvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jimvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jimvae": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jimvae"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jimvae"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jimvae"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jimvae"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jimvae"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jimvae"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jimvae"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jimvae"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jimvae"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jimvae"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jimvae"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jimvae": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jimvae"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jimvae"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jimvae"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jimvae": 3,
      "-": 37
    }
  }
]
