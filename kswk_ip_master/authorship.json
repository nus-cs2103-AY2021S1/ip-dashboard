[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "kswk": 16
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": "![Ui](Ui.png)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "1. `help` command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "2. `todo` command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "3. `deadline` command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "4. `event` command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "5. `delete` command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "6. `find` command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "7. `list` command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "8. `bye` command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "## Feature Breakdown"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "### `Help`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "Brings up the list of commands available"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "and their respective descriptions."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e Example usage:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003ehelp"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "### `Todo`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "Adds a task to be done into the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "Format: **/todo [task]**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e Example usage:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e todo borrow book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "### `Deadline`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "Adds a task with a deadline to be done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "into the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "Format: **/deadline [task] /by [dd/mm/yyyy] [24h-time]**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e Example usage:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e deadline assignment /by 08/09/2020 2359"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "### `Event`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "Adds an event task into the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "Format: **/event [event] /at [dd/mm/yyyy] [24h-time]**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e Example usage:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e event attend wedding /at 01/02/2021 1800"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "### `Delete`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "Deletes a specified task from the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "Format: **/delete [task number]**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e Example usage:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e delete 3"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "### `Find`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "Finds a specific task from the task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "based on a keyword."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "Format: **/find [keyword]**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e Example usage:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e find book"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "### `List`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "Lists out the tasks currently in the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e Example usage:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "### `Bye`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "Saves the current task list to the hard disk"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "and exits the bot."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e Example usage:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003e bye"
      }
    ],
    "authorContributionMap": {
      "-": 8,
      "kswk": 61
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Driver class for chat bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "            storage.loadTasks(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "            storage.loadTasks(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "                String fullCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "                c.execute(storage, tasks, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "            response \u003d c.execute(storage, tasks, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Driver method for chat bot."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param args Starts up the chat bot."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "        new Duke().start();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "kswk": 71
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/batman.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/oldman.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Initialises the the chat bot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        printIntro();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the greeting message to the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private void printIntro() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "        DialogBox intro \u003d DialogBox.getDukeDialog(Ui.GREET_MESSAGE,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "                new Image(this.getClass().getResourceAsStream(\"/images/oldman.png\")));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "        dialogContainer.getChildren().addAll(intro);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 66
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeEmptyArgumentException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeEmptyDescriptionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Parse user inputs and translate them into commands to be executed by the chat bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int SLASH_INDEX \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Parses the user input to determine what command the user intended to run."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param input String representing user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return A Command object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws DukeEmptyArgumentException If argument of done and delete commands are empty."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static Command parse(String input)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert input !\u003d null : \"String object cannot be null\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String command \u003d input.strip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String[] commandWordArray \u003d command.split(SPACE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String firstWord \u003d commandWordArray[0].toLowerCase();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "        boolean isSingleWordCommand \u003d command.substring(firstWord.length())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "                .isBlank();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (commandWordArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "                return new UnknownCommand(firstWord);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new ByeCommand(firstWord);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (commandWordArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "                return new UnknownCommand(firstWord);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new ListCommand(firstWord);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (isSingleWordCommand) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "                throw new DukeEmptyArgumentException(DONE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new DoneCommand(firstWord,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    commandWordArray[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (isSingleWordCommand) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "                throw new DukeEmptyArgumentException(DELETE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new DeleteCommand(firstWord,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    commandWordArray[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (isSingleWordCommand) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "                throw new DukeEmptyDescriptionException(firstWord);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new AddCommand(firstWord,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    command.substring(firstWord.length()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            + SLASH_INDEX));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (isSingleWordCommand) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kswk"
        },
        "content": "                throw new DukeEmptyArgumentException(FIND);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new FindCommand(firstWord,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    commandWordArray[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kswk"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (commandWordArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kswk"
        },
        "content": "                return new UnknownCommand(command);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new HelpCommand(firstWord);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kswk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new UnknownCommand(command);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 96
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Loads the tasks.csv file and saves the tasks.csv file upon booting up"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": " * of bot and shutting down of the bot respectively."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Searches for tasks.csv file and loads it into the TaskList of bot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * If tasks.csv file does not exist, do nothing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object to be updated by existing tasks.csv file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws IOException If loading of file fails."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void loadTasks(TaskList tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Path filePath \u003d Paths.get(currDir,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \"data\", \"tasks.csv\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "        File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        BufferedReader br \u003d Files.newBufferedReader(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        br.readLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String line \u003d br.readLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String[] taskEntry \u003d line.split(\",\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String type \u003d taskEntry[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String done \u003d taskEntry[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String description \u003d taskEntry[2];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "                Task task \u003d new Todo(description,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        done.equals(\"1\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "                String date \u003d taskEntry[3];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "                Task task \u003d new Deadline(description,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        done.equals(\"1\"), date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "                String date \u003d taskEntry[3];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "                Task task \u003d new Event(description,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        done.equals(\"1\"), date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "            line \u003d br.readLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Saves tasks in TaskList object of the bot into existing tasks.csv file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * If tasks.csv does not exist, create one and save the tasks in it."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object of the chat bot with tasks to be saved onto"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *              tasks.csv file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws IOException If saving of file fails."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void saveTasks(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Path folderPath \u003d Paths.get(currDir, \"data\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (!Files.exists(folderPath)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kswk"
        },
        "content": "            Files.createDirectories(folderPath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Path filePath \u003d Paths.get(currDir,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \"data\", \"tasks.csv\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kswk"
        },
        "content": "        File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kswk"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kswk"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kswk"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kswk"
        },
        "content": "        bw.write(\"Task,Done?,Description,Date\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kswk"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kswk"
        },
        "content": "            bw.write(tasks.getTask(i).write());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kswk"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 98
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": " * A list in charge of storing tasks created by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int TASK_LIMIT \u003d 100;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final List\u003cTask\u003e taskList \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "            new ArrayList\u003c\u003e(TASK_LIMIT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Adds task into TaskList object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param task A Task object created by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert task !\u003d null : \"Task object cannot be null\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Deletes task from TaskList object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param index Integer index of task that user wants to remove."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets size of TaskList object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return Integer representing size of TaskList object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets Task object from TaskList object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param index Integer index of Task that user wants to get from TaskList object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 51
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": " * In charge of interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String BYE_DESCRIPTION \u003d \"\u0027bye\u0027 - Save task list \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"to local hard disk and exit bot\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String DEADLINE_DESCRIPTION \u003d \"\u0027deadline [task] /by \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"[date and time]\u0027 - Adds a task that is to be done by\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \" a certain deadline into the task list.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String DONE_DESCRIPTION \u003d \"\u0027done [number]\u0027\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \" - Marks the task corresponding with the task index\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \" in the task list as done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String DELETE_DESCRIPTION \u003d \"\u0027delete [number]\u0027\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"- Deletes the task corresponding with the task index\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \" in the task list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String EVENT_DESCRIPTION \u003d \"\u0027event [task] /at \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"[date and time]\u0027 - Adds an event that is to be attended into \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"the task list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String FIND_DESCRIPTION \u003d \"\u0027find [keyword]\u0027 - Find \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"all tasks matching the keyword from the task list and display them\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String GREET_MESSAGE \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + \"Hi, my name is Duke.\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    + \"\\nWhat can I do for you?\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    + \"\\nFor more information on the commands you can use, \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    + \"type \u0027help\u0027.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String TODO_DESCRIPTION \u003d \"\u0027todo [task]\u0027 - \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"Adds a task that is to be done into the task list.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static final String LIST_DESCRIPTION \u003d \"\u0027list\u0027 - Brings up \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"the task list, displaying all the current tasks \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "            + \"you have added thus far.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String BORDER \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the farewell message to the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String farewell message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printFarewell() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"Thanks for using this bot, \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"see you soon!\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + BORDER;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the tasks in the list to the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"Here are the tasks\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \" in your list:\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the message telling user that task is empty."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String message telling user that task is empty."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printNoTasks() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"Oops! Your list is empty!\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the saving tasks to hard disk message to user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String saving tasks message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printSave() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"List saved to hard disk \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"at data/tasks.csv\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the task added message to the user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param task Task object user added."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param taskNumber Integer number representing number"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *                   of tasks in list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String task added message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printAdded(Task task, int taskNumber) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"\u003e\" + \"added: \" + task + \"\u003c\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"You now have \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + taskNumber"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \" task(s) in your list.\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints message informing user that task has been deleted."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param task Task object that user deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param taskNumber Integer number representing number of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *                   tasks in list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String task deleted message."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printDeleted(Task task, int taskNumber) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"I have deleted this task: \\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"You now have \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + taskNumber"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \" task(s) in your list.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the task that user has marked as done."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object of the chat bot."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param taskNumber Integer number representing the index of the task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *                   that was marked as done."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String done message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printDone(TaskList tasks, int taskNumber) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"I have marked this task as done: \\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the task that matches what user intends to find."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String task find message."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printFind() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out to the user that no tasks corresponding"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * to the keyword was found."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param match String input of user."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String message informing user of no matches."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printNoMatch(String match) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"Sorry! No matches found for \" + match + \".\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the list of commands to use in the chat bot."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String list of all the commands and their descriptions."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String printHelp() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"Here are the list of commands you can use:\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\" + BYE_DESCRIPTION"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\" + DEADLINE_DESCRIPTION"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\" + DONE_DESCRIPTION"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\" + DELETE_DESCRIPTION"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\" + EVENT_DESCRIPTION"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\" + FIND_DESCRIPTION"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\" + TODO_DESCRIPTION"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\" + LIST_DESCRIPTION;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 148
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidDateException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a command to add a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String description of the task to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public AddCommand(String command, String extra) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, extra);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeInvalidDateException,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert ui !\u003d null : \"Ui object cannot be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Task taskToBeAdded \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "            taskToBeAdded \u003d new Todo(extra);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "                taskToBeAdded \u003d new Deadline("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        extra.substring(0, extra.indexOf(\"/\") - 1),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        extra.substring(extra.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "                taskToBeAdded \u003d new Event("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        extra.substring(0, extra.indexOf(\"/\") - 1),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        extra.substring(extra.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidDateException(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidArgumentException(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "        tasks.addTask(taskToBeAdded);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return ui.printAdded(taskToBeAdded, tasks.getSize());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof AddCommand;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 64
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a command to shut down chat bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public ByeCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert ui !\u003d null : \"Ui object cannot be null\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return ui.printSave() + \"\\n\" + ui.printFarewell();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof ByeCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 36
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeEmptyArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeEmptyDescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidDateException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidTaskException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected static final int PARSE_INDEX \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected static final int TASK_INDEX \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String extra;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor without additional arguments."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        extra \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with additional String argument."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String parsed by Parser object representing"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *              extra argument for command string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Command(String command, String extra) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.extra \u003d extra;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with addition boolean argument."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isExit Boolean to decide whether to shut down chat bot."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Command(String command, boolean isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets the boolean object to decide if bot should be shut down."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return Boolean object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Executes the command input by user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param storage Storage object in chat bot."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object in chat bot."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param ui Ui object in chat bot."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String of the Ui text printed by chat bot."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws IOException If error in loading file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws DukeEmptyArgumentException If argument of command is empty."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws DukeInvalidCommandException If command is unrecognised by chat bot."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws DukeInvalidDateException If date input format is invalid."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws DukeInvalidArgumentException If argument for command is unrecognised"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * by chat bot."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws DukeInvalidTaskException If task is not found in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws DukeEmptyDescriptionException If description of command is empty."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public abstract String execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws IOException, DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidCommandException, DukeInvalidDateException,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidArgumentException, DukeInvalidTaskException, DukeEmptyDescriptionException;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 86
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Representing a command to delete task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String parsed by Parser object representing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *              argument for delete command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DeleteCommand(String command, String extra) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, extra);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeInvalidArgumentException,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidTaskException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert ui !\u003d null : \"Ui object cannot be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "            int taskNum \u003d Integer.parseInt(extra)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    - PARSE_INDEX;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String reply \u003d ui.printDeleted(tasks.getTask(taskNum),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    tasks.getSize() - TASK_INDEX);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "            tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidArgumentException(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof DeleteCommand;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 49
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents command to mark task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String parsed by Parser object representing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *              argument for done command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DoneCommand(String command, String extra) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, extra);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeInvalidArgumentException,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidTaskException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert ui !\u003d null : \"Ui object cannot be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "            int taskNum \u003d Integer.parseInt(extra)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    - PARSE_INDEX;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "            tasks.getTask(taskNum).markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return ui.printDone(tasks, taskNum);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidArgumentException(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof DoneCommand;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 47
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a command to find mathcing keywords in list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String keyword of task to be searched."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public FindCommand(String command, String extra) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, extra);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert ui !\u003d null : \"Ui object cannot be null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String reply \u003d ui.printFind() + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (tasks.getTask(i).getDescription().contains(extra)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "                if (i !\u003d tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    reply +\u003d i + 1 + \".\" + tasks.getTask(i) + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    reply +\u003d i + 1 + \".\" + tasks.getTask(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return ui.printNoMatch(extra);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof FindCommand;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 48
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public HelpCommand(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert ui !\u003d null : \"Ui object cannot be null\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return ui.printHelp();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof HelpCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents command to show list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert ui !\u003d null : \"Ui object cannot be null\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String reply \u003d ui.printList() + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (i !\u003d tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "                reply +\u003d i + TASK_INDEX + \".\" + tasks.getTask(i) + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "                reply +\u003d i + TASK_INDEX + \".\" + tasks.getTask(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return ui.printNoTasks();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof ListCommand;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 45
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents command that is not recognised by chat bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public UnknownCommand(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert storage !\u003d null : \"Storage object cannot be null\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert tasks !\u003d null : \"TaskList object cannot be null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assert ui !\u003d null : \"Ui object cannot be null\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        throw new DukeInvalidCommandException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof UnknownCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 34
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeEmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception signifying empty argument for command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeEmptyArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String of command executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeEmptyArgumentException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Argument for \" + command + \" cannot be empty!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeEmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception signifying empty description for command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeEmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String of command executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeEmptyDescriptionException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Description for \" + command + \" cannot be empty!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents an exception thrown by chat bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param msg String of error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception signifying an invalid argument for command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeInvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String of command to be executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeInvalidArgumentException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Please enter a valid argument for \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + command + \"!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception signifying an invalid command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeInvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeInvalidCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Invalid command!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception to signify an invalid task date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeInvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String of the command executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeInvalidDateException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Please enter a valid date for \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + command + \"!\\nDate and time format\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \" should be \u0027dd/mm/yyyy 24h-time\u0027\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n(eg. 01/01/2020 1900)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception to signify an invalid task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeInvalidTaskException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"That task does not exist in the list!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String originalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with no extra arguments."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String description of deadline task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param dateTime String date of deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Deadline(String description, String dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTime,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        originalDate \u003d dateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with extra boolean argument."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String description of deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isDone Boolean representing whether task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param dateTime String date of deadline task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Deadline(String description, boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTime,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        originalDate \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"\\ndeadline,\" + super.write() + \",\" + originalDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private String originalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor without extra arguments."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String description of event task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param dateTime String argument for date of event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTime,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        originalDate \u003d dateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with extra boolean argument."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String description of event task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isDone Boolean representing whether task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param dateTime String argument for date of event task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Event(String description, boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTime,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        originalDate \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[E]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\"))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"\\nevent,\" + super.write() + \",\" + originalDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor without extra arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String representing description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with extra boolean argument."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String representing description of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isDone Boolean representing whether task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets the status of task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String representing tick or cross."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Translates the task to an excel format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String of entry to be written to a file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return 1 + \",\" + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return 0 + \",\" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets description of task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String description of Task object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a Todo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with no extra arguments."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String representing description of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with extra boolean argument"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String representing description of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isDone Boolean representing whether task is done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"\\ntodo,\" + super.write();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 34
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kswk": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "        \u003cGridPane AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "                  AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \u003cRowConstraints vgrow\u003d\"SOMETIMES\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" minHeight\u003d\"41.0\" minWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "                           AnchorPane.bottomAnchor\u003d\"1.0\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "                           GridPane.valignment\u003d\"CENTER\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" minHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        minWidth\u003d\"76.0\" text\u003d\"Send\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        GridPane.valignment\u003d\"CENTER\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" fitToWidth\u003d\"true\" vvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            maxHeight\u003d\"Infinity\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"2\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kswk": 40
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeEmptyArgumentException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeEmptyDescriptionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void byeTest() throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new ByeCommand(\"bye\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void listTest() throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new ListCommand(\"list\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void doneTest() throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"done 1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new DoneCommand(\"done\", \"1\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void deleteTest() throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new DeleteCommand(\"delete\", \"1\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void addTest() throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"todo borrow book\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new AddCommand(\"todo\", \"borrow book\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void unknownTest() throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"unknown\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new UnknownCommand(\"unknown\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void findTest() throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"find book\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new FindCommand(\"find\", \"book\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void helpTest() throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"help\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new HelpCommand(\"help\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 76
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": "deadline return book /by 24/08/2020 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "event project meeting /at 26/08/2020 1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "done abc"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "find book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "events"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "/c"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kswk": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "kswk": 4
    }
  }
]
