[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    blank,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    clear,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    list,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    done,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    delete,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    add,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    find,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    error"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 10
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Deadline(String in, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        super(in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String donez;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            donez \u003d \"✓\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            donez \u003d \"✗\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"[D] [\" + donez + \"] \" + task + \" (by: \" + dateToString(deadline) + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"D | \" + super.saveText() + \" | \" + dateToSave(deadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new instance of Duke which stores information at the given path."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param filePath the path where task information is stored."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        tasks \u003d new TaskList(storage.read());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Contains most of the chat bot logic"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Ui.print(\"hi! im conundrum boy :)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String in \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        while (!in.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            in \u003d input.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (in.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Ui.print(\"bye bye!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            Command cmd \u003d Parser.parse(in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (cmd \u003d\u003d Command.blank) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (cmd \u003d\u003d Command.clear) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                storage.clear();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (cmd \u003d\u003d Command.list) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Ui.print(tasks.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (cmd \u003d\u003d Command.find) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                String keyword \u003d in.substring(5);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                if (keyword.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.errorMsg(\"you haven\u0027t entered a search keyword!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.print(\"here\u0027s the list of tasks that contain the keyword!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.print(tasks.findTasks(keyword).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (cmd \u003d\u003d Command.done) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                int current;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    current \u003d Integer.parseInt(in.substring(5));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                } catch (Exception e){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.errorMsg(\"you haven\u0027t entered a task number to complete!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                current--;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                if (current \u003c 0 || current \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.errorMsg(\"that is not the number of a task in the list!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    task \u003d tasks.get(current);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    if (task.done) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                        Ui.errorMsg(\"you have already completed \" + task.task + \"!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    task.complete();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.print(\"congrats on finishing your task :) it\u0027s marked as done:\\n\\t\" + task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (cmd \u003d\u003d Command.delete){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                int current;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    current \u003d Integer.parseInt(in.substring(7));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                } catch (Exception e){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.errorMsg(\"you haven\u0027t entered a task number to delete!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                current--;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                if (current \u003c 0 || current \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.errorMsg(\"that is not the number of a task in the list!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    task \u003d tasks.get(current);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    tasks.delete(current);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.print(\"i\u0027ve removed the following task from the list:\\n\\t\" + task + \"\\nnow you have \" + tasks.size() + \" items in your tasklist.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (cmd \u003d\u003d Command.add){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Task temp \u003d Parser.getTask(in);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                if (temp !\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    tasks.add(temp);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    Ui.print(\"i\u0027ve added this task for you: \\n\\t\" + temp + \"\\nnow you have \" + tasks.size() + \" items in your tasklist.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Ui.errorMsg(\"i don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 101,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private LocalDateTime startDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Event(String in, LocalDateTime start) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        super(in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.startDate \u003d start;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String donez;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            donez \u003d \"✓\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            donez \u003d \"✗\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"[E] [\" + donez + \"] \" + task + \" (at: \" + dateToString(startDate) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"E | \" + super.saveText() + \" | \" + dateToSave(startDate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 23
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the string to a type of command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in The string to be parsed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The command called by the input string."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static Command parse(String in) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (\"\".equals(in)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.blank;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (\"clear\".equals(in)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.clear;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (\"list\".equals(in)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"done \")){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.done;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"delete \")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.delete;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"find \")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.find;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"todo \") || in.startsWith(\"deadline \") || in.startsWith(\"event \")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.add;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.error;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Handles reading add task commands and creating the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in The string to be parsed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The task required by the input string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static Task getTask(String in) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Task temp \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (in.startsWith(\"todo \")){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            taskName \u003d in.substring(5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (taskName.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Ui.errorMsg(\"the task description cannot be nothing D:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                temp \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"deadline \")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            int ind \u003d in.indexOf(\"/by \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (ind \u003c 0 || ind \u003d\u003d in.length() - 4) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Ui.errorMsg(\"you haven\u0027t entered a time that this task is due by. you can do that by typing \\\"deadline xxx /by dd/mm/yy hhmm\\\". \\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                        \"e.g.: deadline read textbook /by 12/3/20 1500\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (ind - 1 \u003c\u003d 9) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Ui.errorMsg(\"the task description cannot be nothing D:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                taskName \u003d in.substring(9,ind - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                LocalDateTime dead \u003d LocalDateTime.parse(in.substring(ind + 4), DateTimeFormatter.ofPattern(\"d/M/yy HHmm\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                temp \u003d new Deadline(taskName,dead);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"event \")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            int ind \u003d in.indexOf(\"/at \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (ind \u003c 0 || ind \u003d\u003d in.length() - 4) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Ui.errorMsg(\"you haven\u0027t entered a time that this task happens at. you can do that by typing \\\"event xxx /at dd/mm/yy hhmm\\\". \\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                        \"e.g.: event read textbook /at 12/3/20 1500\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (ind - 1 \u003c\u003d 6) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                Ui.errorMsg(\"the task description cannot be nothing D:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                taskName \u003d in.substring(6,ind - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                LocalDateTime time \u003d LocalDateTime.parse(in.substring(ind + 4), DateTimeFormatter.ofPattern(\"d/M/yy HHmm\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                temp \u003d new Event(taskName,time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ramenmen": 73
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Handles storing and retrieving of task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts all tasks in the list to a string and writes that to the save file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void save(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            toWrite +\u003d t.saveText();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            toWrite +\u003d \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            File tasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tasks.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myWriter.write(toWrite);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            System.out.println(\"An error occurred while saving the task list! D:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the text in the save file back to Tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return List of Tasks that is converted from text."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public List\u003cTask\u003e read() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        List\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        File myObj \u003d new File(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Scanner myReader;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (!myObj.exists()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    myObj.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                } catch (IOException f) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    System.out.println(\"An error occurred while creating the task list file! D:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    f.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myReader \u003d new Scanner(myObj);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result.add(Task.readText(data));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            System.out.println(\"An error occurred while trying to read the tasklist save file!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Clears the save file of all text."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        save(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 77
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Task (String in) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        task \u003d in;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return done + \" | \" + task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts a line of text in save file to a Task object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in The string to be converted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return Task represented by the input string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static Task readText(String in) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String[] result \u003d in.split(\" \\\\| \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String taskType \u003d result[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        boolean temp \u003d Boolean.parseBoolean(result[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Task tempTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempTask \u003d new ToDo(result[2]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempTask \u003d new Deadline(result[2],LocalDateTime.parse(result[3],DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempTask \u003d new Event(result[2],LocalDateTime.parse(result[3],DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (temp) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempTask.complete();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return tempTask;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the date and time to the list display format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param date Date to be converted"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static String dateToString (LocalDateTime date) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h.mma\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the date and time to the save file format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param date Date to be converted"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return String to be written to the save file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static String dateToSave (LocalDateTime date) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Stores the list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new TaskList with the given pre-existing tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param read The list of tasks read from the save file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public TaskList(List\u003cTask\u003e read) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.taskList \u003d read;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return taskList.isEmpty();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        taskList.add(toAdd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void delete(int toDelete) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        taskList.remove(toDelete);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts tasks in taskList to String format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return String representation of the tasks in list, or a message if it is empty."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d new StringBuilder(\"this list doesn\u0027t contain any tasks!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result.append(\"1. \").append(taskList.get(0));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            for (int i \u003d 2; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result.append(\" ✰\\n✰ \").append(i).append(\". \").append(taskList.get(i - 1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        List\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (t.task.contains(keyword)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                temp.add(t);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return new TaskList(temp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 69
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public ToDo(String in) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        super(in);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String donez;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            donez \u003d \"✓\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            donez \u003d \"✗\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"[T] [\" + donez + \"] \" + task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"T | \" + super.saveText();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Handles printing of messages."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Prints an error message with the associated formatting."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param msg The message to be printed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static void errorMsg(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        System.out.println(\"⚠ \" + msg + \" ⚠\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Prints a message with the associated formatting."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param msg The message to be printed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static void print(String msg) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        System.out.println(\"✰ \" + msg + \" ✰\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void parserTestReturnError(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(Parser.parse(\"dfgjdhg\"), Command.error);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(Parser.parse(\"todo\"), Command.error);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(Parser.parse(\"event\"), Command.error);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void taskTestDateToString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        LocalDateTime temp \u003d LocalDateTime.parse(\"3/3/03 0300\", DateTimeFormatter.ofPattern(\"d/M/yy HHmm\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(Task.dateToString(temp), \"03 Mar 2003 3.00AM\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void taskListTestToStringEmpty() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        TaskList temp \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(temp.toString(),\"you haven\u0027t added any tasks to the list yet!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 30
    }
  },
  {
    "path": "text-ui-test/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "T | true | read the bible"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "E | false | 2101 tutorial | 27 Aug 2020 1600"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "todo read the bible"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "todo "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "deadline 2103T homework /by 25/8/20 2359"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "event 2101 tutorial /at 27/8/20 1600"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "fgjdfgkjd"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "event "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "event /at "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "deadline /by "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "event /at sljfhfg"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "deadline /by sdigdfg"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "delete "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "add"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "find"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "find "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "find ke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "find bible"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 32
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 1,
      "-": 37
    }
  }
]
