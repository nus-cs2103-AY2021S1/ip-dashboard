[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    mainClassName \u003d \"dukechatbot.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "task uiTest(type:Exec) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    workingDir \u0027./text-ui-test\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    commandLine \u0027./runtest.sh\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "task allTests {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    dependsOn(uiTest, "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            tasks.findByName(\u0027test\u0027),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            tasks.findByName(\u0027checkstyleMain\u0027),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            tasks.findByName(\u0027checkstyleTest\u0027))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    uiTest.mustRunAfter(tasks.findByName(\u0027test\u0027))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    tasks.findByName(\u0027checkstyleMain\u0027).mustRunAfter(uiTest)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    tasks.findByName(\u0027checkstyleTest\u0027).mustRunAfter(tasks.findByName(\u0027checkstyleMain\u0027))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/dukechatbot/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.enums.TaskEnum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.executor.AddCommandExecutor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.parser.CommandParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents the command for add."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Stores the tasktype of the task to be added."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Stores the argument that contains the task to be added."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final TaskEnum taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public AddCommand(String input, TaskEnum taskType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(input, new AddCommandExecutor());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.argument \u003d CommandParser.getTitle(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the TaskEnum taskType attribute of this object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return taskType attribute."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public TaskEnum getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the String argument attribute of this object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return argument attribute."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getArgument() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return argument;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 40
    }
  },
  {
    "path": "src/main/java/dukechatbot/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.executor.CommandExecutor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents the command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Stores the input of the command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Stores the executor related to the command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public Command(String input, CommandExecutor commandExecutor) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the CommandExecutor object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * related to this Command object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return CommandExecutor object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public CommandExecutor getCommandExecutor() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return commandExecutor;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 30
    }
  },
  {
    "path": "src/main/java/dukechatbot/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.executor.DeleteCommandExecutor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.parser.CommandParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents the command for delete."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Stores the argument that contains the task item number to be deleted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(input, new DeleteCommandExecutor());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.argument \u003d CommandParser.getTitle(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the String argument attribute of this object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return argument attribute."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getArgument() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return argument;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 27
    }
  },
  {
    "path": "src/main/java/dukechatbot/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.executor.DoneCommandExecutor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.parser.CommandParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents the command for done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Stores the argument that contains the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * task item number to mark done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(input, new DoneCommandExecutor());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.argument \u003d CommandParser.getTitle(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the String argument attribute of this object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return argument attribute."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getArgument() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return argument;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 28
    }
  },
  {
    "path": "src/main/java/dukechatbot/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.executor.FindCommandExecutor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.parser.CommandParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents the command for find. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Stores the argument that contains the "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * search keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(input, new FindCommandExecutor());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.argument \u003d CommandParser.getTitle(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the String argument attribute of this object. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return argument attribute."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getArgument() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return argument;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 28
    }
  },
  {
    "path": "src/main/java/dukechatbot/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.executor.ListCommandExecutor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents the command for done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Stores the argument that contains the"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * task item number to mark done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public ListCommand(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(input, new ListCommandExecutor());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 15
    }
  },
  {
    "path": "src/main/java/dukechatbot/constant/DukeConstants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents the constants of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class DukeConstants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String LINE \u003d INDENT + \"------------------------------\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String INITIAL_RESPONSE \u003d \"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String EXIT_INPUT \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String EXIT_RESPONSE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String DONE_OUTPUT \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String DELETE_OUTPUT \u003d \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String LIST_OUTPUT \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String FIND_OUTPUT \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static final String ADD_TASK_OUTPUT \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 33
    }
  },
  {
    "path": "src/main/java/dukechatbot/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Runs the main program of Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 13,
      "-": 4
    }
  },
  {
    "path": "src/main/java/dukechatbot/dukeoutput/DukeOutput.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.dukeoutput;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents the class to output the response of Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class DukeOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Prints the initial greeting message from Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static void outputGreeting() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        System.out.println(\"Hello from\\n\" + DukeConstants.LOGO);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Formats and prints the response from Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param response from Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static void output(String response) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        String formattedResponse \u003d DukeOutputFormatter.format("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                Collections.singletonList(response));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        System.out.println(formattedResponse);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Formats and prints the responses from Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param response list of responses by Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static void output(List\u003cString\u003e response) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        String formattedResponse \u003d DukeOutputFormatter.format(response);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        System.out.println(formattedResponse);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Formats and prints the responses from Duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param responses list of responses by Duke."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param indentIndexes to indicate which response is formatted more."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static void output(List\u003cString\u003e responses, List\u003cInteger\u003e indentIndexes) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        String formattedResponse \u003d DukeOutputFormatter.format("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                responses, indentIndexes);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        System.out.println(formattedResponse);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 52
    }
  },
  {
    "path": "src/main/java/dukechatbot/dukeoutput/DukeOutputFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.dukeoutput;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents class to format"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * the response to be outputted to Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "class DukeOutputFormatter {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Formats and prints the responses from Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param list of responses by Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    static String format(List\u003cString\u003e responses) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        sb.append(DukeConstants.LINE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        responses.forEach(x -\u003e sb.append("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                String.format(\"%s%s\\n\", DukeConstants.INDENT, x)));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        sb.append(DukeConstants.LINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Formats and prints the responses from Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param list of responses by Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param indentIndexes to indicate which response is formatted more."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    static String format(List\u003cString\u003e responses, List\u003cInteger\u003e indentIndexes) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        sb.append(DukeConstants.LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        int k \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        for (int i \u003d 0; i \u003c responses.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            String response \u003d responses.get(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            if (k \u003c indentIndexes.size() \u0026\u0026 i \u003d\u003d indentIndexes.get(k)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                sb.append(DukeConstants.INDENT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            sb.append(String.format(\"%s%s\\n\", DukeConstants.INDENT, response));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        sb.append(DukeConstants.LINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 48
    }
  },
  {
    "path": "src/main/java/dukechatbot/enums/TaskEnum.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents enum of the possible task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public enum TaskEnum {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    TODO(\"T\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    EVENT(\"E\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    DEADLINE(\"D\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    final String taskLetter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    TaskEnum(String taskLetter) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.taskLetter \u003d taskLetter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns taskLetter String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return taskLetter String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getTaskLetter() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return taskLetter;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 24
    }
  },
  {
    "path": "src/main/java/dukechatbot/executor/AddCommandExecutor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.executor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.dukeoutput.DukeOutput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.parser.TaskParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.tasklist.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents executor of add command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Executes the action of adding the task to the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class AddCommandExecutor extends CommandExecutor {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Creates a Task object from the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Adds task to the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Prints response from Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public void execute(Command command, TaskList taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            task \u003d TaskParser.parseTask(((AddCommand) command).getArgument(), ("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    (AddCommand) command).getTaskType());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (IndexOutOfBoundsException | DateTimeParseException exception) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DukeOutput.output(exception.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        String taskListSizeInfo \u003d String.format(\"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                taskList.getCurrentSize());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        List\u003cString\u003e responses \u003d Arrays.asList(DukeConstants.ADD_TASK_OUTPUT,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                task.toString(), taskListSizeInfo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        DukeOutput.output(responses, Collections.singletonList(1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 48
    }
  },
  {
    "path": "src/main/java/dukechatbot/executor/CommandExecutor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.executor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents executor of add command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Executes the command given to Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public abstract class CommandExecutor {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public abstract void execute(Command command, TaskList taskList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 12
    }
  },
  {
    "path": "src/main/java/dukechatbot/executor/DeleteCommandExecutor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.executor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.dukeoutput.DukeOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents executor of delete command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Executes the action of deleting the task in the task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * given the task item number."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Returns appropriate response message if task item number is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class DeleteCommandExecutor extends CommandExecutor {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Deletes task to the task list if list item number is valid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public void execute(Command command, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            int parameter \u003d Integer.parseInt(((DeleteCommand) command).getArgument());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            String response \u003d taskList.delete(parameter - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            int taskListSize \u003d taskList.getCurrentSize();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            String additionalResponse \u003d String.format(\"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    taskListSize);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            List\u003cString\u003e responses \u003d Arrays.asList(DukeConstants.DELETE_OUTPUT,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    response, additionalResponse);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DukeOutput.output(responses, Collections.singletonList(1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DukeOutput.output(\"\\u2639 OOPS!!! the task number has to be a positive integer.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DukeOutput.output(\"\\u2639 OOPS!!! the task number has to be valid\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 44
    }
  },
  {
    "path": "src/main/java/dukechatbot/executor/DoneCommandExecutor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.executor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.dukeoutput.DukeOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents executor of done command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Executes the action of marking the task in the task list as done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * given the task item number."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Returns appropriate response message if task item number is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class DoneCommandExecutor extends CommandExecutor {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Marks task done given the task item position in the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public void execute(Command command, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            int parameter \u003d Integer.parseInt(((DoneCommand) command).getArgument());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            String response \u003d taskList.markDone(parameter - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            List\u003cString\u003e responses \u003d Arrays.asList(DukeConstants.DONE_OUTPUT, response);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DukeOutput.output(responses, Collections.singletonList(1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DukeOutput.output(\"\\u2639 OOPS!!! the task number has to be a positive integer.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DukeOutput.output(\"\\u2639 OOPS!!! the task number has to be valid\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 40
    }
  },
  {
    "path": "src/main/java/dukechatbot/executor/FindCommandExecutor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.executor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.dukeoutput.DukeOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.tasklist.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents executor of Find command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Executes the action of finding tasks that contain the search keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class FindCommandExecutor extends CommandExecutor {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Gets the list of task in task list that contains the search keyword"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * and converts them to their toString information for the list of response."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public void execute(Command command, TaskList taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        String searchKeyword \u003d ((FindCommand) command).getArgument();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        List\u003cString\u003e responses \u003d new ArrayList\u003c\u003e(Collections.singletonList(DukeConstants.FIND_OUTPUT));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        List\u003cTask\u003e matchedTasks \u003d taskList.findMatches(searchKeyword);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        matchedTasks.stream().map(Task::toString).forEach(responses::add);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        DukeOutput.output(responses);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 36
    }
  },
  {
    "path": "src/main/java/dukechatbot/executor/ListCommandExecutor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.executor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.dukeoutput.DukeOutput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents executor of list command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Executes the action of listing tasks in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class ListCommandExecutor extends CommandExecutor {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Lists all the tasks in the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public void execute(Command command, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        DukeOutput.output(taskList.getListInfo());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 23
    }
  },
  {
    "path": "src/main/java/dukechatbot/parser/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.enums.TaskEnum;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Parses the input to form the appropriate command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * If input is invalid, the command is null."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Parses the input to form the command object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Command object related to the input to Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static Command parse(String input) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        if (isListCommand(input)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } else if (isDoneCommand(input)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } else if (isDeleteCommand(input)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } else if (isTodoCommand(input)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new AddCommand(input, TaskEnum.TODO);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } else if (isDeadlineCommand(input)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new AddCommand(input, TaskEnum.DEADLINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } else if (isEventCommand(input)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new AddCommand(input, TaskEnum.EVENT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } else if (isFindCommand(input)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static boolean isListCommand(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return input.equals(DukeConstants.LIST_COMMAND);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static boolean isDoneCommand(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return input.split(\"\\\\s+\")[0].equals(DukeConstants.DONE_COMMAND);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static boolean isDeleteCommand(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return input.split(\"\\\\s+\")[0].equals(DukeConstants.DELETE_COMMAND);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static boolean isTodoCommand(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return input.split(\"\\\\s+\")[0].equals(DukeConstants.TODO_COMMAND);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static boolean isDeadlineCommand(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return input.split(\"\\\\s+\")[0].equals(DukeConstants.DEADLINE_COMMAND);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static boolean isEventCommand(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return input.split(\"\\\\s+\")[0].equals(DukeConstants.EVENT_COMMAND);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static boolean isFindCommand(String input) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return input.split(\"\\\\s+\")[0].equals(DukeConstants.FIND_COMMAND);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Checks if the input is requesting to exit."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Boolean result if input is requesting to exit."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static boolean isExit(String input) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return input.equals(DukeConstants.EXIT_INPUT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the title of the input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Title of the input"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static String getTitle(String input) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return input.split(\"\\\\s+\", 2)[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            throw new IndexOutOfBoundsException("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    \"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 97
    }
  },
  {
    "path": "src/main/java/dukechatbot/parser/TaskParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.enums.TaskEnum;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.EventTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.ToDoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * outputs the appropriate task given the taskType."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * If the title is invalid, output appropriate message to Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Parses title and taskType to form Task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param title"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static Task parseTask(String title, TaskEnum taskType) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            task \u003d parseTodoTask(title);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            task \u003d parseDeadlineTask(title);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            task \u003d parseEventTask(title);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static Task parseTodoTask(String title) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return new ToDoTask(title);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static Task parseDeadlineTask(String title) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            String[] titleComponents \u003d title.split(\"/by\", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new DeadlineTask(titleComponents[0].trim(), titleComponents[1].trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            throw new IndexOutOfBoundsException("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    \"\\u2639 OOPS!!! The date and time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            throw new IndexOutOfBoundsException("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    \"\\u2639 OOPS!!! Both date and time (24 hour format) must be \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                            + \"in the form \\\"DD/MM/YYYY HH:MM\\\"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static Task parseEventTask(String title) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            String[] titleComponents \u003d title.split(\"/at\", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            String[] dateAndTime \u003d titleComponents[1].trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            String[] times \u003d dateAndTime[1].split(\"-\", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return new EventTask(titleComponents[0].trim(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    dateAndTime[0].trim(), times[0].trim(), times[1].trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            throw new IndexOutOfBoundsException("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    \"\\u2639 OOPS!!! The start and end time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 70
    }
  },
  {
    "path": "src/main/java/dukechatbot/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.DeadlineTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.EventTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.ToDoTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Loads and saves task list from / to file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static final String LIST_FILE_PATH \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Loads the task list from stored tasks in a file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        File file \u003d new File(LIST_FILE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        File parentFile \u003d file.getParentFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        if (!parentFile.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try (Scanner fileScanner \u003d new Scanner(file)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                String line \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                String[] components \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                for (int i \u003d 0; i \u003c components.length; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    components[i] \u003d components[i].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(components[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                switch(components[0]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    task \u003d new ToDoTask(components[2], isDone);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    task \u003d new DeadlineTask(components[2], components[3], isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    String[] dateTimeComp \u003d components[3].trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    String date \u003d dateTimeComp[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    String[] timeComp \u003d dateTimeComp[1].split(\"-\", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    String startTime \u003d timeComp[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    String endTime \u003d timeComp[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                    task \u003d new EventTask(components[2], date, startTime, endTime, isDone);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            System.out.println(\"\\u2639 OOPS! some error saving the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Saves the tasks in the task list to a file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public static void save(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        File file \u003d new File(LIST_FILE_PATH);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        File parentFile \u003d file.getParentFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        if (!parentFile.exists()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            parentFile.mkdir();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(file)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                fileWriter.write(task.getSaveFormat());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                fileWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            System.out.println(\"\\u2639 OOPS! some error saving the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 91
    }
  },
  {
    "path": "src/main/java/dukechatbot/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.enums.TaskEnum;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents Deadline Task and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * parses input datetime info to another format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static final DateTimeFormatter PATTERN_INPUT \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static final DateTimeFormatter PATTERN_OUTPUT \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DateTimeFormatter.ofPattern(\"MMM dd yyyy KK:mm a\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public DeadlineTask(String title, String dateTimeDetails) throws DateTimeParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(String.format(\"%s (by: %s)\", title,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                LocalDateTime.parse(dateTimeDetails, PATTERN_INPUT)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                        .format(PATTERN_OUTPUT)), TaskEnum.DEADLINE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTimeDetails,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                PATTERN_INPUT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public DeadlineTask(String title, String dateTimeDetails, boolean isDone) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(String.format(\"%s (by: %s)\", title,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                LocalDateTime.parse(dateTimeDetails, PATTERN_INPUT)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                        .format(PATTERN_OUTPUT)), isDone, TaskEnum.DEADLINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTimeDetails, PATTERN_INPUT);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the save format of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Save format of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return String.format(\"%s | %s | %s | %s\", TaskEnum.DEADLINE.getTaskLetter(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                super.getIsDone() ? 1 : 0, title, this.getDateTimeDetails());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private String getDateTimeDetails() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return this.dateTime.format(PATTERN_INPUT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 57
    }
  },
  {
    "path": "src/main/java/dukechatbot/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.enums.TaskEnum;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents EventTask object "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * and parses the start and end time to another format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static final DateTimeFormatter PATTERN_DATE_INPUT \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static final DateTimeFormatter PATTERN_TIME_INPUT \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static final DateTimeFormatter PATTERN_DATE_OUTPUT \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private static final DateTimeFormatter PATTERN_TIME_OUTPUT \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DateTimeFormatter.ofPattern(\"KK:mm a\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public EventTask(String title, String date, String startTime, String endTime) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(String.format(\"%s (at: %s %s - %s)\", title,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                LocalDate.parse(date, PATTERN_DATE_INPUT)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                        .format(PATTERN_DATE_OUTPUT),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                LocalTime.parse(startTime, PATTERN_TIME_INPUT)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                        .format(PATTERN_TIME_OUTPUT),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                LocalTime.parse(endTime, PATTERN_TIME_INPUT)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                        .format(PATTERN_TIME_OUTPUT)), TaskEnum.EVENT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.date \u003d LocalDate.parse(date, PATTERN_DATE_INPUT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.startTime \u003d LocalTime.parse(startTime, PATTERN_TIME_INPUT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.endTime \u003d LocalTime.parse(endTime, PATTERN_TIME_INPUT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public EventTask(String title, String date, String startTime, String endTime, boolean isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(String.format(\"%s (at: %s %s - %s)\", title,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                LocalDate.parse(date, PATTERN_DATE_INPUT)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                        .format(PATTERN_DATE_OUTPUT),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                LocalTime.parse(startTime, PATTERN_TIME_INPUT)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                        .format(PATTERN_TIME_OUTPUT),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                LocalTime.parse(endTime, PATTERN_TIME_INPUT)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                        .format(PATTERN_TIME_OUTPUT)), isDone, TaskEnum.EVENT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.date \u003d LocalDate.parse(date, PATTERN_DATE_INPUT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.startTime \u003d LocalTime.parse(startTime, PATTERN_TIME_INPUT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.endTime \u003d LocalTime.parse(endTime, PATTERN_TIME_INPUT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the save format of the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Save format of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return String.format(\"%s | %s | %s | %s\", TaskEnum.EVENT.getTaskLetter(),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                super.getIsDone() ? 1 : 0, title, this.getDateTimeDetails());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private String getDateTimeDetails() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return String.format(\"%s %s-%s\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                this.date.format(PATTERN_DATE_INPUT),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                this.startTime.format(PATTERN_TIME_INPUT),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                this.endTime.format(PATTERN_TIME_INPUT));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 80
    }
  },
  {
    "path": "src/main/java/dukechatbot/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.enums.TaskEnum;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private TaskEnum type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public Task(String title, TaskEnum type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public Task(String title, boolean isDone, TaskEnum type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Marks the task done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the unicode corresponding to isDone value."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return unicode corresponding to isDone value."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the save format of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Save format of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return String.format(\"%s | %s | %s\", this.type.getTaskLetter(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                this.isDone ? 1 : 0, this.title);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the String information of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return String information of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return String.format(\"[%s][%s] %s\", this.type.getTaskLetter(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                this.getStatusIcon(), this.title);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the isDone attribute."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return the isDone attribute."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Checks if the title attribute contains any word that matches the given substring."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * The check is case-insensitive."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param substring"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Boolean on whether attribute contains the substring as a word."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public boolean contains(String substring) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return Arrays.stream(this.title.split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                .anyMatch(x -\u003e x.toLowerCase().equals(substring.toLowerCase()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 84
    }
  },
  {
    "path": "src/main/java/dukechatbot/task/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.enums.TaskEnum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public ToDoTask(String title) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(title, TaskEnum.TODO);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public ToDoTask(String title, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        super(title, isDone, TaskEnum.TODO);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 14
    }
  },
  {
    "path": "src/main/java/dukechatbot/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents a list of task where you can add, delete tasks and list the tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Adds task to task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns task info for each task in task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return List of task info."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public List\u003cString\u003e getListInfo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        List\u003cString\u003e listInfo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        listInfo.add(DukeConstants.LIST_OUTPUT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        int num \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        for (Task output : this.list) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            listInfo.add(String.format(\"%d.%s\", num, output));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return listInfo;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Marks a task done in the task list given its index."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param idx"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Task String information."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String markDone(int idx) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        Task task \u003d this.list.get(idx);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return task list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns the current size of the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Current size of task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public int getCurrentSize() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Deletes a task in the task list given its index."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param idx"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return Deleted task string information."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public String delete(int idx) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        Task task \u003d this.list.remove(idx);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Returns a list of tasks in the task list that contains the search keyword."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @param searchKeyword"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * @return List of tasks in the task list that contains the search keyword."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public List\u003cTask\u003e findMatches(String searchKeyword) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return this.list.stream()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                .filter(x -\u003e x.contains(searchKeyword))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    } "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 97
    }
  },
  {
    "path": "src/main/java/dukechatbot/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.constant.DukeConstants;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.dukeoutput.DukeOutput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.parser.CommandParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * Represents Ui where the input is parsed and "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " * the appropriate command is executed and output is given."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final TaskList taskList \u003d new TaskList(Storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private boolean isOn \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     * Runs the while loop of Duke until exit input given."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        printGreetingMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        while (isOn) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                this.handleInput();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private void handleInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        String input \u003d this.getInput();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        if (CommandParser.isExit(input)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            this.exit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            this.respond(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        DukeOutput.output(DukeConstants.EXIT_RESPONSE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        Storage.save(this.taskList.getList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.isOn \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private void respond(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            Command command \u003d CommandParser.parse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            if (Objects.isNull(command)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                this.handleInvalidInput();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                command.getCommandExecutor().execute(command, taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "            DukeOutput.output(exception.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private void handleInvalidInput() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        DukeOutput.output(\"\\u2639 OOPS!!! I\u0027m sorry,\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                + \" but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private void printGreetingMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        DukeOutput.outputGreeting();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        DukeOutput.output(DukeConstants.INITIAL_RESPONSE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private String getInput() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 78
    }
  },
  {
    "path": "src/test/java/dukechatbot/parser/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class CommandParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    void parse_invalid_command() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        String invalidCommand \u003d \"lol123\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        assertNull(CommandParser.parse(invalidCommand));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 14
    }
  },
  {
    "path": "src/test/java/dukechatbot/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private final Task task \u003d new ToDoTask(\"lol123\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    void getSaveFormat_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        assertEquals(\"T | 0 | lol123\", this.task.getSaveFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 15
    }
  },
  {
    "path": "src/test/java/dukechatbot/tasklist/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "package dukechatbot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "import dukechatbot.task.ToDoTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    void init() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.taskList \u003d new TaskList(Collections.singletonList("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "                new ToDoTask(\"hi\")));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    void markTestDone_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        Task itemOnList \u003d this.taskList.getList().get(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        assertFalse(itemOnList.getIsDone());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        this.taskList.markDone(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "        assertTrue(itemOnList.getIsDone());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "todo lol 123"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "todo lol123"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "deadline s1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "deadline s1 /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "deadline s1 /by 02/01/2020"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "deadline s1 /by 06:00"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "deadline s1 /at 02/01/2020 06:00"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "deadline s1 /by 02/01/2020 06:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "event "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "event s2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "event s2 /by 02/01/2020 06:00-07:00"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "event s2 /at 02/01/2020"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "event s2 /at 06:00-07:00"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "event s2 /at 02/01/2020 06:00-07:00"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "jij"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "todo book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "deadline return book /by 20/06/2020 00:00 "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "event book signing /at 20/07/2020 00:00-02:00"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "find b"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "find book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "bye"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 34
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "if [ -d \"data\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "  rm -r data"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "if [ -d \"../data\" ]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "then"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "  rm -r ../data"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*/*/*.java"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronnSeah"
        },
        "content": "java -classpath ../bin dukechatbot/duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "AaronnSeah": 13,
      "-": 36
    }
  }
]
