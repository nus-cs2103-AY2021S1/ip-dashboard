[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static abstract class Task {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        protected String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        protected String tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        protected boolean isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        protected Task(String description, String tag, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.tag \u003d tag;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return isDone ? \"O\" : \"X\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public void complete() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public static Task parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            String[] input \u003d str.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                boolean isDone \u003d input[1].equals(\"1\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        return new ToDo(input[2], isDone);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        return new Deadline(input[2], input[3], isDone);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        return new Event(input[2], input[3], isDone);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        throw new DukeException(\"One or more Tasks are wrongly tagged!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aiooe) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"One or more Tasks have too few arguments!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public String toSave() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return String.format(\"%s | %s | %s\", this.tag, isDone ? \"1\" : \"0\", this.description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return String.format(\"[%s][%s] %s\", this.tag, this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static class ToDo extends Task {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            super(description, \"T\", isDone);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static class Deadline extends Task {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        LocalDateTime deadline;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public Deadline(String description, String deadline, boolean isDone)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            super(description, \"D\", isDone);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.deadline \u003d LocalDateTime.parse(deadline,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return String.format(\"%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public String toSave() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return String.format(\"%s | %s\", super.toSave(), this.deadline);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static class Event extends Task {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        LocalDateTime time;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public Event(String description, String time, boolean isDone)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            super(description, \"E\", isDone);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.time \u003d LocalDateTime.parse(time,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return String.format(\"%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    this.time.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public String toSave() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return String.format(\"%s | %s\", super.toSave(), this.time);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static class DukeException extends Exception {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        public DukeException(String error) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            super(error);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String logo"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"    b|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String line \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println(line + \"\\n\" + logo + \"\\n    Hello! I\u0027m Duke!\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(\"./src/main/data/duke.txt\"));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            System.out.println(\"    A save file has been found and loaded!\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    + \"    Your current tasks are: \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            br.lines().forEach(str -\u003e {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    list.add(Task.parse(str));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                } catch (DukeException de){"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    System.out.println(\"    Error: \"+ de.getMessage());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            });"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                System.out.println(\"    ... empty! Good work!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                while (list.size() \u003e i) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    System.out.println(\"        \" + ++i + \". \" + list.get(i - 1).toString());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            System.out.println(\"    No save file found in [root]/src/main/data/duke.txt.\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    + \"    A file has been created by default.\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    + \"    If you\u0027d like to import one, simply copy the file\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    + \"    over to the above location and rerun me!\\n\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            new File(\"./src/main/data\").mkdirs();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                new File(\"./src/main/data/duke.txt\").createNewFile();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                System.out.println(\"Sorry, the file couldn\u0027t be created!\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + \"Please try again.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println(\"    Awaiting input...\\n\" + line);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                StringBuilder time \u003d new StringBuilder();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                String[] input \u003d sc.nextLine().split(\" \");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        System.out.println(line + \"\\n    Bye. Hope to see you again soon!\\n\" + line);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"list\": {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        int i \u003d 0;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        System.out.println(line + \"\\n    Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        while (list.size() \u003e i) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            System.out.println(\"        \" + ++i + \". \" + list.get(i - 1).toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"done\": {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        int index \u003d 0;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"Please select a task to mark as completed!\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            index \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"Please choose an integer value!\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"Please choose an integer greater than 0!\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } else if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"Your task list is not that long yet!\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        list.get(index - 1).complete();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        System.out.println(line + \"\\n    Nice! I\u0027ve marked this task as done:\\n        \""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + list.get(index - 1).toString() + \"\\n\" + line);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        String toWrite \u003d list.stream()"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .map(Task::toSave)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .reduce((x, y) -\u003e x + \"\\n\" + y)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .orElse(\"\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            FileWriter fw \u003d new FileWriter(\"./src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            fw.write(toWrite);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            fw.close();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } catch (IOException ignored) { }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"todo\": {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            description.append(input[i]).append(\" \");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        task \u003d new ToDo(description.toString(), false);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        System.out.println(line + \"\\n    Got it. I\u0027ve added this task:\\n        \""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + task.toString()"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + \"\\n    You now have \" + list.size()"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + \" in your list.\\n\" + line);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        String toWrite \u003d list.stream()"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .map(Task::toSave)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .reduce((x, y) -\u003e x + \"\\n\" + y)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .orElse(\"\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            FileWriter fw \u003d new FileWriter(\"./src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            fw.write(toWrite);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            fw.close();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } catch (IOException ignored) { }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"delete\": {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        int index \u003d 0;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"Please select a task to mark as completed!\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            index \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"Please choose an integer value!\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"Please choose an integer greater than 0!\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } else if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"Your task list is not that long yet!\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        list.remove(task);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        System.out.println(line + \"\\n    Noted. I\u0027ve removed this task:\\n        \""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + task.toString()"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + \"\\n    You now have \" + list.size()"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + \" in your list.\\n\" + line);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        String toWrite \u003d list.stream()"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .map(Task::toSave)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .reduce((x, y) -\u003e x + \"\\n\" + y)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                .orElse(\"\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            FileWriter fw \u003d new FileWriter(\"./src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            fw.write(toWrite);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            fw.close();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } catch (IOException ignored) { }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"A deadline requires a description and a time!\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        int i \u003d 1;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        while (!input[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            description.append(input[i++]).append(\" \");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            if (i \u003d\u003d input.length) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                throw new DukeException(\"deadline requires the use of \\\"/by\\\"!\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        while (++i \u003c input.length) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            time.append(input[i]).append(\" \");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (time.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"The time of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        time.deleteCharAt(time.length() - 1);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            task \u003d new Deadline(description.toString(), time.toString(), false);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            list.add(task);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            System.out.println(line + \"\\n    Got it. I\u0027ve added this task:\\n        \""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + task.toString()"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + \"\\n    You now have \" + list.size()"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + \" in your list.\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            String toWrite \u003d list.stream()"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    .map(Task::toSave)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    .reduce((x, y) -\u003e x + \"\\n\" + y)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    .orElse(\"\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                FileWriter fw \u003d new FileWriter(\"./src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                fw.write(toWrite);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                fw.close();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            } catch (IOException ignored) { }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            System.out.println(\"    Error: Please use the following format instead:\\n\""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + \"        dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"An event requires a description and a time!\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        int i \u003d 1;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        while (!input[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            description.append(input[i++]).append(\" \");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            if (i \u003d\u003d input.length) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                throw new DukeException(\"event requires the use of \\\"/at\\\"!\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        while (++i \u003c input.length) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            time.append(input[i]).append(\" \");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        if (time.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            throw new DukeException(\"The time of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        time.deleteCharAt(time.length() - 1);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            task \u003d new Event(description.toString(), time.toString(), false);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            list.add(task);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            System.out.println(line + \"\\n    Got it. I\u0027ve added this task:\\n        \""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + task.toString()"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + \"\\n    You now have \" + list.size()"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + \" in your list.\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            String toWrite \u003d list.stream()"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    .map(Task::toSave)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    .reduce((x, y) -\u003e x + \"\\n\" + y)"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    .orElse(\"\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                FileWriter fw \u003d new FileWriter(\"./src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                fw.write(toWrite);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                fw.close();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            } catch (IOException ignored) { }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            System.out.println(\"    Error: Please use the following format instead:\\n\""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                    + \"        dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                System.out.println(line + \"\\n    Error: \" + e.getMessage() + \"\\n\" + line);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 379,
      "-": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 10
    }
  }
]
