[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. "},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"Given below are instructions on how to use it."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` "},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"to close the existing project dialog first)."},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"2. Set up the correct JDK version, as follows:"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`."},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"   2. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory "},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"   where you installed JDK 11."},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"   3. Click `OK`."},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"3. Import the project into Intellij as follows:"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"   2. Select the project directory, and click `OK`."},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"   3. If there are any further prompts, accept the defaults."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"4. After the importing is complete, locate the `src/main/java/focus.Launcher.java` file, "},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"right-click it, and choose Run `focus.Launcher.main()`. "},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"If the setup is correct, you should see something like this:"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"![Image of Starting Screen](./docs/images/startingScreen.png)"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"## Acknowledgements"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"Images used for making of Focus:  "},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"[Image of Pocus](https://cdn.shopify.com/s/files/1/0231/6137/2752/files/bt21-rj_ebcc3442-da05-40c0-869a-e3befcf6f48e_1600x.jpg?v\u003d1563920540)  "},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"[Image of User](https://cdn.shopify.com/s/files/1/0231/6137/2752/files/bt21-koya_ab56b8c9-ca8a-40a7-a82a-689eaffa8d3d_1600x.jpg?v\u003d1563920606)"}],"authorContributionMap":{"ruilingk":21,"-":8}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"    mainClassName \u003d \"focus.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"    archiveBaseName \u003d \"focus\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ruilingk":18,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"# User Guide to Focus"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"## Content Page"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"1. [Introduction](#introduction)"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"2. [Getting Started](#getting-started)"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"3. [Features](#features)"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"4. [Additional Help](#additional-help)"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"5. [Acknowledgements](#acknowledgements)"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"## Introduction"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"Meet Pocus in Focus! An all-in-one task manager to help you better plan your time."},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"With a simple interface and easy-to-use commands, you would be able to use Focus effectively!"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"## Getting Started"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"1. Ensure that you have at least **Java 11** installed in your laptop."},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"2. Download **v0.2 focus.jar** file [here](https://github.com/ruilingk/ip/releases/tag/A-Release)."},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"3. Once downloaded, double-click it to run."},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"4. You should see something like this:  "},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"![Image of Starting Screen](./images/startingScreen.png)"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"5. Start by typing in your name!  "},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"![Image of Home Screen](./images/newHomeScreen.png)"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"6. Next, start talking to Pocus and manage your tasks!"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"1. [Add tasks of different types](#feature-1)"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"2. [Mark tasks as done](#feature-2)"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"3. [List tasks](#feature-3)"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"4. [Delete tasks](#feature-4)"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"5. [Find tasks with specified keyword](#feature-5)"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"6. [Reminder within specified period](#feature-6)"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"7. [Settings](#feature-7)"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"8. [List commands available](#feature-8)"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"9. [Exit Focus](#feature-9)"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Feature 1"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"Pocus helps you to add 3 different types of tasks, namely ToDo, Deadline and Event."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"#### Usages"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"##### 1. Add ToDo tasks - `todo TODO_DESCRIPTION`"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"Adds a todo task to your task list, with no specific deadlines attached to it."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"`todo user guide for Focus`"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"![Image of ToDo command](./images/todo.png)"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"##### 2. Add Deadline tasks - `deadline DEADLINE_DESCRIPTION /by YYYY-MM-DD HH:mm`"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"Adds a deadline task to your task list, with a deadline attached to it."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"`deadline iP /by 2020-09-18 23:59`"},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"![Image of Deadline command](./images/deadline.png)"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":"##### 3. Add Event tasks - `event EVENT_DESCRIPTION /at YYYY-MM-DD HH:mm`"},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"Adds an event task to your task list, with a date and time attached to it."},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"`event Christmas Party /at 2020-12-25 18:00`"},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"![Image of Event command](./images/event.png)"},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"### Feature 2"},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"Pocus helps you to mark the tasks that you have completed as done."},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"#### Usage"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"##### Mark tasks as done - `done TASK_NUMBER`"},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"Marks the task with the task number you have specified to be done."},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"`done 2`"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"Expected outcome:  "},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"![Image of Done command](./images/done.png)"},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":"### Feature 3"},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"Pocus helps you to list out the tasks you have in your task list."},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"#### Usage"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":"##### List tasks - `list`"},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"Displays the tasks that you have in your task list regardless of whether you have completed or not."},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"`list`"},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"![Image of List command](./images/list.png)"},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":"### Feature 4"},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":"Pocus helps you to delete the tasks that you no longer need."},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":98,"author":{"gitId":"ruilingk"},"content":"#### Usage"},{"lineNumber":99,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":100,"author":{"gitId":"ruilingk"},"content":"##### Delete tasks - `delete TASK_NUMBER`"},{"lineNumber":101,"author":{"gitId":"ruilingk"},"content":"Deletes the task with the task number you have specified."},{"lineNumber":102,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":103,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":104,"author":{"gitId":"ruilingk"},"content":"`delete 3`"},{"lineNumber":105,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":106,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":107,"author":{"gitId":"ruilingk"},"content":"![Image of Delete command](./images/delete.png)"},{"lineNumber":108,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":109,"author":{"gitId":"ruilingk"},"content":"### Feature 5"},{"lineNumber":110,"author":{"gitId":"ruilingk"},"content":"Pocus helps you to find the tasks which contain the keyword you want."},{"lineNumber":111,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":112,"author":{"gitId":"ruilingk"},"content":"#### Usage"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"ruilingk"},"content":"##### Find tasks with specified keyword -`find KEYWORD`"},{"lineNumber":115,"author":{"gitId":"ruilingk"},"content":"Finds the tasks which has KEYWORD as a description."},{"lineNumber":116,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":117,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":118,"author":{"gitId":"ruilingk"},"content":"`find party`"},{"lineNumber":119,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":120,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":121,"author":{"gitId":"ruilingk"},"content":"![Image of Find command](./images/find.png)"},{"lineNumber":122,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":123,"author":{"gitId":"ruilingk"},"content":"### Feature 6"},{"lineNumber":124,"author":{"gitId":"ruilingk"},"content":"Pocus reminds you of the tasks which are due soon (within your specified period of days)."},{"lineNumber":125,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":126,"author":{"gitId":"ruilingk"},"content":"#### Usage"},{"lineNumber":127,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":128,"author":{"gitId":"ruilingk"},"content":"##### Reminder within specified period -`remind`"},{"lineNumber":129,"author":{"gitId":"ruilingk"},"content":"Reminds you of tasks within specified period of days. Default is 7 days."},{"lineNumber":130,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":131,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":132,"author":{"gitId":"ruilingk"},"content":"`remind`"},{"lineNumber":133,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":134,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":135,"author":{"gitId":"ruilingk"},"content":"![Image of Remind command](./images/remind.png)"},{"lineNumber":136,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":137,"author":{"gitId":"ruilingk"},"content":"### Feature 7"},{"lineNumber":138,"author":{"gitId":"ruilingk"},"content":"Pocus helps you to change your name, or the number of days you want for reminders."},{"lineNumber":139,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":140,"author":{"gitId":"ruilingk"},"content":"#### Usages"},{"lineNumber":141,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":142,"author":{"gitId":"ruilingk"},"content":"##### 1. Settings to change name - `settings /name YOUR_NEW_NAME`"},{"lineNumber":143,"author":{"gitId":"ruilingk"},"content":"First-time users will be prompted to add a name, but you can change it afterwards."},{"lineNumber":144,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":145,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":146,"author":{"gitId":"ruilingk"},"content":"`settings /name Rui`"},{"lineNumber":147,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":148,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":149,"author":{"gitId":"ruilingk"},"content":"![Image of Settings command](./images/settingsName.png)"},{"lineNumber":150,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":151,"author":{"gitId":"ruilingk"},"content":"##### 2. Settings to change reminder period -`settings /days NUMBER_OF_DAYS`"},{"lineNumber":152,"author":{"gitId":"ruilingk"},"content":"Default number of days is 7, but you can change it if you like."},{"lineNumber":153,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":154,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":155,"author":{"gitId":"ruilingk"},"content":"`settings /days 3`"},{"lineNumber":156,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":157,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":158,"author":{"gitId":"ruilingk"},"content":"![Image of Settings command](./images/settingsDays.png)"},{"lineNumber":159,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":160,"author":{"gitId":"ruilingk"},"content":"### Feature 8"},{"lineNumber":161,"author":{"gitId":"ruilingk"},"content":"Pocus helps you to list out the available commands. Good for first-time users!"},{"lineNumber":162,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":163,"author":{"gitId":"ruilingk"},"content":"#### Usage"},{"lineNumber":164,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":165,"author":{"gitId":"ruilingk"},"content":"##### List commands available -`help`"},{"lineNumber":166,"author":{"gitId":"ruilingk"},"content":"Helps you to get used to the commands Pocus can recognise."},{"lineNumber":167,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":168,"author":{"gitId":"ruilingk"},"content":"Example of usage: "},{"lineNumber":169,"author":{"gitId":"ruilingk"},"content":"`help`"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":172,"author":{"gitId":"ruilingk"},"content":"![Image of Help command](./images/newHelp.png)"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"ruilingk"},"content":"### Feature 9"},{"lineNumber":175,"author":{"gitId":"ruilingk"},"content":"Pocus helps you to exit the application."},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"ruilingk"},"content":"#### Usage"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"ruilingk"},"content":"##### Exit Focus -`bye`"},{"lineNumber":180,"author":{"gitId":"ruilingk"},"content":"Exits the application, and the window will close in 5 seconds automatically."},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":183,"author":{"gitId":"ruilingk"},"content":"`bye`"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"ruilingk"},"content":"Expected outcome:  "},{"lineNumber":186,"author":{"gitId":"ruilingk"},"content":"![Image of Exit command](./images/bye.png)"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"ruilingk"},"content":"## Additional Help"},{"lineNumber":189,"author":{"gitId":"ruilingk"},"content":"Q: Why am I unable to run the JAR file?  "},{"lineNumber":190,"author":{"gitId":"ruilingk"},"content":"A: Please ensure that your laptop supports at least Java 11.  "},{"lineNumber":191,"author":{"gitId":"ruilingk"},"content":"  "},{"lineNumber":192,"author":{"gitId":"ruilingk"},"content":"Q: What if I am changing my laptop?  "},{"lineNumber":193,"author":{"gitId":"ruilingk"},"content":"A: Don\u0027t worry! At the current directory you are at right now, you should see a data folder created for you. "},{"lineNumber":194,"author":{"gitId":"ruilingk"},"content":"Simply copy the folder into your new laptop, and run the JAR file in the same directory, and Focus will "},{"lineNumber":195,"author":{"gitId":"ruilingk"},"content":"retrieve all the data for you!  "},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"ruilingk"},"content":"If you have any further questions, please do not hesitate to contact me via [Github](https://github.com/ruilingk)!"}],"authorContributionMap":{"ruilingk":175,"-":22}},{"path":"src/main/java/focus/Focus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.command.Command;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.ui.UI;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"/** Represents Focus. */"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"public class Focus {"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"    /** Storage created for user. */"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage;"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    /** Task list created for user. */"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList;"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    /** UI created to interact with user. */"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    private final UI ui;"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    /** Creates Focus to set up the things needed. */"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    public Focus() {"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"        ui \u003d new UI();"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"        Storage.createFolder();"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"        storage \u003d new Storage();"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        if (storage.retrieveFocusTextFile()) {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            taskList \u003d new TaskList(storage.loadData());"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        if (storage.retrieveSettingsTextFile()) {"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"            storage.loadSettings();"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"     * Gets response from Pocus based on user\u0027s input."},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"     * @return Pocus\u0027 response."},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"    public String getResponse(String input) {"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"        boolean isExit;"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"            isExit \u003d command.isExit();"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"            if (isExit) {"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"                return ui.exitFocus();"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"            return command.execute(input, taskList, storage);"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"            return e.getMessage();"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ruilingk":52,"-":1}},{"path":"src/main/java/focus/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"/** Represents a launcher class to workaround classpath issues. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"     * Entry point to run Focus."},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"     * @param args Args."},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":15}},{"path":"src/main/java/focus/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"/** Represents a GUI for Focus using FXML. */"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    /** Stage object to allow MainWindow class to access. */"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    private static Stage stage;"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"     * Gets the stage."},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     * @return Stage."},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public static Stage getStage() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        return stage;"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     * Overrides start method of JavaFX."},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"     * @param stage Stage."},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"    public void start(Stage stage) {"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        Main.stage \u003d stage;"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        Focus focus \u003d new Focus();"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"            String mainWindowFxml \u003d \"/view/MainWindow.fxml\";"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(mainWindowFxml));"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"            Scene scene \u003d new Scene(anchorPane);"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"            stage.setTitle(\"focus.\");"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"            stage.getIcons().add(new Image(\"/images/planner.jpg\"));"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"            stage.setScene(scene);"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFocus(focus);"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"            stage.show();"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":50}},{"path":"src/main/java/focus/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidTaskCommandException;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidTaskDateException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidTaskDescriptionException;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"/** Represents the AddCommand to add tasks into task list. */"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"public class AddCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    /** Represents the type of task. */"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    private final String taskType;"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"     * Creates AddCommand with the given task type."},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     * @param taskType Type of task (to-do, deadline or event)."},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public AddCommand(String taskType) {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     * Returns false since AddCommand is not an ExitCommand."},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"     * @return False."},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"     * Executes AddCommand to add To-Do, Deadline or Event."},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of added task."},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        switch (taskType) {"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"        case \"todo\":"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"            return addToDo(input, taskList, storage);"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        case \"deadline\":"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"            return addDeadline(input, taskList, storage);"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"        case \"event\":"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"            return addEvent(input, taskList, storage);"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"        default:"},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"            assert false : \"All types of tasks are dealt with and program should not reach here.\";"},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"            return \"\";"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"     * Adds To-Do tasks into task list."},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of added To-Do."},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"    private String addToDo(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"        assert !input.isEmpty() : \"Input should not be blank here.\";"},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"        String information;"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"        try { // user did not input description of to-do task"},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"            information \u003d input.split(\"todo\")[1];"},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"        if (information.isBlank()) {"},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"        String description \u003d information.substring(1);"},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"        assert !description.isEmpty() : \"Description should not be blank here.\";"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":"        return taskList.addToDo(description, storage);"},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"     * Adds Deadline tasks into task list."},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of added Deadline."},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"    private String addDeadline(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":"        assert !input.isEmpty() : \"Input should not be blank here.\";"},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":"        String information;"},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":"        try { // user did not input description of deadline task"},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":"            information \u003d input.split(\"deadline\")[1];"},{"lineNumber":98,"author":{"gitId":"ruilingk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":99,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":100,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"ruilingk"},"content":"        if (information.isBlank()) {"},{"lineNumber":102,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":103,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":105,"author":{"gitId":"ruilingk"},"content":"        int end \u003d information.indexOf(\"/\");"},{"lineNumber":106,"author":{"gitId":"ruilingk"},"content":"        if (end \u003d\u003d -1) { // user did not input correct command"},{"lineNumber":107,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskCommandException();"},{"lineNumber":108,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":110,"author":{"gitId":"ruilingk"},"content":"        String description \u003d information.substring(1, end - 1);"},{"lineNumber":111,"author":{"gitId":"ruilingk"},"content":"        String by;"},{"lineNumber":112,"author":{"gitId":"ruilingk"},"content":"        try { // user did not input date of deadline task"},{"lineNumber":113,"author":{"gitId":"ruilingk"},"content":"            by \u003d information.substring(end + 4);"},{"lineNumber":114,"author":{"gitId":"ruilingk"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":115,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDateException();"},{"lineNumber":116,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"ruilingk"},"content":"        if (by.isBlank()) {"},{"lineNumber":118,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDateException();"},{"lineNumber":119,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":121,"author":{"gitId":"ruilingk"},"content":"        LocalDateTime date;"},{"lineNumber":122,"author":{"gitId":"ruilingk"},"content":"        try { // user did not input correct format of date of deadline task"},{"lineNumber":123,"author":{"gitId":"ruilingk"},"content":"            String formattedBy \u003d by.replace(\u0027 \u0027, \u0027T\u0027);"},{"lineNumber":124,"author":{"gitId":"ruilingk"},"content":"            date \u003d LocalDateTime.parse(formattedBy);"},{"lineNumber":125,"author":{"gitId":"ruilingk"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":126,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDateException();"},{"lineNumber":127,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"ruilingk"},"content":"        assert !description.isEmpty() : \"Description should not be blank here.\";"},{"lineNumber":129,"author":{"gitId":"ruilingk"},"content":"        return taskList.addDeadline(description, date, storage);"},{"lineNumber":130,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":132,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"ruilingk"},"content":"     * Adds Event tasks into task list."},{"lineNumber":134,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":136,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":137,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":138,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of added Event."},{"lineNumber":139,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":140,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"ruilingk"},"content":"    private String addEvent(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":142,"author":{"gitId":"ruilingk"},"content":"        assert !input.isEmpty() : \"Input should not be blank here.\";"},{"lineNumber":143,"author":{"gitId":"ruilingk"},"content":"        String information;"},{"lineNumber":144,"author":{"gitId":"ruilingk"},"content":"        try { // user did not input description of event task"},{"lineNumber":145,"author":{"gitId":"ruilingk"},"content":"            information \u003d input.split(\"event\")[1];"},{"lineNumber":146,"author":{"gitId":"ruilingk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":147,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":148,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"ruilingk"},"content":"        if (information.isBlank()) {"},{"lineNumber":150,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":151,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":153,"author":{"gitId":"ruilingk"},"content":"        int end \u003d information.indexOf(\"/\");"},{"lineNumber":154,"author":{"gitId":"ruilingk"},"content":"        if (end \u003d\u003d -1) { // user did not input correct command"},{"lineNumber":155,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskCommandException();"},{"lineNumber":156,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":158,"author":{"gitId":"ruilingk"},"content":"        String description \u003d information.substring(1, end - 1);"},{"lineNumber":159,"author":{"gitId":"ruilingk"},"content":"        String at;"},{"lineNumber":160,"author":{"gitId":"ruilingk"},"content":"        try { // user did not input date of event task"},{"lineNumber":161,"author":{"gitId":"ruilingk"},"content":"            at \u003d information.substring(end + 4);"},{"lineNumber":162,"author":{"gitId":"ruilingk"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":163,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDateException();"},{"lineNumber":164,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"ruilingk"},"content":"        if (at.isBlank()) {"},{"lineNumber":166,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDateException();"},{"lineNumber":167,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":169,"author":{"gitId":"ruilingk"},"content":"        LocalDateTime date;"},{"lineNumber":170,"author":{"gitId":"ruilingk"},"content":"        try { // user did not input correct format of date of event task"},{"lineNumber":171,"author":{"gitId":"ruilingk"},"content":"            String formattedAt \u003d at.replace(\u0027 \u0027, \u0027T\u0027);"},{"lineNumber":172,"author":{"gitId":"ruilingk"},"content":"            date \u003d LocalDateTime.parse(formattedAt);"},{"lineNumber":173,"author":{"gitId":"ruilingk"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":174,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskDateException();"},{"lineNumber":175,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"ruilingk"},"content":"        assert !description.isEmpty() : \"Description should not be blank here.\";"},{"lineNumber":177,"author":{"gitId":"ruilingk"},"content":"        return taskList.addEvent(description, date, storage);"},{"lineNumber":178,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":179}},{"path":"src/main/java/focus/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"/** Represents all the commands to allow different command classes to inherit. */"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"     * Returns true or false depending on the type of command."},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     * @return True or false."},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    public abstract boolean isExit();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"     * Executes the command."},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of execution."},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    public abstract String execute(String input, TaskList taskList, Storage storage)"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"            throws FocusException;"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":27}},{"path":"src/main/java/focus/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidTaskNumberException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"/** Represents the DeleteCommand to delete tasks from task list. */"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     * Returns false since DeleteCommand is not an ExitCommand."},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     * @return False."},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"        return false;"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     * Executes DeleteCommand to delete tasks."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of deleted task."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        String indexString;"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"            indexString \u003d input.substring(7);"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        if (indexString.isBlank()) {"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        assert !indexString.isEmpty() : \"Index string should not be blank here.\";"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"        int index \u003d Integer.parseInt(indexString);"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"        boolean indexIsLessThanZero \u003d index \u003c\u003d 0;"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"        boolean indexIsMoreThanListSize \u003d index \u003e taskList.getSize();"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"        if (indexIsLessThanZero || indexIsMoreThanListSize) {"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        assert !(indexIsLessThanZero || indexIsMoreThanListSize) : \"Index should not be less than 0 or exceed\""},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"                + \" task list size.\";"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"        return taskList.deleteTask(index, storage);"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":50}},{"path":"src/main/java/focus/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidTaskNumberException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"/** Represents the DoneCommand to mark tasks done on task list. */"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     * Returns false since DoneCommand is not an ExitCommand."},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     * @return False."},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"        return false;"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     * Executes DoneCommand to mark tasks done."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of done task."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        String indexString;"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"            indexString \u003d input.substring(5);"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        if (indexString.isBlank()) {"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        assert !indexString.isEmpty() : \"Index string should not be blank here.\";"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"        int index \u003d Integer.parseInt(indexString);"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"        boolean indexIsLessThanZero \u003d index \u003c\u003d 0;"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"        boolean indexIsMoreThanListSize \u003d index \u003e taskList.getSize();"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"        if (indexIsLessThanZero || indexIsMoreThanListSize) {"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        assert !(indexIsLessThanZero || indexIsMoreThanListSize) : \"Index should not be less than 0 or exceed\""},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"                + \" task list size.\";"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"        return taskList.markTaskDone(index, storage);"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":50}},{"path":"src/main/java/focus/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"/** Represents the ExitCommand to exit Focus. */"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"public class ExitCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"     * Returns true since ExitCommand is an ExitCommand."},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     * @return True."},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"        return true;"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"     * Executes ExitCommand to exit Focus."},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input (not used here)."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user (not used here)."},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user (not used here)."},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @return Empty string."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        assert false : \"Program should not reach here.\";"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"        return \"\";"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":29}},{"path":"src/main/java/focus/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidTaskKeywordException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"/** Represents the FindCommand to find tasks based on user\u0027s input. */"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"public class FindCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     * Returns false since FindCommand is not an ExitCommand."},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     * @return False."},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"        return false;"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     * Executes FindCommand to find tasks based on user\u0027s input."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of found tasks."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        String keyword;"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"            keyword \u003d input.split(\"find\")[1];"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskKeywordException();"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        if (keyword.isBlank()) {"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidTaskKeywordException();"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        assert !keyword.isEmpty() : \"Keyword should not be blank here.\";"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"        return taskList.findTasks(keyword.trim());"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":41}},{"path":"src/main/java/focus/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidHelpCommandException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import focus.ui.UI;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"/** Represents the HelpCommand to help first-time users about the commands. */"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"public class HelpCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     * Returns false since HelpCommand is not an ExitCommand."},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     * @return False."},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"        return false;"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     * Executes HelpCommand help users with the commands."},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of list of commands."},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        String checker;"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        if (input.length() \u003d\u003d 4) { // user\u0027s input is \"help\""},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"            return UI.listCommands();"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        assert !(input.length() \u003c\u003d 4) : \"Input length should be more than 4 here.\";"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"            checker \u003d input.split(\"help\")[1];"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidHelpCommandException();"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"        if (!checker.isBlank()) { // user\u0027s input is \"help me\" for example"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidHelpCommandException();"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"        } else { // user\u0027s input is \"help \" with spacings"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"            assert !checker.isEmpty() : \"Checker should not be blank here.\";"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"            return UI.listCommands();"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":47}},{"path":"src/main/java/focus/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidListCommandException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.exception.NoTasksException;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"/** Represents the ListCommand to list all the tasks on task list. */"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     * Returns false since ListCommand is not an ExitCommand."},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     * @return False."},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"        return false;"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     * Executes ListCommand to list the tasks."},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of list of tasks."},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        String checker;"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        if (taskList.getSize() \u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"            throw new NoTasksException();"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        assert !(taskList.getSize() \u003c 0) : \"Task list size should not be less than zero at all.\";"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        if (input.length() \u003d\u003d 4) {"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"            return taskList.listTasks();"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        assert !(input.length() \u003c\u003d 4) : \"Input length should be more than 4 here.\";"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"            checker \u003d input.split(\"list\")[1];"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidListCommandException();"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"        if (!checker.isBlank()) { // user\u0027s input is \"list tasks\" for example"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidListCommandException();"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        } else { // user\u0027s input is \"list \" with spacings"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"            assert !checker.isEmpty() : \"Checker should not be blank here.\";"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"            return taskList.listTasks();"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":51}},{"path":"src/main/java/focus/command/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidRemindCommandException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.exception.NoTasksException;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"/** Represents the RemindCommand to remind user of the tasks"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":" * (within a specified time frame) on task list. */"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"public class RemindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     * Returns false since RemindCommand is not an ExitCommand."},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"     * @return False."},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"        return false;"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     * Executes RemindCommand to remind user of tasks."},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of list of tasks."},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        String checker;"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"        if (taskList.getSize() \u003d\u003d 0) {"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"            throw new NoTasksException();"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        assert !(taskList.getSize() \u003c 0) : \"Task list size should not be less than zero at all.\";"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"        if (input.length() \u003d\u003d 6) {"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"            return taskList.remindUserOfTasksWithin(storage.getNumberOfDays());"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"        assert !(input.length() \u003c\u003d 6) : \"Input length should be more than 6 here.\";"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"            checker \u003d input.split(\"remind\")[1];"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidRemindCommandException();"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"        if (!checker.isBlank()) { // user\u0027s input is \"remind me\" for example"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidRemindCommandException();"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"        } else { // user\u0027s input is \"remind \" with spacings"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"            assert !checker.isEmpty() : \"Checker should not be blank here.\";"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"            return taskList.remindUserOfTasksWithin(storage.getNumberOfDays());"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":52}},{"path":"src/main/java/focus/command/SettingsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidSettingsCommandException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"/** Represents the SettingCommand to let users change settings. */"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"public class SettingsCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     * Returns false since SettingsCommand is not an ExitCommand."},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     * @return False."},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    public boolean isExit() {"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"        return false;"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     * Returns the number of days that user wants."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @return Number of days."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"    private String updateDays(String input) throws FocusException {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"        String numberOfDays;"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"            numberOfDays \u003d input.substring(7);"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidSettingsCommandException();"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"        if (numberOfDays.isBlank()) {"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidSettingsCommandException();"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"        assert !numberOfDays.isEmpty() : \"Number of days should not be blank here.\";"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        return numberOfDays;"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"     * Returns the name user wants to change."},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"     * @return User\u0027s new name."},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"    private String updateName(String input) throws FocusException {"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"        String name;"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"            name \u003d input.substring(7);"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidSettingsCommandException();"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"        if (name.isBlank()) {"},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidSettingsCommandException();"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":"        assert !name.isEmpty() : \"Number of days should not be blank here.\";"},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":"        return name;"},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"     * Executes SettingsCommand to change settings."},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"     * @param taskList Task list created for user."},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"     * @return String to notify user settings are changed."},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"     * @throws FocusException If input does not meet criteria."},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"    public String execute(String input, TaskList taskList, Storage storage) throws FocusException {"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"        String checker;"},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"        if (input.length() \u003d\u003d 8) {"},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidSettingsCommandException();"},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"        assert !(input.length() \u003c\u003d 8) : \"Input length should be more than 8 here.\";"},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":"            checker \u003d input.split(\"settings\")[1];"},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidSettingsCommandException();"},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"        int end \u003d checker.indexOf(\"/\");"},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":"        if (end \u003d\u003d -1) {"},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidSettingsCommandException();"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"        if (checker.contains(\"/days\")) {"},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"            String numberOfDays \u003d updateDays(checker);"},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"            storage.updateNumberOfDays(numberOfDays);"},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"            return \"\\tThe period of reminders has been changed to: \" + numberOfDays + \" days!\";"},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"            String name \u003d updateName(checker);"},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"            Storage.updateName(name);"},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":"            return \"\\tYour name has been changed to: \" + name + \"!\";"},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":97}},{"path":"src/main/java/focus/exception/FocusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents the exceptions for Focus, and allows other exceptions to extend. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class FocusException extends Exception {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"     * Creates FocusException for methods to throw."},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"     * @param message Error message."},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    public FocusException(String message) {"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"        super(\"\\tERROR: \" + message);"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":13}},{"path":"src/main/java/focus/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for invalid inputs by user. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidCommandException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidCommandException for Parser class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidCommandException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Oops! I\u0027m not sure what you meant!\\n\""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"                + \"\\tPlease try again!\");"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":10}},{"path":"src/main/java/focus/exception/InvalidHelpCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for inputs which Focus thinks that user wants to input \u0027help\u0027. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidHelpCommandException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidHelpCommandException for HelpCommand class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidHelpCommandException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Hmm, did you meant the command \u0027help\u0027?\");"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":9}},{"path":"src/main/java/focus/exception/InvalidListCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for inputs which Focus thinks that user wants to input \u0027list\u0027. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidListCommandException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidListCommandException for ListCommand class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidListCommandException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Hmm, did you meant the command \u0027list\u0027?\");"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":9}},{"path":"src/main/java/focus/exception/InvalidRemindCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for inputs which Focus thinks that user wants to input \u0027remind\u0027. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidRemindCommandException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidRemindCommandException for RemindCommand class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidRemindCommandException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Hmm, did you meant the command \u0027remind\u0027?\");"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":9}},{"path":"src/main/java/focus/exception/InvalidSettingsCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for invalid format when user wants to go to settings. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidSettingsCommandException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidSettingsCommandException for SettingsCommand class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidSettingsCommandException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Please type in the correct format for settings!\\n\""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"                + \"\\tIf you need an example, type \u0027help\u0027!\");"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":10}},{"path":"src/main/java/focus/exception/InvalidTaskCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for invalid inputs by user when creating tasks. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidTaskCommandException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidTaskCommandException for AddCommand class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidTaskCommandException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Please input the appropriate command!\\n\""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"                + \"\\tIf you need an example, type \u0027help\u0027!\");"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":10}},{"path":"src/main/java/focus/exception/InvalidTaskDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for invalid date inputs by user when creating tasks. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidTaskDateException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidTaskDateException for AddCommand class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidTaskDateException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Please input the correct date format!\\n\""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"                + \"\\tIf you need an example, type \u0027help\u0027!\");"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":10}},{"path":"src/main/java/focus/exception/InvalidTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for invalid description inputs by user when creating tasks. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidTaskDescriptionException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidTaskDescriptionException for AddCommand class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidTaskDescriptionException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Please input an appropriate task description!\\n\""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"                + \"\\tIf you need an example, type \u0027help\u0027!\");"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":10}},{"path":"src/main/java/focus/exception/InvalidTaskKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for invalid keyword inputs by user when creating tasks. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidTaskKeywordException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidTaskKeywordException for FindCommand class to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidTaskKeywordException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"Please enter a keyword you wish to find!\");"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":9}},{"path":"src/main/java/focus/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception for invalid task number inputs by user when creating tasks. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class InvalidTaskNumberException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates InvalidTaskNumberException for Delete and Done classes to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public InvalidTaskNumberException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"There is no such task number.\\n\""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"                + \"\\tPlease enter a valid one!\\n\""},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"                + \"\\tType \u0027list\u0027 to view your list of tasks!\");"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":11}},{"path":"src/main/java/focus/exception/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"/** Represents exception when user wants to view task list but there is no tasks. */"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"public class NoTasksException extends FocusException {"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"    /** Creates NoTasksException for ListCommand and RemindCommand classes to throw. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"    public NoTasksException() {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"        super(\"There are currently no tasks on your list!\\n\""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"                + \"\\tStart adding one now!\");"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":10}},{"path":"src/main/java/focus/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.parser;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import focus.command.AddCommand;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import focus.command.Command;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.command.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.command.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"import focus.command.FindCommand;"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"import focus.command.HelpCommand;"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"import focus.command.ListCommand;"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"import focus.command.RemindCommand;"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"import focus.command.SettingsCommand;"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"import focus.exception.InvalidCommandException;"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"import focus.task.Deadline;"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"import focus.task.Event;"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"import focus.task.Task;"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"import focus.task.ToDo;"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":" * Allows Focus to make sense of user\u0027s commands and parsing of"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":" * text files to convert them to Tasks."},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":" */"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"public class Parser {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     * Parses user\u0027s inputs to Command."},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"     * @return Different commands depending on user\u0027s input."},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"     * @throws InvalidCommandException When user inputs an invalid command."},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"    public static Command parse(String input) throws InvalidCommandException {"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        Command command;"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"        if (input.startsWith(\"help\")) { // list out the commands"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"            command \u003d new HelpCommand();"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"todo\")) { // add to-do tasks"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"            command \u003d new AddCommand(\"todo\");"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"deadline\")) { // add deadline tasks"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"            command \u003d new AddCommand(\"deadline\");"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"event\")) { // add event tasks"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"            command \u003d new AddCommand(\"event\");"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"delete\")) { // delete tasks"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"            command \u003d new DeleteCommand();"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"done\")) { // mark tasks done"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"            command \u003d new DoneCommand();"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"list\")) { // list out the tasks"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"            command \u003d new ListCommand();"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"find\")) { // find the tasks"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"            command \u003d new FindCommand();"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"remind\")) { // reminders"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"            command \u003d new RemindCommand();"},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"        } else if (input.startsWith(\"settings\")) { // settings"},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"            command \u003d new SettingsCommand();"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"        } else if (input.equals(\"bye\")) { // exit the bot"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":"        } else { // handle invalid inputs"},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"            throw new InvalidCommandException();"},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"        assert !command.equals(null) : \"Command should not be null here.\";"},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"        return command;"},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"     * Parses strings from text file to different types of Task."},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"     * @param text Task in string form in text file."},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"     * @return Different types of Task."},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"    public static Task textToTask(String text) {"},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"        String[] task \u003d text.split(\"\\\\|\");"},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"        Task existingTask \u003d null;"},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"        String pattern \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm\";"},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"        switch (task[0]) {"},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"        case \"T\":"},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":"            existingTask \u003d new ToDo(task[2]);"},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"            if (task[1].equals(\"1\")) {"},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"                existingTask.markAsDone();"},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":"            return existingTask;"},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"        case \"D\":"},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":"            DateTimeFormatter deadlineFormatter \u003d DateTimeFormatter.ofPattern(pattern);"},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(task[3], deadlineFormatter);"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"            existingTask \u003d new Deadline(task[2], by);"},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":"            if (task[1].equals(\"1\")) {"},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"                existingTask.markAsDone();"},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"            return existingTask;"},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"        case \"E\":"},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"            DateTimeFormatter eventFormatter \u003d DateTimeFormatter.ofPattern(pattern);"},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"            LocalDateTime at \u003d LocalDateTime.parse(task[3], eventFormatter);"},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"            existingTask \u003d new Event(task[2], at);"},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":"            if (task[1].equals(\"1\")) {"},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":"                existingTask.markAsDone();"},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":"            return existingTask;"},{"lineNumber":98,"author":{"gitId":"ruilingk"},"content":"        default:"},{"lineNumber":99,"author":{"gitId":"ruilingk"},"content":"            assert false : \"Program should not reach here.\";"},{"lineNumber":100,"author":{"gitId":"ruilingk"},"content":"            return existingTask;"},{"lineNumber":101,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":103}},{"path":"src/main/java/focus/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.storage;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.Task;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"/** Allows Focus to load and save data in user\u0027s files. */"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    /** Represents the current user\u0027s directory. */"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private static final String USER_DIRECTORY \u003d \"user.dir\";"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    /** Represents the path for the settings to be saved at. */"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    private static String settingsPath;"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    /** User\u0027s name. */"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    private static String userName;"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    /** Number of days user has set. */"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"    private static int numberOfDays;"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    /** Represents the path for the task list to be saved at. */"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    private final String focusPath;"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    /** Creates a storage to allow loading and saving of tasks. */"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"    public Storage() {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"        this.focusPath \u003d System.getProperty(USER_DIRECTORY) + \"/data/focus.txt\";"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"        settingsPath \u003d System.getProperty(USER_DIRECTORY) + \"/data/settings.txt\";"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"     * Gets the number of days."},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"     * @return Number of days."},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"    public int getNumberOfDays() {"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        return numberOfDays;"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"     * Gets the username."},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"     * @return User\u0027s name."},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"    public static String getUserName() {"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        return userName;"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"     * Sets the user\u0027s name."},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"     * @param userInput User\u0027s input."},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"    public static void setUserName(String userInput) {"},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"        updateName(userInput);"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":"    /** Creates a folder to store text file. If present, it will not create. */"},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"    public static void createFolder() {"},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"        String folderPath \u003d System.getProperty(USER_DIRECTORY) + \"/data\";"},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"        File folder \u003d new File(folderPath);"},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"        boolean isSuccessful \u003d folder.mkdir();"},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"        if (isSuccessful) {"},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"Folder created successfully.\");"},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"Folder already exists.\");"},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"     * Creates or retrieves the text file from user\u0027s files."},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"     * @return True if user has an existing text file,"},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"     * false if user does not have an existing text file."},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"    public boolean retrieveFocusTextFile() {"},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":"        File data \u003d null;"},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"        boolean hasCreatedTextFile \u003d false;"},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"        boolean hasTextFile \u003d false;"},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":"            data \u003d new File(focusPath);"},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"            hasCreatedTextFile \u003d data.createNewFile();"},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":"        } catch (IOException e) { // creation or retrieving data has errors"},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"        if (hasCreatedTextFile) {"},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"Text file created: \" + data.getName());"},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"        } else {"},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"            hasTextFile \u003d true;"},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"Text file already exists.\");"},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"        return hasTextFile;"},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":"     * Loads the data from user\u0027s text file if it already exists."},{"lineNumber":98,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"ruilingk"},"content":"     * @return Arraylist of tasks in string format."},{"lineNumber":100,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"ruilingk"},"content":"    public ArrayList\u003cString\u003e loadData() {"},{"lineNumber":102,"author":{"gitId":"ruilingk"},"content":"        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":103,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"ruilingk"},"content":"            File data \u003d new File(focusPath);"},{"lineNumber":105,"author":{"gitId":"ruilingk"},"content":"            Scanner sc \u003d new Scanner(data);"},{"lineNumber":106,"author":{"gitId":"ruilingk"},"content":"            String task;"},{"lineNumber":107,"author":{"gitId":"ruilingk"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":108,"author":{"gitId":"ruilingk"},"content":"                task \u003d sc.nextLine();"},{"lineNumber":109,"author":{"gitId":"ruilingk"},"content":"                taskList.add(task);"},{"lineNumber":110,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"ruilingk"},"content":"            sc.close();"},{"lineNumber":112,"author":{"gitId":"ruilingk"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":113,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":114,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":115,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"ruilingk"},"content":"        return taskList;"},{"lineNumber":117,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":119,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"ruilingk"},"content":"     * Adds the data to user\u0027s text file."},{"lineNumber":121,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"ruilingk"},"content":"     * @param item Item to be added to text file."},{"lineNumber":123,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"ruilingk"},"content":"    public void addData(Task item) {"},{"lineNumber":125,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"ruilingk"},"content":"            FileWriter fileWriter \u003d new FileWriter(focusPath, true);"},{"lineNumber":127,"author":{"gitId":"ruilingk"},"content":"            String task \u003d item.taskToText() + \"\\n\";"},{"lineNumber":128,"author":{"gitId":"ruilingk"},"content":"            assert !task.isEmpty() : \"Task should not be blank here.\";"},{"lineNumber":129,"author":{"gitId":"ruilingk"},"content":"            fileWriter.write(task);"},{"lineNumber":130,"author":{"gitId":"ruilingk"},"content":"            fileWriter.close();"},{"lineNumber":131,"author":{"gitId":"ruilingk"},"content":"        } catch (IOException e) {"},{"lineNumber":132,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":133,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":134,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":137,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"ruilingk"},"content":"     * Updates the data in user\u0027s text file."},{"lineNumber":139,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"ruilingk"},"content":"     * @param tasks Task list to be updated."},{"lineNumber":141,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"ruilingk"},"content":"    public void updateData(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":143,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":144,"author":{"gitId":"ruilingk"},"content":"            FileWriter fileWriter \u003d new FileWriter(focusPath);"},{"lineNumber":145,"author":{"gitId":"ruilingk"},"content":"            for (Task item : tasks) {"},{"lineNumber":146,"author":{"gitId":"ruilingk"},"content":"                String task \u003d item.taskToText() + \"\\n\";"},{"lineNumber":147,"author":{"gitId":"ruilingk"},"content":"                assert !task.isEmpty() : \"Task should not be blank here.\";"},{"lineNumber":148,"author":{"gitId":"ruilingk"},"content":"                fileWriter.write(task);"},{"lineNumber":149,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"ruilingk"},"content":"            fileWriter.close();"},{"lineNumber":151,"author":{"gitId":"ruilingk"},"content":"        } catch (IOException e) {"},{"lineNumber":152,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":153,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":154,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":157,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"ruilingk"},"content":"     * Creates or retrieves the settings file from user\u0027s files."},{"lineNumber":159,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"ruilingk"},"content":"     * @return True if user has an existing settings file,"},{"lineNumber":161,"author":{"gitId":"ruilingk"},"content":"     * false if user does not have an existing settings file."},{"lineNumber":162,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"ruilingk"},"content":"    public boolean retrieveSettingsTextFile() {"},{"lineNumber":164,"author":{"gitId":"ruilingk"},"content":"        File data \u003d null;"},{"lineNumber":165,"author":{"gitId":"ruilingk"},"content":"        boolean hasCreatedTextFile \u003d false;"},{"lineNumber":166,"author":{"gitId":"ruilingk"},"content":"        boolean hasTextFile \u003d false;"},{"lineNumber":167,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":168,"author":{"gitId":"ruilingk"},"content":"            data \u003d new File(settingsPath);"},{"lineNumber":169,"author":{"gitId":"ruilingk"},"content":"            hasCreatedTextFile \u003d data.createNewFile();"},{"lineNumber":170,"author":{"gitId":"ruilingk"},"content":"        } catch (IOException e) { // creation or retrieving data has errors"},{"lineNumber":171,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":172,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":173,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"ruilingk"},"content":"        if (hasCreatedTextFile) {"},{"lineNumber":175,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"Settings file created: \" + data.getName());"},{"lineNumber":176,"author":{"gitId":"ruilingk"},"content":"            try {"},{"lineNumber":177,"author":{"gitId":"ruilingk"},"content":"                FileWriter fileWriter \u003d new FileWriter(settingsPath);"},{"lineNumber":178,"author":{"gitId":"ruilingk"},"content":"                fileWriter.write(\"name|7\"); // default name and number of days"},{"lineNumber":179,"author":{"gitId":"ruilingk"},"content":"                userName \u003d \"name\";"},{"lineNumber":180,"author":{"gitId":"ruilingk"},"content":"                numberOfDays \u003d 7;"},{"lineNumber":181,"author":{"gitId":"ruilingk"},"content":"                fileWriter.close();"},{"lineNumber":182,"author":{"gitId":"ruilingk"},"content":"            } catch (IOException e) {"},{"lineNumber":183,"author":{"gitId":"ruilingk"},"content":"                System.out.println(\"An error occurred.\");"},{"lineNumber":184,"author":{"gitId":"ruilingk"},"content":"                e.printStackTrace();"},{"lineNumber":185,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"ruilingk"},"content":"        } else {"},{"lineNumber":187,"author":{"gitId":"ruilingk"},"content":"            hasTextFile \u003d true;"},{"lineNumber":188,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"Settings file already exists.\");"},{"lineNumber":189,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"ruilingk"},"content":"        return hasTextFile;"},{"lineNumber":191,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":193,"author":{"gitId":"ruilingk"},"content":"    /** Loads the data from user\u0027s settings file if it already exists. */"},{"lineNumber":194,"author":{"gitId":"ruilingk"},"content":"    public void loadSettings() {"},{"lineNumber":195,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":196,"author":{"gitId":"ruilingk"},"content":"            File data \u003d new File(settingsPath);"},{"lineNumber":197,"author":{"gitId":"ruilingk"},"content":"            Scanner sc \u003d new Scanner(data);"},{"lineNumber":198,"author":{"gitId":"ruilingk"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":199,"author":{"gitId":"ruilingk"},"content":"                String line \u003d sc.nextLine();"},{"lineNumber":200,"author":{"gitId":"ruilingk"},"content":"                String[] split \u003d line.split(\"\\\\|\");"},{"lineNumber":201,"author":{"gitId":"ruilingk"},"content":"                System.out.println(split[0]);"},{"lineNumber":202,"author":{"gitId":"ruilingk"},"content":"                System.out.println(split[1]);"},{"lineNumber":203,"author":{"gitId":"ruilingk"},"content":"                userName \u003d split[0];"},{"lineNumber":204,"author":{"gitId":"ruilingk"},"content":"                numberOfDays \u003d Integer.parseInt(split[1]);"},{"lineNumber":205,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":206,"author":{"gitId":"ruilingk"},"content":"            sc.close();"},{"lineNumber":207,"author":{"gitId":"ruilingk"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":208,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":209,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":210,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":213,"author":{"gitId":"ruilingk"},"content":"    /** Updates the name in user\u0027s settings file. */"},{"lineNumber":214,"author":{"gitId":"ruilingk"},"content":"    public static void updateName(String username) {"},{"lineNumber":215,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":216,"author":{"gitId":"ruilingk"},"content":"            FileWriter fileWriter \u003d new FileWriter(settingsPath);"},{"lineNumber":217,"author":{"gitId":"ruilingk"},"content":"            fileWriter.write(username + \"|\" + numberOfDays);"},{"lineNumber":218,"author":{"gitId":"ruilingk"},"content":"            fileWriter.close();"},{"lineNumber":219,"author":{"gitId":"ruilingk"},"content":"        } catch (IOException e) {"},{"lineNumber":220,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":221,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":222,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"ruilingk"},"content":"        userName \u003d username;"},{"lineNumber":224,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":226,"author":{"gitId":"ruilingk"},"content":"    /** Updates the number of days in user\u0027s settings file. */"},{"lineNumber":227,"author":{"gitId":"ruilingk"},"content":"    public void updateNumberOfDays(String numberOfDays) {"},{"lineNumber":228,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":229,"author":{"gitId":"ruilingk"},"content":"            FileWriter fileWriter \u003d new FileWriter(settingsPath);"},{"lineNumber":230,"author":{"gitId":"ruilingk"},"content":"            fileWriter.write(userName + \"|\" + numberOfDays);"},{"lineNumber":231,"author":{"gitId":"ruilingk"},"content":"            fileWriter.close();"},{"lineNumber":232,"author":{"gitId":"ruilingk"},"content":"        } catch (IOException e) {"},{"lineNumber":233,"author":{"gitId":"ruilingk"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":234,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":235,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"ruilingk"},"content":"        Storage.numberOfDays \u003d Integer.parseInt(numberOfDays);"},{"lineNumber":237,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":238}},{"path":"src/main/java/focus/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"/** Represents task with a type of Deadline. */"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    /** Represents the deadline of Deadline task. */"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    private final LocalDateTime by;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     * Creates Deadline with user provided description and deadline."},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     * @param description Description of Deadline."},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"     * @param by Deadline of Deadline task."},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * Converts Deadline to string form to be saved in user\u0027s files."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * @return String format of Deadline task."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    public String taskToText() {"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        return \"D|\" + super.completed + \"|\" + super.taskDescription + \"|\" + by;"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"     * Gets LocalDateTime of Deadline task."},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"     * @return LocalDateTime by."},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"    public LocalDateTime getDeadline() {"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"        return this.by;"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"     * Returns string format of Deadline."},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"     * @return A string representation of Deadline."},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        String pattern \u003d \"E, d MMM yyyy, h.mm a\";"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"                + by.format(DateTimeFormatter.ofPattern(pattern)) + \")\";"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":53}},{"path":"src/main/java/focus/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"/** Represents task with a type of Event. */"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    /** Represents the date and time of Event task. */"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    private final LocalDateTime at;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     * Creates Event with user provided description, date and time."},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"     * @param description Description of Event."},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"     * @param at Date and time of Event task."},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        this.at \u003d at;"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * Converts Event to string form to be saved in user\u0027s files."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * @return String format of Event task."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    public String taskToText() {"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        return \"E|\" + super.completed + \"|\" + super.taskDescription + \"|\" + at;"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"     * Gets LocalDateTime of Event task."},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"     * @return LocalDateTime at."},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"    public LocalDateTime getDeadline() {"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"        return this.at;"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"     * Returns string format of Event."},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"     * @return A string representation of Event."},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        String pattern \u003d \"E, d MMM yyyy, h.mm a\";"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"                + at.format(DateTimeFormatter.ofPattern(pattern)) + \")\";"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":53}},{"path":"src/main/java/focus/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"/** Represents an abstract Task class to allow different types of tasks to inherit. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"    /** Description of task. */"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    protected String taskDescription;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    /** Checks if task is completed or not. */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    /** \u00270\u0027 to represent incomplete, \u00271\u0027 to represent completed. */"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"    protected String completed;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"     * Creates a Task with a given task name, with it being not done yet."},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"     * @param taskDescription Description of task."},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    public Task(String taskDescription) {"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"        this.completed \u003d \"0\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     * Returns the description of task."},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     * @return Task\u0027s description."},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    public String getTaskName() {"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        return this.taskDescription;"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"     * Returns a tick or a cross based on whether the task is done or not done."},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"     * @return Tick or cross symbols."},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"    public String getStatusIcon() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return isDone"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"                ? \"\\u2713\""},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"                : \"\\u2718\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"    /** Marks the task as done. */"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"    public void markAsDone() {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"        this.completed \u003d \"1\";"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"     * Converts Task to string form to be saved in user\u0027s files."},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of task."},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"    public abstract String taskToText();"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"     * Gets LocalDateTime of tasks."},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"     * @return LocalDateTime if task is not a To-Do task."},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"    public abstract LocalDateTime getDeadline();"},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"     * Returns string format of Task."},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"     * @return A string representation of Task."},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.taskDescription;"},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ruilingk":64,"-":10}},{"path":"src/main/java/focus/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import focus.parser.Parser;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"/** Represents the task list of user. */"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"    /** Arraylist for the task list. */"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    /** Creates an empty task list if user does not have existing data in files. */"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     * Creates a task list with user\u0027s existing data."},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"     * @param tasks String representation of tasks in user\u0027s data."},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    public TaskList(ArrayList\u003cString\u003e tasks) {"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"        for (String task : tasks) {"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"            taskList.add(Parser.textToTask(task));"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"     * Returns number of tasks in task list."},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"     * @return number of tasks."},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"    public int getSize() {"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        return this.taskList.size();"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"     * Adds To-Do tasks into task list."},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"     * @param description Description of To-Do."},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of added To-Do."},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"    public String addToDo(String description, Storage storage) {"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        Task toDo \u003d new ToDo(description);"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"        taskList.add(toDo);"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"        storage.addData(toDo);"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d \"\\tGotcha! I\u0027ve added this task:\\n\\t\""},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"                + toDo + \"\\n\\t\" + \"You have \""},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"                + taskList.size() + \" tasks on your list now.\\n\";"},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"     * Adds Deadline tasks into task list."},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"     * @param description Description of Deadline."},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"     * @param date Deadline of Deadline task."},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of added Deadline."},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"    public String addDeadline(String description, LocalDateTime date, Storage storage) {"},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"        Task deadline \u003d new Deadline(description, date);"},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"        taskList.add(deadline);"},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"        storage.addData(deadline);"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d \"\\tGotcha! I\u0027ve added this task:\\n\\t\""},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"                + deadline + \"\\n\\t\" + \"You have \""},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"                + taskList.size() + \" tasks on your list now.\\n\";"},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"     * Adds Event tasks into task list."},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":"     * @param description Description of Event."},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"     * @param date Date and time of Event."},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of added Event."},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":"    public String addEvent(String description, LocalDateTime date, Storage storage) {"},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"        Task event \u003d new Event(description, date);"},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"        taskList.add(event);"},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"        storage.addData(event);"},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d \"\\tGotcha! I\u0027ve added this task:\\n\\t\""},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"                + event + \"\\n\\t\" + \"You have \""},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"                + taskList.size() + \" tasks on your list now.\\n\";"},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"ruilingk"},"content":"     * Deletes tasks from task list."},{"lineNumber":99,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"ruilingk"},"content":"     * @param index Index of task user wants to remove."},{"lineNumber":101,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":102,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of deleted task."},{"lineNumber":103,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"ruilingk"},"content":"    public String deleteTask(int index, Storage storage) {"},{"lineNumber":105,"author":{"gitId":"ruilingk"},"content":"        Task taskToBeDeleted \u003d taskList.get(index - 1);"},{"lineNumber":106,"author":{"gitId":"ruilingk"},"content":"        taskList.remove(index - 1);"},{"lineNumber":107,"author":{"gitId":"ruilingk"},"content":"        storage.updateData(taskList);"},{"lineNumber":108,"author":{"gitId":"ruilingk"},"content":"        String deletedTask \u003d \"\\tRoger that! I\u0027ve removed this task:\\n\\t\""},{"lineNumber":109,"author":{"gitId":"ruilingk"},"content":"                + taskToBeDeleted"},{"lineNumber":110,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\tYou have \" + taskList.size()"},{"lineNumber":111,"author":{"gitId":"ruilingk"},"content":"                + \" tasks on your list now.\\n\";"},{"lineNumber":112,"author":{"gitId":"ruilingk"},"content":"        assert !deletedTask.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":113,"author":{"gitId":"ruilingk"},"content":"        return deletedTask;"},{"lineNumber":114,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":116,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"ruilingk"},"content":"     * Marks tasks done on task list."},{"lineNumber":118,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"ruilingk"},"content":"     * @param index Index of task user wants to mark as done."},{"lineNumber":120,"author":{"gitId":"ruilingk"},"content":"     * @param storage Storage created for user."},{"lineNumber":121,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of done task."},{"lineNumber":122,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"ruilingk"},"content":"    public String markTaskDone(int index, Storage storage) {"},{"lineNumber":124,"author":{"gitId":"ruilingk"},"content":"        Task finishedTask \u003d taskList.get(index - 1);"},{"lineNumber":125,"author":{"gitId":"ruilingk"},"content":"        finishedTask.markAsDone();"},{"lineNumber":126,"author":{"gitId":"ruilingk"},"content":"        storage.updateData(taskList);"},{"lineNumber":127,"author":{"gitId":"ruilingk"},"content":"        String doneTask \u003d \"\\t\\\\(^O^)/ Good job! I\u0027ve marked this task as done:\\n\\t\""},{"lineNumber":128,"author":{"gitId":"ruilingk"},"content":"                + finishedTask + \"\\n\\tKeep going!\\n\";"},{"lineNumber":129,"author":{"gitId":"ruilingk"},"content":"        assert !doneTask.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":130,"author":{"gitId":"ruilingk"},"content":"        return doneTask;"},{"lineNumber":131,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":133,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"ruilingk"},"content":"     * Checks the list if index is last index of task list."},{"lineNumber":135,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"ruilingk"},"content":"     * @param index Index of task."},{"lineNumber":137,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of list of tasks."},{"lineNumber":138,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"ruilingk"},"content":"    private String checkList(int index) {"},{"lineNumber":140,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d \"\";"},{"lineNumber":141,"author":{"gitId":"ruilingk"},"content":"        int number \u003d index + 1;"},{"lineNumber":142,"author":{"gitId":"ruilingk"},"content":"        if (index \u003d\u003d taskList.size() - 1) {"},{"lineNumber":143,"author":{"gitId":"ruilingk"},"content":"            printing +\u003d \"\" + number + \". \" + taskList.get(index);"},{"lineNumber":144,"author":{"gitId":"ruilingk"},"content":"        } else {"},{"lineNumber":145,"author":{"gitId":"ruilingk"},"content":"            printing +\u003d \"\" + number + \". \" + taskList.get(index) + \"\\n\\t\";"},{"lineNumber":146,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":148,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":149,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":151,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"ruilingk"},"content":"     * Lists all the tasks on task list."},{"lineNumber":153,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":154,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of list of tasks."},{"lineNumber":155,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"ruilingk"},"content":"    public String listTasks() {"},{"lineNumber":157,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d \"\";"},{"lineNumber":158,"author":{"gitId":"ruilingk"},"content":"        printing +\u003d \"\\tHere are the tasks on your list:\\n\\t\";"},{"lineNumber":159,"author":{"gitId":"ruilingk"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":160,"author":{"gitId":"ruilingk"},"content":"            printing +\u003d checkList(i);"},{"lineNumber":161,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":163,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":164,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":166,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"ruilingk"},"content":"     * Checks if there are matches for tasks according to the keyword user input."},{"lineNumber":168,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":169,"author":{"gitId":"ruilingk"},"content":"     * @param keyword Keyword provided by user."},{"lineNumber":170,"author":{"gitId":"ruilingk"},"content":"     * @return True if can find tasks that match keyword or false if cannot."},{"lineNumber":171,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"ruilingk"},"content":"    private boolean canFindTasks(String keyword) {"},{"lineNumber":173,"author":{"gitId":"ruilingk"},"content":"        boolean canFind \u003d false;"},{"lineNumber":174,"author":{"gitId":"ruilingk"},"content":"        for (Task task : taskList) {"},{"lineNumber":175,"author":{"gitId":"ruilingk"},"content":"            if (task.getTaskName().contains(keyword)) {"},{"lineNumber":176,"author":{"gitId":"ruilingk"},"content":"                canFind \u003d true;"},{"lineNumber":177,"author":{"gitId":"ruilingk"},"content":"                break;"},{"lineNumber":178,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"ruilingk"},"content":"        return canFind;"},{"lineNumber":181,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":183,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"ruilingk"},"content":"     * Prints the found tasks according to the keyword user input."},{"lineNumber":185,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":186,"author":{"gitId":"ruilingk"},"content":"     * @param keyword Keyword provided by user."},{"lineNumber":187,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of found tasks."},{"lineNumber":188,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"ruilingk"},"content":"    private String printFoundTasks(String keyword) {"},{"lineNumber":190,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d \"\";"},{"lineNumber":191,"author":{"gitId":"ruilingk"},"content":"        int index \u003d 1;"},{"lineNumber":192,"author":{"gitId":"ruilingk"},"content":"        printing +\u003d \"\\tHere are the matching tasks on your list:\";"},{"lineNumber":193,"author":{"gitId":"ruilingk"},"content":"        for (Task task : taskList) {"},{"lineNumber":194,"author":{"gitId":"ruilingk"},"content":"            boolean taskContainsKeyword \u003d task.getTaskName().contains(keyword);"},{"lineNumber":195,"author":{"gitId":"ruilingk"},"content":"            if (taskContainsKeyword) {"},{"lineNumber":196,"author":{"gitId":"ruilingk"},"content":"                printing +\u003d \"\\n\\t\" + index + \". \" + task;"},{"lineNumber":197,"author":{"gitId":"ruilingk"},"content":"                index++;"},{"lineNumber":198,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":201,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":202,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":204,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":205,"author":{"gitId":"ruilingk"},"content":"     * Finds the tasks according to the keyword user input."},{"lineNumber":206,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":207,"author":{"gitId":"ruilingk"},"content":"     * @param keyword Keyword provided by user."},{"lineNumber":208,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of found tasks."},{"lineNumber":209,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"ruilingk"},"content":"    public String findTasks(String keyword) {"},{"lineNumber":211,"author":{"gitId":"ruilingk"},"content":"        String printing;"},{"lineNumber":212,"author":{"gitId":"ruilingk"},"content":"        boolean canFind \u003d canFindTasks(keyword);"},{"lineNumber":213,"author":{"gitId":"ruilingk"},"content":"        if (canFind) {"},{"lineNumber":214,"author":{"gitId":"ruilingk"},"content":"            printing \u003d printFoundTasks(keyword);"},{"lineNumber":215,"author":{"gitId":"ruilingk"},"content":"        } else {"},{"lineNumber":216,"author":{"gitId":"ruilingk"},"content":"            return \"\\tSorry, there are no tasks that match your keyword!\\n\";"},{"lineNumber":217,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":219,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":220,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":222,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"ruilingk"},"content":"     * Checks the tasks in task list for tasks that are due soon."},{"lineNumber":224,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":225,"author":{"gitId":"ruilingk"},"content":"     * @param numberOfDays Number of days user sets."},{"lineNumber":226,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of tasks within specified time frame."},{"lineNumber":227,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"ruilingk"},"content":"    private String checkTasks(int numberOfDays) {"},{"lineNumber":229,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d \"\";"},{"lineNumber":230,"author":{"gitId":"ruilingk"},"content":"        int index \u003d 1;"},{"lineNumber":231,"author":{"gitId":"ruilingk"},"content":"        ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":232,"author":{"gitId":"ruilingk"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now();"},{"lineNumber":233,"author":{"gitId":"ruilingk"},"content":"        printing +\u003d \"\\tHere are the deadlines and events tasks due in \" + numberOfDays + \" days:\";"},{"lineNumber":234,"author":{"gitId":"ruilingk"},"content":"        for (Task task : taskList) {"},{"lineNumber":235,"author":{"gitId":"ruilingk"},"content":"            if (task.getDeadline() !\u003d null) { // not to-do tasks"},{"lineNumber":236,"author":{"gitId":"ruilingk"},"content":"                long daysDifference \u003d ChronoUnit.DAYS.between(currentDate, task.getDeadline());"},{"lineNumber":237,"author":{"gitId":"ruilingk"},"content":"                if (daysDifference \u003c numberOfDays) {"},{"lineNumber":238,"author":{"gitId":"ruilingk"},"content":"                    printing +\u003d \"\\n\\t\" + index + \". \" + task;"},{"lineNumber":239,"author":{"gitId":"ruilingk"},"content":"                    index++;"},{"lineNumber":240,"author":{"gitId":"ruilingk"},"content":"                }"},{"lineNumber":241,"author":{"gitId":"ruilingk"},"content":"            } else {"},{"lineNumber":242,"author":{"gitId":"ruilingk"},"content":"                todoList.add(task);"},{"lineNumber":243,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":244,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":245,"author":{"gitId":"ruilingk"},"content":"        printing +\u003d addTodoToPrint(todoList);"},{"lineNumber":246,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":247,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":248,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":250,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"ruilingk"},"content":"     * Adds To-Do tasks to print out."},{"lineNumber":252,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":253,"author":{"gitId":"ruilingk"},"content":"     * @param todoList To-Do list."},{"lineNumber":254,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of To-Do tasks."},{"lineNumber":255,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":256,"author":{"gitId":"ruilingk"},"content":"    private String addTodoToPrint(ArrayList\u003cTask\u003e todoList) {"},{"lineNumber":257,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d \"\";"},{"lineNumber":258,"author":{"gitId":"ruilingk"},"content":"        int todoIndex \u003d 1;"},{"lineNumber":259,"author":{"gitId":"ruilingk"},"content":"        printing +\u003d \"\\n\\n\\tHere are the to-do tasks:\";"},{"lineNumber":260,"author":{"gitId":"ruilingk"},"content":"        for (Task task : todoList) {"},{"lineNumber":261,"author":{"gitId":"ruilingk"},"content":"            printing +\u003d \"\\n\\t\" + todoIndex + \". \" + task;"},{"lineNumber":262,"author":{"gitId":"ruilingk"},"content":"            todoIndex++;"},{"lineNumber":263,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":265,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":266,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":267,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":268,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":269,"author":{"gitId":"ruilingk"},"content":"     * Reminds user of tasks within a specified time frame."},{"lineNumber":270,"author":{"gitId":"ruilingk"},"content":"     * If task is a To-Do task, Pocus will show it too."},{"lineNumber":271,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":272,"author":{"gitId":"ruilingk"},"content":"     * @param numberOfDays Number of days user sets."},{"lineNumber":273,"author":{"gitId":"ruilingk"},"content":"     * @return String representation of tasks within specified time frame."},{"lineNumber":274,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":275,"author":{"gitId":"ruilingk"},"content":"    public String remindUserOfTasksWithin(int numberOfDays) {"},{"lineNumber":276,"author":{"gitId":"ruilingk"},"content":"        String printing \u003d checkTasks(numberOfDays);"},{"lineNumber":277,"author":{"gitId":"ruilingk"},"content":"        assert !printing.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":278,"author":{"gitId":"ruilingk"},"content":"        return printing;"},{"lineNumber":279,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":280}},{"path":"src/main/java/focus/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"/** Represents task with a type of To-Do. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"     * Creates To-Do with user provided description."},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     * @param description Description of To-Do."},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    public ToDo(String description) {"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"     * Converts To-Do to string form to be saved in user\u0027s files."},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"     * @return String format of To-Do task."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public String taskToText() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        return \"T|\" + super.completed + \"|\" + super.taskDescription;"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     * Gets LocalDateTime of To-Do task."},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"     * @return Null since a To-Do task has no deadline."},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"    public LocalDateTime getDeadline() {"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        return null;"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"     * Returns string format of To-Do."},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"     * @return A string representation of To-Do."},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":46}},{"path":"src/main/java/focus/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.ui;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":" * A custom control using FXML."},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":" * This control represents a dialog box consisting of a Circle to be filled by images to"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":" * represent the speaker\u0027s face and a label containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":" */"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    /** Dialog label for text. */"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"    /** Circle for speaker\u0027s images. */"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    private ImageView imageView;"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"     * Constructor for a DialogBox."},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"     * @param text Inputs and responses."},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"     * @param image Speaker\u0027s image."},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"    private DialogBox(String text, Image image) {"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"            String dialogBoxFxml \u003d \"/view/DialogBox.fxml\";"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(dialogBoxFxml));"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"            fxmlLoader.load();"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"            e.printStackTrace();"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        dialog.setText(text);"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"        imageView.setImage(image);"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"    /** Flips the dialog box such that the Circle is on the left and text on the right. */"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"     * Creates a new DialogBox for user."},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"     * @param input User\u0027s input."},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"     * @param image Image of user."},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"     * @return DialogBox for user."},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"    public static DialogBox getUserDialog(String input, Image image) {"},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"        String userTag \u003d \"You:\\n\\t\";"},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"        DialogBox dialogBox \u003d new DialogBox(userTag + input, image);"},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"        dialogBox.dialog.getStyleClass().remove(\"focus\");"},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"        dialogBox.dialog.getStyleClass().add(\"user\");"},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"        return dialogBox;"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"     * Creates a new DialogBox for Pocus."},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"     * @param response Pocus\u0027 response."},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":"     * @param image Image of Pocus."},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"     * @return DialogBox for Pocus."},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"    public static DialogBox getPocusDialog(String response, Image image) {"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":"        String pocusTag \u003d \"Pocus:\\n\";"},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"        DialogBox dialogBox \u003d new DialogBox(pocusTag + response, image);"},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":"        dialogBox.flip();"},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"        return dialogBox;"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"     * Creates a new DialogBox for Pocus (but for error messages)."},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"     * @param response Pocus\u0027 error."},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"     * @param image Image of Pocus."},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"     * @return DialogBox for Pocus\u0027 errors."},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":"    public static DialogBox getErrorDialog(String response, Image image) {"},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":"        String pocusTag \u003d \"Pocus:\\n\";"},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":"        DialogBox dialogBox \u003d new DialogBox(pocusTag + response, image);"},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":"        dialogBox.flip();"},{"lineNumber":98,"author":{"gitId":"ruilingk"},"content":"        dialogBox.dialog.getStyleClass().remove(\"focus\");"},{"lineNumber":99,"author":{"gitId":"ruilingk"},"content":"        dialogBox.dialog.getStyleClass().add(\"error\");"},{"lineNumber":100,"author":{"gitId":"ruilingk"},"content":"        return dialogBox;"},{"lineNumber":101,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":102}},{"path":"src/main/java/focus/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.ui;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.Focus;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import focus.Main;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"import javafx.util.Duration;"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"/** Controller for MainWindow. Provides the layout for the other controls. */"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    /** Scroll pane for conservations. */"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"    /** Dialog container for conversations. */"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"    /** User\u0027s input. */"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"    /** Send button for user. */"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"    private Button sendButton;"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    /** Focus. */"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"    private Focus focus;"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    /** Number of times user has input their name. */"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"    private int numberOfTimes;"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"    /** Image path of User. */"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"    private final String userPath \u003d \"/images/koya.png\";"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"    /** Image path of Pocus. */"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"    private final String pocusPath \u003d \"/images/rj.png\";"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"    /** Gets the image for User. */"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(userPath));"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"    /** Gets the image for Pocus. */"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"    private final Image pocusImage \u003d new Image(this.getClass().getResourceAsStream(pocusPath));"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"    /** Initialises the main window. */"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"    public void initialize() {"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"        if (!Storage.getUserName().equals(\"name\")) { //existing user"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"                    DialogBox.getPocusDialog(UI.addressExistingUser(), pocusImage)"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"            );"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"            numberOfTimes++;"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"        } else { // new user"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"                    DialogBox.getPocusDialog(UI.greetUser(), pocusImage)"},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"            );"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"     * Sets Focus."},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"     * @param focus Focus."},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"    public void setFocus(Focus focus) {"},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"        this.focus \u003d focus;"},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Pocus\u0027 reply,"},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"     * and appends them to the dialog container. Clears the user input after processing."},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"     * If user inputs \"bye\", Focus will close automatically after 5 seconds."},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"    @FXML"},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"    private void handleUserInput() {"},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"        if (Storage.getUserName().equals(\"name\") \u0026\u0026 numberOfTimes \u003d\u003d 0) {"},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"                    DialogBox.getPocusDialog(UI.addressNewUser(input), pocusImage)"},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"            );"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"        if (numberOfTimes !\u003d 0) {"},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":"            assert (numberOfTimes \u003e 0) : \"Number of times user typed should be more than 0 here.\";"},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"            String response \u003d focus.getResponse(input);"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"            if (response.startsWith(\"\\tERROR:\")) {"},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":"                dialogContainer.getChildren().addAll("},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"                        DialogBox.getUserDialog(input, userImage),"},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"                        DialogBox.getErrorDialog(response, pocusImage)"},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"                );"},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"            } else {"},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"                dialogContainer.getChildren().addAll("},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"                        DialogBox.getUserDialog(input, userImage),"},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"                        DialogBox.getPocusDialog(response, pocusImage)"},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":"                );"},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(5));"},{"lineNumber":98,"author":{"gitId":"ruilingk"},"content":"                delay.setOnFinished(event -\u003e Main.getStage().close());"},{"lineNumber":99,"author":{"gitId":"ruilingk"},"content":"                delay.play();"},{"lineNumber":100,"author":{"gitId":"ruilingk"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"ruilingk"},"content":"        numberOfTimes++;"},{"lineNumber":103,"author":{"gitId":"ruilingk"},"content":"        userInput.clear();"},{"lineNumber":104,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":105}},{"path":"src/main/java/focus/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.ui;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"/** Represents the interactions between Pocus and user. */"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"public class UI {"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"     * Greets the user upon entering Focus."},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"     * @return Greetings."},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"    public static String greetUser() {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"        String logo \u003d \"\\t  __\\n\\t\""},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"                    + \"/ _|   ___   ___  _   _  _ __\\n\\t\""},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"                    + \"| |_  / _ \\\\ / __|  | | | | / __|\\n\\t\""},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"                    + \"|  _|| (_) | | (__  | |_| | \\\\__ \\\\  _\\n\\t\""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"                    + \"|_|   \\\\___/ \\\\___| \\\\__,_||___/(_)\\n\\n\";"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"        String greetings \u003d \"\\tWelcome to\\n\" + logo + \"\\t\\\"\\\\(*^O^*) I am Pocus, your personal assistant!\""},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\tBefore we start, may I know your name?\\n\";"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"        assert !greetings.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"        return greetings;"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"     * Addresses the new user with the name provided."},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"     * @param name Name of user."},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"     * @return Addressing of user."},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    public static String addressNewUser(String name) {"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        Storage.setUserName(name);"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"        String address \u003d \"\\tHello there, \" + name + \"! How can I help you today?\\n\""},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"                + \"\\tSince you are a first time user,\\n\""},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"                + \"\\ttype \u0027help\u0027 for the list of commands to get started!\\n\";"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"        assert !address.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"        return address;"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"     * Addresses the existing user."},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"     * @return Addressing of user."},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"    public static String addressExistingUser() {"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"        String address \u003d \"\\t\\\"\\\\(*^O^*) Hello there, \" + Storage.getUserName() + \"!\\n\""},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"                + \"\\tWelcome back! How can I help you today?\\n\""},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"                + \"\\tYou may want to \u0027list\u0027 out your tasks!\";"},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"        assert !address.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        return address;"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"     * Lists out the commands that the user can use."},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"     * @return List of commands."},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":"    public static String listCommands() {"},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":"        String commands \u003d \"\\tHere are the commands you can use:\""},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\tTo add tasks:\""},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- todo \u003ctodo task name\u003e\""},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- deadline \u003cdeadline task name\u003e /by \u003cYYYY-MM-DD HH:mm\u003e\""},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- event \u003cevent task name\u003e /at \u003cYYYY-MM-DD HH:mm\u003e\""},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\tTo delete tasks:\""},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- delete \u003cindex of task\u003e\""},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\tTo mark tasks as done:\""},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- done \u003cindex of task\u003e\""},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\tTo list the tasks on your task list:\""},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- list\""},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\tTo find tasks on your task list:\""},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- find \u003ckeyword\u003e\""},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\tTo have a glossary of upcoming deadlines:\""},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- remind\""},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\tTo edit settings:\""},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- settings /name \u003cnew name\u003e\""},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- settings /days \u003cnew number of days\u003e\""},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\tTo exit Focus:\""},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":"                + \"\\n\\t\\t\\t- bye\\n\";"},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"        assert !commands.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"        return commands;"},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":"     * Exits Focus."},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"     * @return Exit output."},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"    public String exitFocus() {"},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"        String exit \u003d \"\\tHopefully I have helped you today. Byeee! (*^O^*)/\\\"\\n\""},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"                + \"\\tNote: This window close in 5 seconds.\";"},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"        assert !exit.isEmpty() : \"Printing should not blank here.\";"},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"        return exit;"},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":93}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.image.*?\u003e"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"650.0\" stylesheets\u003d\"@../stylesheets/styles.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"      \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" styleClass\u003d\"focus\" text\u003d\"LABEL\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"      \u003c/Label\u003e"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"      \u003cImageView fx:id\u003d\"imageView\" fitHeight\u003d\"135.0\" fitWidth\u003d\"135.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"            \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"   \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"   \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"ruilingk":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"\u003cAnchorPane prefHeight\u003d\"704.0\" prefWidth\u003d\"650.0\" stylesheets\u003d\"@../stylesheets/styles.css\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"focus.ui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"555.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"568.0\" promptText\u003d\"Type here...\" AnchorPane.bottomAnchor\u003d\"0.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"         \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"            \u003cFont name\u003d\"Gill Sans MT\" size\u003d\"16.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"         \u003c/font\u003e\u003c/TextField\u003e"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"568.0\" layoutY\u003d\"661.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"82.0\" text\u003d\"SEND\"\u003e"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"         \u003cfont\u003e"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"661.0\" prefWidth\u003d\"650.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"            \u003ccontent\u003e"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"660.0\" prefWidth\u003d\"634.0\" stylesheets\u003d\"@../stylesheets/styles.css\" /\u003e"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"            \u003c/content\u003e"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"    \u003c/children\u003e"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"ruilingk":26}},{"path":"src/test/java/focus/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"public class AddCommandTest {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"        assertFalse(new AddCommand(\"todo\").isExit());"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        assertFalse(new AddCommand(\"deadline\").isExit());"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"        assertFalse(new AddCommand(\"event\").isExit());"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"    public void testExecuteTodo() {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"todo\");"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"todo\", taskList, storage);"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input an appropriate task description!\\n\""},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"    public void testExecuteDeadline() {"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"deadline\");"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"deadline \", taskList, storage);"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input an appropriate task description!\\n\""},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"deadline\");"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"deadline return book\", taskList, storage);"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":47,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input the appropriate command!\\n\""},{"lineNumber":48,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":49,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"deadline\");"},{"lineNumber":52,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"deadline return book /by \", taskList, storage);"},{"lineNumber":53,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":54,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input the correct date format!\\n\""},{"lineNumber":55,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":56,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"deadline\");"},{"lineNumber":59,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"deadline return book /by 2020-02-28\", taskList, storage);"},{"lineNumber":60,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":61,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input the correct date format!\\n\""},{"lineNumber":62,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":63,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":66,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"ruilingk"},"content":"    public void testExecuteEvent() {"},{"lineNumber":68,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"event\");"},{"lineNumber":70,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"event\", taskList, storage);"},{"lineNumber":71,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":72,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input an appropriate task description!\\n\""},{"lineNumber":73,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":74,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"event\");"},{"lineNumber":77,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"event party \", taskList, storage);"},{"lineNumber":78,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":79,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input the appropriate command!\\n\""},{"lineNumber":80,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":81,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"event\");"},{"lineNumber":84,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"event party /at\", taskList, storage);"},{"lineNumber":85,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":86,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input the correct date format!\\n\""},{"lineNumber":87,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":88,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"ruilingk"},"content":"            AddCommand addCommand \u003d new AddCommand(\"event\");"},{"lineNumber":91,"author":{"gitId":"ruilingk"},"content":"            addCommand.execute(\"event party /at 2020-20-09 1200\", taskList, storage);"},{"lineNumber":92,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":93,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please input the correct date format!\\n\""},{"lineNumber":94,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":95,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":97}},{"path":"src/test/java/focus/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"public class DeleteCommandTest {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final DeleteCommand deleteCommand \u003d new DeleteCommand();"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        assertFalse(deleteCommand.isExit());"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public void testExecute() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            deleteCommand.execute(\"delete \", taskList, storage);"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: There is no such task number.\\n\""},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tPlease enter a valid one!\\n\""},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tType \u0027list\u0027 to view your list of tasks!\", e.getMessage());"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"            deleteCommand.execute(\"delete 0\", taskList, storage);"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: There is no such task number.\\n\""},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tPlease enter a valid one!\\n\""},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tType \u0027list\u0027 to view your list of tasks!\", e.getMessage());"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"            deleteCommand.execute(\"delete 5\", taskList, storage);"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: There is no such task number.\\n\""},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tPlease enter a valid one!\\n\""},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tType \u0027list\u0027 to view your list of tasks!\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":46}},{"path":"src/test/java/focus/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"public class DoneCommandTest {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final DoneCommand doneCommand \u003d new DoneCommand();"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        assertFalse(doneCommand.isExit());"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public void testExecute() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            doneCommand.execute(\"done\", taskList, storage);"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: There is no such task number.\\n\""},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tPlease enter a valid one!\\n\""},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tType \u0027list\u0027 to view your list of tasks!\", e.getMessage());"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"            doneCommand.execute(\"done 0\", taskList, storage);"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: There is no such task number.\\n\""},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tPlease enter a valid one!\\n\""},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tType \u0027list\u0027 to view your list of tasks!\", e.getMessage());"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"            doneCommand.execute(\"done 5\", taskList, storage);"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: There is no such task number.\\n\""},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tPlease enter a valid one!\\n\""},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tType \u0027list\u0027 to view your list of tasks!\", e.getMessage());"},{"lineNumber":44,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":46}},{"path":"src/test/java/focus/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"public class ExitCommandTest {"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    private final ExitCommand exitCommand \u003d new ExitCommand();"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"        assertTrue(exitCommand.isExit());"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":14}},{"path":"src/test/java/focus/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"public class FindCommandTest {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final FindCommand findCommand \u003d new FindCommand();"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        assertFalse(findCommand.isExit());"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public void testExecute() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            findCommand.execute(\"find\", taskList, storage);"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please enter a keyword you wish to find!\", e.getMessage());"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"            findCommand.execute(\"find \", taskList, storage);"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please enter a keyword you wish to find!\", e.getMessage());"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":35}},{"path":"src/test/java/focus/command/HelpCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"public class HelpCommandTest {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final HelpCommand helpCommand \u003d new HelpCommand();"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        assertFalse(helpCommand.isExit());"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public void testExecute() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            helpCommand.execute(\"help me\", taskList, storage);"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Hmm, did you meant the command \u0027help\u0027?\", e.getMessage());"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":30}},{"path":"src/test/java/focus/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"public class ListCommandTest {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final ListCommand listCommand \u003d new ListCommand();"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        assertFalse(listCommand.isExit());"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public void testExecute() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            listCommand.execute(\"blah\", taskList, storage);"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: There are currently no tasks on your list!\\n\""},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tStart adding one now!\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":31}},{"path":"src/test/java/focus/command/RemindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"public class RemindCommandTest {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final RemindCommand remindCommand \u003d new RemindCommand();"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        assertFalse(remindCommand.isExit());"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public void testExecute() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            remindCommand.execute(\"blah\", taskList, storage);"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: There are currently no tasks on your list!\\n\""},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tStart adding one now!\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":31}},{"path":"src/test/java/focus/command/SettingsCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.command;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"public class SettingsCommandTest {"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    private final SettingsCommand settingsCommand \u003d new SettingsCommand();"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"    public void testIsExit() {"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"        assertFalse(settingsCommand.isExit());"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"    public void testExecute() {"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            settingsCommand.execute(\"settings\", taskList, storage);"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Please type in the correct format for settings!\\n\""},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tIf you need an example, type \u0027help\u0027!\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"        String message \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"            message \u003d settingsCommand.execute(\"settings /days 4\", taskList, storage);"},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tThe period of reminders has been changed to: 4 days!\","},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"                    message);"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":38}},{"path":"src/test/java/focus/exception/FocusExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.exception;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"public class FocusExceptionTest {"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    public void testFocusException() {"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"        assertEquals(\"\\tERROR: This is an error.\","},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"                new FocusException(\"This is an error.\").getMessage());"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"        assertEquals(\"\\tERROR: This is also an error.\","},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"                new FocusException(\"This is also an error.\").getMessage());"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":15}},{"path":"src/test/java/focus/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.parser;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import focus.command.AddCommand;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"import focus.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"import focus.command.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"import focus.command.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"import focus.command.HelpCommand;"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"import focus.command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"import focus.exception.FocusException;"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"import focus.task.Deadline;"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"import focus.task.Event;"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"import focus.task.ToDo;"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"public class ParserTest {"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"ruilingk"},"content":"    public void testParse() {"},{"lineNumber":21,"author":{"gitId":"ruilingk"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"            assertEquals(HelpCommand.class, Parser.parse(\"help\").getClass());"},{"lineNumber":23,"author":{"gitId":"ruilingk"},"content":"            assertEquals(AddCommand.class, Parser.parse(\"todo iP\").getClass());"},{"lineNumber":24,"author":{"gitId":"ruilingk"},"content":"            assertEquals(AddCommand.class, Parser.parse(\"deadline tP /by 2020-08-23 23:59\").getClass());"},{"lineNumber":25,"author":{"gitId":"ruilingk"},"content":"            assertEquals(AddCommand.class, Parser.parse(\"event meeting /at 2020-08-25 14:00\").getClass());"},{"lineNumber":26,"author":{"gitId":"ruilingk"},"content":"            assertEquals(DeleteCommand.class, Parser.parse(\"delete 1\").getClass());"},{"lineNumber":27,"author":{"gitId":"ruilingk"},"content":"            assertEquals(DoneCommand.class, Parser.parse(\"done 2\").getClass());"},{"lineNumber":28,"author":{"gitId":"ruilingk"},"content":"            assertEquals(ListCommand.class, Parser.parse(\"list\").getClass());"},{"lineNumber":29,"author":{"gitId":"ruilingk"},"content":"            assertEquals(ExitCommand.class, Parser.parse(\"bye\").getClass());"},{"lineNumber":30,"author":{"gitId":"ruilingk"},"content":"            Parser.parse(\"invalid command\");"},{"lineNumber":31,"author":{"gitId":"ruilingk"},"content":"        } catch (FocusException e) {"},{"lineNumber":32,"author":{"gitId":"ruilingk"},"content":"            assertEquals(\"\\tERROR: Oops! I\u0027m not sure what you meant!\\n\""},{"lineNumber":33,"author":{"gitId":"ruilingk"},"content":"                    + \"\\tPlease try again!\", e.getMessage());"},{"lineNumber":34,"author":{"gitId":"ruilingk"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":37,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"ruilingk"},"content":"    public void testTextToTask() {"},{"lineNumber":39,"author":{"gitId":"ruilingk"},"content":"        assertEquals(ToDo.class, Parser.textToTask(\"T|0|iP\").getClass());"},{"lineNumber":40,"author":{"gitId":"ruilingk"},"content":"        assertEquals(Deadline.class, Parser.textToTask(\"D|1|tP|2020-08-23T23:59\").getClass());"},{"lineNumber":41,"author":{"gitId":"ruilingk"},"content":"        assertEquals(Event.class, Parser.textToTask(\"E|0|meeting|2020-08-25T14:00\").getClass());"},{"lineNumber":42,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":43}},{"path":"src/test/java/focus/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    public void testTaskToText() {"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"        assertEquals(\"D|0|tP|2020-08-23T23:59\", new Deadline(\"tP\","},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"                LocalDateTime.parse(\"2020-08-23T23:59\")).taskToText());"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":15}},{"path":"src/test/java/focus/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    public void testTaskToText() {"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"        assertEquals(\"E|0|meeting|2020-08-25T14:00\", new Event(\"meeting\","},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"                LocalDateTime.parse(\"2020-08-25T14:00\")).taskToText());"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":15}},{"path":"src/test/java/focus/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    public void testGetSize() {"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"        assertEquals(0, taskList.getSize());"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":14}},{"path":"src/test/java/focus/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"package focus.task;"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"    public void testTaskToText() {"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"        assertEquals(\"T|0|iP\", new ToDo(\"iP\").taskToText());"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"}"}],"authorContributionMap":{"ruilingk":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"sampleName"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":"help"},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"list"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"todo borrow book"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"deadline return book /by 2020-08-27 18:00"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"event project meeting /at 2020-09-25 10:00"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"done"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"list"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"find book"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"delete 4"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"help me"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"list"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"find"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"deadline"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"event interview /at 2020-20-20"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"bye"}],"authorContributionMap":{"ruilingk":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"SET MY_PATH\u003dC:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":18,"author":{"gitId":"-"},"content":")"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"ruilingk"},"content":"java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"ruilingk":7,"-":18}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus.Focus.java"},{"lineNumber":2,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\AddCommand.java"},{"lineNumber":3,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\Command.java"},{"lineNumber":4,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\DeleteCommand.java"},{"lineNumber":5,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\DoneCommand.java"},{"lineNumber":6,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\ExitCommand.java"},{"lineNumber":7,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\FindCommand.java"},{"lineNumber":8,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\HelpCommand.java"},{"lineNumber":9,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\InvalidCommand.java"},{"lineNumber":10,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\command\\ListCommand.java"},{"lineNumber":11,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\exception\\DukeException.java"},{"lineNumber":12,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\parser\\Parser.java"},{"lineNumber":13,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\storage\\Storage.java"},{"lineNumber":14,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\task\\Deadline.java"},{"lineNumber":15,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\task\\Event.java"},{"lineNumber":16,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\task\\Task.java"},{"lineNumber":17,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\task\\TaskList.java"},{"lineNumber":18,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\task\\ToDo.java"},{"lineNumber":19,"author":{"gitId":"ruilingk"},"content":"C:\\Users\\Rui Ling\\Desktop\\uni y2s1\\cs2103t\\ip\\src\\main\\java\\focus\\ui\\UI.java"}],"authorContributionMap":{"ruilingk":19}}]
