[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    test {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            srcDirs \u003d [\"test\"]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pooty3"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pooty3"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 37,
      "-": 43
    }
  },
  {
    "path": "data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "D"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "die"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Oct 18 2010 05:30 PM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "E"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "alivve"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Nov 11 2011 09:00 PM"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pooty3": 10
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Welcome to the User Guide for the Duke chatbox!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "### Add a Todo : `todo`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Adds a todo to the list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "syntax: `todo [DESCRIPTION]`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Example: `todo homework1`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "### Add an event : `event`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Adds an event to the list of tasks. Time must be formatted in DD/MM/YYYY HHmm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "syntax: `event [DESCRIPTION] /at [TIME]`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Example: `event lecture /at 20/10/2020 1800`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "### Add an deadline : `deadline`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Adds a deadline to the list of tasks. Time must be formatted in DD/MM/YYYY HHmm"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "syntax: `deadline [DESCRIPTION] /by [TIME]`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Example: `deadline CS2103IP /by 20/10/2020 1800`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "### List all task : `list`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Show all the tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "syntax: `list`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "### Delete a task : `delete`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Delete a task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "syntax: `delete [INDEX]`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Example: `delete 1`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "### Finish a task : `done`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Mark a task as complete"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "syntax: `done [INDEX]`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Example: `done 1`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "### Find a task : `find`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Find a task with the given keyword"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pooty3"
        },
        "content": "syntax: `find [KEYWORD]`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Example: `find homework`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pooty3"
        },
        "content": "### Close the program : `bye`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Close the program and save your data"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pooty3"
        },
        "content": "syntax: `bye`"
      }
    ],
    "authorContributionMap": {
      "pooty3": 49,
      "-": 16
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "T"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "T"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "aaaa"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "D"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "aa"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Oct 10 2020 06:00 PM"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "T"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "fap"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "T"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "123"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pooty3": 17
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 59
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulates the main Duke class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Constructs a new Duke object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            tasks \u003d storage.loadData();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Gets response based on input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return the string containing the response"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            assert(c !\u003d null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            assert(tasks !\u003d null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            assert(storage !\u003d null);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            output \u003d c.execute(tasks, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            output \u003d e.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 53,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 30
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 54
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.EmptyCommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.MissingArgumentException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulates the logic for the parser class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns a command given a command string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param command Command given"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return Given Commmand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @throws DukeException If the command is invalid"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003cString\u003e(Arrays.asList(command.split(\" \")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (tokens.size() \u003d\u003d 0 || tokens.get(0).equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            throw new EmptyCommandException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        assert(tokens.size() \u003e\u003d 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        String cmd \u003d tokens.get(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else if (cmd.equals(\"done\") || cmd.equals(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (tokens.size() \u003c 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"Must provide number after command!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            int ind;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                ind \u003d Integer.parseInt(tokens.get(1)) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new InvalidCommandException(tokens.get(1) + \" is not a number!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            assert(ind \u003e\u003d 0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (cmd.equals(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return new DoneCommand(ind);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                return new DeleteCommand(ind);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else if (tokens.get(0).equals(\"find\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (tokens.size() \u003c 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new MissingArgumentException(\"Must provide keyword after command!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            assert(tokens.size() \u003e\u003d 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return new FindCommand(tokens.get(1));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else if (cmd.equals(\"todo\") || cmd.equals(\"event\") || cmd.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            SimpleDateFormat readformatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            Task toAdd;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (cmd.equals(\"todo\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (tokens.size() \u003c 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"todo cannot be empty!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                toAdd \u003d new ToDo(stringCombiner(tokens, 1, tokens.size()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            } else if (cmd.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                int ind \u003d 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                boolean found \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                while (!found \u0026\u0026 ind \u003c tokens.size() - 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    ind++;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    if (tokens.get(ind).equals(\"/by\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                        found \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (!found) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"Deadline need an /by time!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (ind \u003d\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"Deadline needs a name!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (ind \u003d\u003d tokens.size() - 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"Deadline needs a deadline time!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                Date date;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    date \u003d readformatter.parse(stringCombiner(tokens, ind + 1, tokens.size()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                } catch (Exception ex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new InvalidCommandException(\"Provide a proper date and time!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                toAdd \u003d new Deadline(stringCombiner(tokens, 1, ind), date);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                int ind \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                boolean found \u003d false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                while (!found \u0026\u0026 ind \u003c tokens.size() - 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    ind++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    if (tokens.get(ind).equals(\"/at\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                        found \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (!found) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"Event need an /at time!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (ind \u003d\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"Event needs a name!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                if (ind \u003d\u003d tokens.size() - 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new MissingArgumentException(\"Event needs a event time!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                Date date;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    date \u003d readformatter.parse(stringCombiner(tokens, ind + 1, tokens.size()));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                } catch (Exception ex) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    throw new InvalidCommandException(\"Provide a proper date and time!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                toAdd \u003d new Event(stringCombiner(tokens, 1, ind), date);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return new AddCommand(toAdd);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            throw new InvalidCommandException(\"I do not recognise this command!\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private static String stringCombiner(ArrayList\u003cString\u003e tokens, int start, int end) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        for (int i \u003d start; i \u003c end; i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            str.append(tokens.get(i));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (i !\u003d end - 1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                str.append(\" \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 149
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeFileException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulates the storage class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private static SimpleDateFormat writeformatter \u003d new SimpleDateFormat (\"MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Creates a new storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param filePath Path of the storage file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Writes the data of the TaskList into a file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param taskList TaskList to be written to file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return TaskList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @throws DukeFileException If the file cannot be written to"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public TaskList writeData(TaskList taskList) throws DukeFileException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (taskList !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    str.append(task.toFileString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    str.append(\"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                writer.write(str.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                writer.flush();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                throw new DukeFileException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Loads the TaskList data from a file"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return TaskList that was loaded"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @throws DukeFileException If the file cannot be read from"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public TaskList loadData() throws DukeFileException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    String type \u003d sc.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    String done \u003d sc.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    String desc \u003d sc.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    Task t;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                        t \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                        t \u003d new Event(desc, writeformatter.parse(sc.nextLine()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                        t \u003d new Deadline(desc, writeformatter.parse(sc.nextLine()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    if (done.equals(\"T\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                        t.completeTask();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    sc.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    taskList.addATask(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } catch (IOException | ParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            throw new DukeFileException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pooty3": 92
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulate the TaskList class which deals with the tasks in Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Create a new empty TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Adds a task to the TaskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param t Task to be added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public boolean addATask(Task t) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        boolean duplicate \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (task.getDescription().equals(t.getDescription())) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                duplicate \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (!duplicate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return !duplicate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Removes a task from the TaskList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param ind Index of task to be removed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return Task removed"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @throws DukeException If the index is invalid"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Task removeATask(int ind) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (ind \u003c 0 || ind \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            throw new DukeException(\"Task \" + ind + \" does not exist!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return tasks.remove(ind);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Mark a task as complete"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param ind Index of task to be completed"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return Task completed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @throws DukeException If the index is invalid"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Task completeTask(int ind) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (ind \u003c 0 || ind \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            throw new DukeException(\"Task \" + ind + \" does not exist!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Task t \u003d tasks.get(ind);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        t.completeTask();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns the number of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return Number of tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns a string that represents all the tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String that represent all the tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String printTasks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"Here are the tasks in your list:\\n\" + printOutTasks(tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns a string that represents all the tasks that fulfills the keyword"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param keyword Keyword"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String that represents all the tasks that satisfies the keyword"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String printTasksWithKeyword(String keyword) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (t.satisfyKeyword(keyword)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"Here are the matching tasks in your list: \\n\" + printOutTasks(tasks);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private String printOutTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            str.append(String.format(\"%d.%s\", ++i, task));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (i !\u003d tasks.size()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                str.append(\"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns the ArrayList of tasks"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 118
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Task taskToAdd;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Constructs a new add task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param task given task to be added"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.taskToAdd \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        if (tasks.addATask(this.taskToAdd)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            storage.writeData(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            StringBuilder str \u003d new StringBuilder(\"Added new task:\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            str.append(taskToAdd.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            str.append(\"\\nYou now have \" + tasks.getNumberOfTasks() + \" tasks!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return str.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            return \"You cannot add duplicate tasks!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 30
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulates the command class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns false on exit"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return False"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param tasks Task given"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param storage Storage given"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @throws DukeException If the task cannot be executed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private int deleteIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public DeleteCommand(int taskDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.deleteIndex \u003d taskDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Task task \u003d tasks.removeATask(deleteIndex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        storage.writeData(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        StringBuilder str \u003d new StringBuilder(\"I have removed this task\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        str.append(task.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        str.append(\"\\nYou now have \" + tasks.getNumberOfTasks() + \" tasks left!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private int taskDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public DoneCommand(int taskDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.taskDone \u003d taskDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Task task \u003d tasks.completeTask(taskDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        storage.writeData(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"Bye!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 21
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private String word;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public FindCommand(String word) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return tasks.printTasksWithKeyword(word);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 19
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return tasks.printTasks();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"Error! \" + error;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class DukeFileException extends DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public DukeFileException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(\"File has errors!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pooty3": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class EmptyCommandException extends DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public EmptyCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(\"Command is empty!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public InvalidCommandException(String str) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(\"Invalid Command! \" + str);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class MissingArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public MissingArgumentException(String str) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(\"Missing Argument: \" + str);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulate the deadline class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Creates a new deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param desc Description of the deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param time Time of the deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Deadline(String desc, Date time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        formatter \u003d new SimpleDateFormat (\"MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns string representation of the deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String representation"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), formatter.format(time));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns string to be saved"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String to be saved"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"D\\n\" + super.toFileString() + formatter.format(time) + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulate the event class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    private SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Creates an event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param desc Description of the event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param time Time of the event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Event(String desc, Date time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        formatter \u003d new SimpleDateFormat (\"MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns the string representation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String representation"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), formatter.format(time));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns the string to be saved"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String to be saved"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"E\\n\" + super.toFileString() + formatter.format(time) + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulate the task class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    protected boolean done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Creates a new task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns task description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return Description of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Marks the task as complete"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Checks if the task satisfies the given keyword"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param keyword Keyword Given"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return True if task satisfies keyword"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public boolean satisfyKeyword(String keyword) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        String[] tokens \u003d description.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        for (int i \u003d 0; i \u003c tokens.length \u0026\u0026 !found; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            if (tokens[i].equalsIgnoreCase(keyword)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns the string representation of the task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String representation of the task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return (this.done ? \"[✓]\" : \"[✘]\") + \" \" + this.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns the string to be saved in a file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String to be saved"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        str.append(this.done ? \"T\" : \"F\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        str.append(\"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        str.append(this.description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        str.append(\"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 72
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": " * Encapsulates the todo class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Creates a new todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @param desc Description given"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns the string representation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String representation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * Returns the string to be saved"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     * @return String to be saved"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        return \"T\\n\" + super.toFileString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 33
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "pooty3": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"27.0\" prefHeight\u003d\"531.0\" prefWidth\u003d\"400.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"492.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "      \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"34.0\" prefWidth\u003d\"400.0\" text\u003d\"Welcome to Duke!\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "pooty3": 21
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "T"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "T"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "123"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "D"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "die"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Dec 23 2020 07:00 PM"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "E"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "fullin"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "Oct 10 2015 08:00 PM"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "T"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "bab"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "T"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "F"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "die"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pooty3": 22
    }
  },
  {
    "path": "test/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            assertEquals(\"[D][✘] do (by: Sep 10 2012 07:00 PM)\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    new Deadline(\"do\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                            new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"10/09/2012 1900\")).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    void toFileString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            assertEquals(\"D\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                            + \"F\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                            + \"do\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                            + \"Sep 10 2012 07:00 PM\\n\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                    new Deadline(\"do\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                            new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"10/09/2012 1900\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "                            .toFileString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pooty3"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 38
    }
  },
  {
    "path": "test/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        assertEquals(\"do\", new Task(\"do\").getDescription());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    void completeTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Task t \u003d new Task(\"do\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        t.completeTask();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        assertEquals(true, t.done);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Task t \u003d new Task(\"do\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        assertEquals(\"[✘] do\", t.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    void toFileString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        Task t \u003d new Task(\"do\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        assertEquals(\"F\\ndo\\n\", t.toFileString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 34
    }
  },
  {
    "path": "test/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        assertEquals(\"[T][✘] do\", new ToDo(\"do\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    void toFileString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "        assertEquals(\"T\\nF\\ndo\\n\", new ToDo(\"do\").toFileString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pooty3": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pooty3"
        },
        "content": "tttt"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "todo 123"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event help /at asd"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline uuu /by jjj"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pooty3"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pooty3"
        },
        "content": "done -5"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pooty3"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pooty3"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event help2 /at asd2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline uuu2 /by jjj2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event help2 /at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pooty3"
        },
        "content": "event 2223"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "deadline 11"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pooty3"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pooty3"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pooty3"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pooty3"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pooty3": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pooty3"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "pooty3": 1,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pooty3"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pooty3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pooty3"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "pooty3": 3,
      "-": 36
    }
  }
]
