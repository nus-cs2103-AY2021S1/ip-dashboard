[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //System.out.println(by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Deadline(String description, String by, boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String inputStyle() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"deadline \" + super.inputStyle() + \" /by\" + by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void doneTask(ArrayList\u003cTask\u003e store, int num) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        store.get(num-1).markAsDone();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Nice! This task is marked as done!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(store.get(num-1));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException, FileNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String file2 \u003d \"dataa\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            ReadFile.updateContents(file2, store);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(new DukeException(\"file not found\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Hello! I\u0027m meimei ^_^\\nI could scream at you all day!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        while(!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String key \u003d command.split(\" \",2)[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (key.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    System.out.println((i+1) + \".\" + store.get(i).toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            else if (key.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//                int k \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//                store.get(k-1).markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//                System.out.println(\"Nice! This task is marked as done!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//                System.out.println(store.get(k-1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                doneTask(store, Integer.parseInt(command.split(\" \")[1]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            else if (key.equals(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                int k \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                Task remov \u003d store.get(k-1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.remove(remov);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                System.out.println(\"Meimei will forget about this task!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                System.out.println(remov);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            //adding of task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    Task.addTask(command, store, true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    if (key.equals(\"todo\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                        System.out.println(new DukeException(\"todo\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    else if (key.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                        System.out.println(new DukeException(\"deadline\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    else if (key.equals(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                        System.out.println(new DukeException(\"event\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                        System.out.println(\"Oops! Meimei does not understand this command\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (store.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            WriteFile.writeToFile(file2, \"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    WriteFile.writeToFile(file2, store.get(i).inputStyle());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    WriteFile.appendToFile(file2, System.lineSeparator() + store.get(i).inputStyle());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Bye. Meimei will miss you!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "jiaax": 84
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//    public DukeException(String msg, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//        super(msg, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //super(cause);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (msg.equals(\"file not found\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return \"no databse found! pls try again ^__^\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return \"☹ OOPS!!! The description of a \" + msg + \" cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 21
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Event(String description, String at, boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String inputStyle() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"event \" + super.inputStyle() + \" /at\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 27
    }
  },
  {
    "path": "src/main/java/ReadFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class ReadFile {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    static void printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    static void updateContents(String filePath, ArrayList\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Task.addTaskFromFile(s.nextLine(), list, false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            printFileContents(\"data\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            LocalDate k \u003d LocalDate.parse(\"2019-12-01\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(k.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 33
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.description \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Task(String name, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         this.description \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         this.done \u003d done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void addTask(String task, ArrayList\u003cTask\u003e store, boolean print) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String type \u003d task.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String title \u003d task.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //System.out.println(title);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            store.add(new Todo(title));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String description \u003d title.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String by \u003d title.split(\"/by \", 2)[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(newTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String at \u003d title.split(\"/at \", 2)[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (print) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + store.get(store.size() - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void addTaskFromFile(String task, ArrayList\u003cTask\u003e store, boolean print) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String type \u003d task.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String remain \u003d task.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String done \u003d remain.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String title \u003d remain.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //System.out.println(title);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            store.add(new Todo(title, Boolean.valueOf(done)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String description \u003d title.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String by \u003d title.split(\"/by\", 2)[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                newTask \u003d new Deadline(description, by, Boolean.valueOf(done));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(newTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String at \u003d title.split(\"/at\", 2)[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                newTask \u003d new Event(description, at, Boolean.valueOf(done));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(newTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (print) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + store.get(store.size() - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String inputStyle() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         return this.done + \" \" +description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         return done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         this.done \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 86
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Todo(String description, Boolean done) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String inputStyle() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"todo \" + super.inputStyle() ;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 19
    }
  },
  {
    "path": "src/main/java/WriteFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class WriteFile {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String file2 \u003d \"/Users/ngjiaxin/Desktop/AY2021/CS2103T/Week 2/data\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            writeToFile(file2, \"first line\" + System.lineSeparator() + \"second line\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 26
    }
  }
]
