[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.command.CommandParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            TaskList taskList \u003d TaskList.initialiseTaskList(storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            CommandParser parser \u003d new CommandParser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            Ui.welcomeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            boolean isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            while(!isExit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    String userCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    Command parsedCommand \u003d parser.parseCommand(userCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    parsedCommand.execute(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    isExit \u003d parsedCommand.isExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    Ui.errorMessage(e.getUiMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            Ui.errorMessage(e.getUiMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 30,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.StorageException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private final String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private File storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.storage \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public ArrayList\u003cString\u003e readTaskStorage() throws StorageException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        ArrayList\u003cString\u003e existingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            if(this.storage.exists()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                // Load into taskList if file is not empty"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                Scanner s \u003d new Scanner(this.storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                if (this.storage.length() !\u003d 0){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    while (s.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        existingTasks.add(s.nextLine());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                this.storage.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                this.storage.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            if(!this.storage.exists()){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new StorageException(\"Oh noes! I can\u0027t seem to find the tasks you saved previously ;A;\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return existingTasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void appendTaskStorage(String taskString) throws StorageException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            FileWriter appender \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            appender.write(taskString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            appender.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new StorageException(\"Oh noes! I can\u0027t seem to save this task ;A;\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void writeTaskStorage(String taskString) throws StorageException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            FileWriter rewriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            rewriter.write(taskString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            rewriter.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new StorageException(\"Oh noes! I can\u0027t seem to modify the tasks you saved previously ;A;\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 64
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static void welcomeMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        String catLogo \u003d \"        /\\\\_____/\\\\\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"       /  o   o  \\\\\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"      ( \u003d\u003d  ^  \u003d\u003d )\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"       )         (\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"      (           )\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"     ( (  )   (  ) )\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"    (__(__)___(__)__)\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(catLogo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m NEKOBOT!!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    What can I do for you :\u003e\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static void goodbyeMessage(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Bye~ Hope to see you again soon ;w;\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static void listMessage(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list!!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        for(Task task: taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    \" + index + \". \" + task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static void todayMessage(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        // TODO: refactor to filter in duke.task.TaskList class"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    Here are today\u0027s tasks!!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        for(Task task: taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            if(task.isToday()){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                System.out.println(\"    \" + index + \". \" + task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static void addTaskMessage(Task task, int size){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Okies! I\u0027ve added this task~\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Now you have \" + size + \" tasks in the list uwu\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static void doneTaskMessage(Task task){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Yay! I\u0027ve marked this task as done :3\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static void deleteTaskMessage(Task task, int size) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Got it! I\u0027ll remove this task :\u003e\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Only \" + size + \" tasks left!!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static void errorMessage(String UiMessage){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    \" + UiMessage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 83
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.StorageException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private LocalDate taskDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public AddTaskCommand(TaskType type, String name){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public AddTaskCommand(TaskType type, String name, LocalDate date){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskDate \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void execute(TaskList list) throws StorageException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        switch(this.type){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            list.addTask(this.taskName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            list.addTask(this.type, this.taskName, this.taskDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 36
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public abstract void execute(TaskList list) throws DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 12
    }
  },
  {
    "path": "src/main/java/duke/command/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.DateParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.IncompleteTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Command parseCommand(String command) throws UnknownCommandException, DateParseException,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            IncompleteTaskException, InvalidTaskException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        if(command.equals(\"bye\")){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } else if(command.equals(\"list\")){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } else if (command.equals(\"today\")){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            return new TodayCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            return parseDoneCommand(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            return parseDeleteCommand(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } else if (validAddTaskCommand(command)){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            return parseAddTaskCommand(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new UnknownCommandException(\"Oh noes! I\u0027m not sure what that means ;A;\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private boolean validAddTaskCommand(String command){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return command.split(\" \")[0].equals(\"todo\") || command.split(\" \")[0].equals(\"deadline\") ||"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                command.split(\" \")[0].equals(\"event\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private DoneCommand parseDoneCommand(String command) throws InvalidTaskException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        if (command.length() \u003c 5) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"Oh noes! I don\u0027t think you specified a valid task index :\u003c\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            int index \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"Oh noes! I don\u0027t think you specified a valid task index :\u003c\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private DeleteCommand parseDeleteCommand(String command) throws InvalidTaskException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        if (command.length() \u003c 7) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"Oh noes! I don\u0027t think you specified a valid task index :\u003c\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            int index \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"Oh noes! I don\u0027t think you specified a valid task index :\u003c\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private AddTaskCommand parseAddTaskCommand(String command) throws IncompleteTaskException,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            UnknownCommandException, DateParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            String typeOfTask \u003d command.split(\" \")[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            switch (typeOfTask) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    if (command.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        throw new IncompleteTaskException(\"Oh dear! Your task description seems to be incomplete :\u003c\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    return new AddTaskCommand(TaskType.TODO, command.substring(5));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    if (!command.contains(\"/at\") || (command.indexOf(\"event \") + 6 \u003e command.indexOf(\" /at\"))) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        throw new IncompleteTaskException(\"Oh dear! Your task description seems to be incomplete :\u003c\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    String eventName \u003d command.substring(command.indexOf(\"event \") + 6, command.indexOf(\" /at\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    String eventDate \u003d command.substring(command.indexOf(\"/at \") + 4);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    return new AddTaskCommand(TaskType.EVENT, eventName, LocalDate.parse(eventDate));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    if (!command.contains(\"/by\") || (command.indexOf(\"deadline \") + 9 \u003e command.indexOf(\" /by\"))) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        throw new IncompleteTaskException(\"Oh dear! Your task description seems to be incomplete :\u003c\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    String deadlineName \u003d command.substring(command.indexOf(\"deadline \") + 9, command.indexOf(\" /by\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    String deadlineDate \u003d command.substring(command.indexOf(\"/by \") + 4);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    return new AddTaskCommand(TaskType.DEADLINE, deadlineName, LocalDate.parse(deadlineDate));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new UnknownCommandException(\"Oh noes! I\u0027m not sure what that means ;A;\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new DateParseException(\"Oops! Please make sure your date is of YYYY-MM-DD format ;A;\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 93
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public DeleteCommand(int index){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void execute(TaskList list) throws InvalidTaskException, StorageException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        list.deleteTask(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 19
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.StorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void execute(TaskList list) throws InvalidTaskException, StorageException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        list.completeTask(this.taskIndex);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void execute(TaskList list){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Ui.goodbyeMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 15
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void execute(TaskList list) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        list.printTasks();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 10
    }
  },
  {
    "path": "src/main/java/duke/command/TodayCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class TodayCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void execute(TaskList list) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        list.printTasksToday();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DateParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class DateParseException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public DateParseException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private String UiMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.UiMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String getUiMessage(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return this.UiMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/IncompleteTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class IncompleteTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public IncompleteTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public InvalidTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class StorageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public StorageException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public UnknownCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected Deadline(String name, boolean isCompleted, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static Deadline newDeadline(String name, LocalDate date){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return new Deadline(name, false, date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static Deadline existingDeadline(String name, boolean isCompleted, LocalDate date){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return new Deadline(name, isCompleted, date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public boolean isToday(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return this.date.isEqual(LocalDate.now());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \", \" + date.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.getDefault()) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"D\" + \" | \" + super.toSaveString() + \" | \" + this.date + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Event(String name, boolean isCompleted, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static Event newEvent(String name, LocalDate date){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return new Event(name, false, date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static Event existingEvent(String name, boolean isCompleted, LocalDate date){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return new Event(name, isCompleted, date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public boolean isToday(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return this.date.isEqual(LocalDate.now());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                date.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.getDefault()) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"E\" + \" | \" + super.toSaveString() + \" | \" + this.date + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected Task(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static Task newTask(String name){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return new Task(name, false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static Task existingTask(String name, boolean isCompleted){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return new Task(name, isCompleted);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Task markAsDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return (isCompleted ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public boolean isToday(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.taskName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return (this.isCompleted ? \"1\" : \"0\") + \" | \" + this.taskName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 40
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.DateParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import duke.exception.StorageException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private TaskList(Storage storage){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static TaskList initialiseTaskList(Storage storage) throws StorageException, DateParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        TaskList newTaskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            storage.readTaskStorage().forEach(taskString -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                String[] t \u003d taskString.split(\" [|] \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                // Tasks are stored in the format: type | isCompleted | taskName | date"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                switch (t[0]){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        newTaskList.taskList.add(Todo.existingTodo(t[2], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        newTaskList.taskList.add(Deadline.existingDeadline(t[2], t[1].equals(\"1\"), LocalDate.parse(t[3])));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        newTaskList.taskList.add(Event.existingEvent(t[2], t[1].equals(\"1\"), LocalDate.parse(t[3])));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new DateParseException(\"Oops! Please make sure your date is of YYYY-MM-DD format ;A;\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return newTaskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void printTasks(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Ui.listMessage(this.taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void printTasksToday(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Ui.todayMessage(this.taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void addTask(String taskName) throws StorageException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Todo newTodo \u003d Todo.newTodo(taskName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskList.add(newTodo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Ui.addTaskMessage(newTodo, this.taskList.size());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        appendTask(newTodo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void addTask(TaskType type, String taskName, LocalDate taskDate) throws StorageException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        switch(type){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                Event newEvent \u003d Event.newEvent(taskName, taskDate);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                this.taskList.add(newEvent);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                Ui.addTaskMessage(newEvent, this.taskList.size());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                appendTask(newEvent);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                Deadline newDeadline \u003d Deadline.newDeadline(taskName, taskDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                this.taskList.add(newDeadline);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                Ui.addTaskMessage(newDeadline, this.taskList.size());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                appendTask(newDeadline);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void completeTask(int index) throws InvalidTaskException, StorageException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        if(index \u003e this.taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"Oh noes! I don\u0027t think you specified a valid task index :\u003c\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Task task \u003d this.taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Ui.doneTaskMessage(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void deleteTask(int index) throws InvalidTaskException, StorageException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        if(index \u003e this.taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"Oh noes! I don\u0027t think you specified a valid task index :\u003c\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Task task \u003d this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Ui.deleteTaskMessage(task, this.taskList.size());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private void appendTask(Task t) throws StorageException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.storage.appendTaskStorage(t.toSaveString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private void saveTasks() throws StorageException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        StringBuilder saveString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        for(Task task : this.taskList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            saveString.append(task.toSaveString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.storage.writeTaskStorage(saveString.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 113
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    TODO, EVENT, DEADLINE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected Todo(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static Todo newTodo(String name){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return new Todo(name, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public static Todo existingTodo(String name, boolean isCompleted){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return new Todo(name, isCompleted);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"T\" + \" | \" + super.toSaveString() + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 23
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "T | 1 | homework"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "hewwo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "todo exercise"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "deadline /by 2019-08-10"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "deadline finish nekobot /by today"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "deadline finish nekobot /by 2019-08-20"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "event /at 2020-09-10"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "event sleep /at tonight"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "event sleep /at 2020-08-17"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "delete 9"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/*/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "# Reset data/tasks.txt file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "printf \"T | 1 | homework\\n\" \u003e data/tasks.txt"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 7,
      "-": 36
    }
  }
]
