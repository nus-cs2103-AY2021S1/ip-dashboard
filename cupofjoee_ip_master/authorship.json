[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"tasks.withType(JavaCompile) {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"    options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"    systemProperty \"file.encoding\", \"utf-8\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"cupofjoee":19,"-":46}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"Duke is a **desktop app for managing tasks, optimized**"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"**use via a Command Line Inteface** (CLI). If you can type"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"fast, Duke can get your tasks management done faster than"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"common GUI apps."},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"## Quick start"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":" "},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"1. Ensure you have `Java 11` or above installed in your computer."},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"2. Download the latest `duke.jar` from [here](https://drive.google.com/uc?export\u003ddownload\u0026id\u003d1WGEDItVpHP4xJtJcWQU993ZyFB7ZHvLI)."},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"3. Copy the file to the folder you want to use as the home"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"folder for your Duke"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"4. Double-click the file to start the app."},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"5. Type command in the command box and press `Enter` to execute it."},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"    - `help` : shows all available commands with usage and format."},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"    - `todo Laundy` : add `Laundry` to list of tasks."},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"    - `deadline Get GF /by 23 Dec 2023` : add `Get GF` by `23 Dec 2023` to list of tasks."},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    - `event Exam /at 22 Sept` : add `Exam` at `22 Sept`."},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"    - `list` : show all existing tasks."},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"    - `find GF` : show all tasks that contains `GF`."},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    - `done 1` : mark the 1st task in the list as done."},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    - `delete 2` : delete the 2nd task in the list."},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"    - `bye` : exit Duke."},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"6. Refer to the Features below for details of each command"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"### Viewing help: `help`"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"Shows a message explaining the available commands - format and usage."},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"### Adding a todo: `todo`"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"Adds a todo task to the list of tasks.\\"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"Format: `todo \u003cdesc\u003e`"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"- `\u003cdesc\u003e` is the description."},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"Examples:"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"- `todo cook dinner` Adds a todo task with description: `cook dinner`."},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"### Adding a deadline: `deadline`"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"Adds a deadline to the list of tasks.\\"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"Format: `deadline \u003cdesc\u003e /by \u003cby\u003e`"},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":"- `\u003cdesc\u003e` is the description"},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"- `\u003cby\u003e` is the due by"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":"Examples:"},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"- `deadline CS2103 iP /by 15 sep 2020` Adds a deadline with description: `CS2103 iP` that is due by: `15 Sep 2020`."},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"### Adding an event: `event`"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"Adds an event to the list of tasks.\\"},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"Format: `event \u003cdesc\u003e /at \u003cat\u003e`"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"- `\u003cdesc\u003e` is the description"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"- `\u003cat\u003e` is the time of the event"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"Examples:"},{"lineNumber":57,"author":{"gitId":"cupofjoee"},"content":"- `event CS2100 Exam /at 22 sep 2020` Adds an event with description: `CS2100 Exam` that is happening on: `22 Sep 2020`"},{"lineNumber":58,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":59,"author":{"gitId":"cupofjoee"},"content":"### List out all tasks: `list`"},{"lineNumber":60,"author":{"gitId":"cupofjoee"},"content":"Shows a list of all tasks."},{"lineNumber":61,"author":{"gitId":"cupofjoee"},"content":"Format: `list`"},{"lineNumber":62,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":63,"author":{"gitId":"cupofjoee"},"content":"### Find tasks using keywords: `find`"},{"lineNumber":64,"author":{"gitId":"cupofjoee"},"content":"Shows a list of tasks that contains the `searchword` in the task description."},{"lineNumber":65,"author":{"gitId":"cupofjoee"},"content":"Format: `find \u003csearchword\u003e`"},{"lineNumber":66,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":67,"author":{"gitId":"cupofjoee"},"content":"Examples:"},{"lineNumber":68,"author":{"gitId":"cupofjoee"},"content":"- `find CS2103` Shows a list of tasks that contains `CS2103` in the task description."},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"cupofjoee"},"content":"### Mark a task as done: `done`"},{"lineNumber":71,"author":{"gitId":"cupofjoee"},"content":"Mark a task with `taskId` as done."},{"lineNumber":72,"author":{"gitId":"cupofjoee"},"content":"Format: `done \u003ctaskId\u003e`"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"cupofjoee"},"content":"Examples:"},{"lineNumber":75,"author":{"gitId":"cupofjoee"},"content":"- `done 1` Marks the 1st task in the list as done."},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"cupofjoee"},"content":"### Delete a task: `delete`"},{"lineNumber":78,"author":{"gitId":"cupofjoee"},"content":"Delete a task with `taskId`."},{"lineNumber":79,"author":{"gitId":"cupofjoee"},"content":"Format: `delete \u003ctaskId\u003e`"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"cupofjoee"},"content":"Examples:"},{"lineNumber":82,"author":{"gitId":"cupofjoee"},"content":"- `delete 1` Deletes the 1st task in the list."},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"cupofjoee"},"content":"## FAQ"},{"lineNumber":85,"author":{"gitId":"cupofjoee"},"content":"**Q**: How do I transfer my data to another Computer?\\"},{"lineNumber":86,"author":{"gitId":"cupofjoee"},"content":"**A**: Move the **data folder** to the **home folder of Duke** in the other Computer."},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"cupofjoee"},"content":"## Command Summary"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"cupofjoee"},"content":"| Action           | Format, Examples                                                           |"},{"lineNumber":91,"author":{"gitId":"cupofjoee"},"content":"|------------------|----------------------------------------------------------------------------|"},{"lineNumber":92,"author":{"gitId":"cupofjoee"},"content":"| **Add Todo**     | `todo \u003cdesc\u003e` \u003cbr\u003e e.g., `todo cook dinner`                                |"},{"lineNumber":93,"author":{"gitId":"cupofjoee"},"content":"| **Add Deadline** | `deadline \u003cdesc\u003e /by \u003cby\u003e` \u003cbr\u003e e.g., `deadline CS2103 iP /by 15 sep 2020` |"},{"lineNumber":94,"author":{"gitId":"cupofjoee"},"content":"| **Add Event**    | `event \u003cdesc\u003e /at \u003cat\u003e` \u003cbr\u003e  e.g., `event CS2100 Exam /at 22 sep 2020`    |"},{"lineNumber":95,"author":{"gitId":"cupofjoee"},"content":"| **Done**         | `done \u003ctaskId\u003e` \u003cbr\u003e e.g., `done 1`                                        |"},{"lineNumber":96,"author":{"gitId":"cupofjoee"},"content":"| **Delete**       | `delete \u003ctaskId\u003e` \u003cbr\u003e e.g., `delete 1`                                    |"},{"lineNumber":97,"author":{"gitId":"cupofjoee"},"content":"| **Find**         | `find \u003csearchword\u003e` \u003cbr\u003e e.g., `find CS2103`                               |"},{"lineNumber":98,"author":{"gitId":"cupofjoee"},"content":"| **List**         | `list`                                                                     |"},{"lineNumber":99,"author":{"gitId":"cupofjoee"},"content":"| **Help**         | `help`                                                                     |"}],"authorContributionMap":{"cupofjoee":88,"-":11}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import javafx.geometry.Pos;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.Node;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"import java.util.Collections;"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"public class DialogBox extends HBox {"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    private Label dialog;"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"    private ImageView displayPicture;"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"            fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        dialog.setText(text);"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        displayPicture.setImage(img);"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"    private void flip() {"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"        Collections.reverse(tmp);"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"        return new DialogBox(text, img);"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"        db.flip();"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"        return db;"},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":" * Represents the task manager program."},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"    protected TaskList taskList \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"    protected Ui ui \u003d new Ui(taskList);"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"     * Gets string response from Duke."},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"     * Duke takes in console input as a command and will execute"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"     * and return the appropriate output."},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    String getResponse(String input) {"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"        String reply;"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"            reply  \u003d c.execute(taskList, ui, input);"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"        } catch (DukeException e) {"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"            reply \u003d e.toString();"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"        return \"Duck: \" + reply;"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"}"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":""}],"authorContributionMap":{"cupofjoee":30}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":" * Represent the launcher for Duke\u0027s GUI"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":" * Initializes Duke and GUI"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"            fxmlLoader.setRoot(new MainWindow());"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"            stage.setTitle(\"Duck\");"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"            stage.getIcons().add(new Image(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":" * MainWindow controls Duke\u0027s GUI"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"    final String EXIT \u003d \"bye\";"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"    private Duke duke;"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"        if (input.equals(EXIT)) {"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"            System.exit(0);"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"        userInput.clear();"},{"lineNumber":57,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.command.HelpCommand;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.command.ListCommand;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.command.QuitCommand;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import duke.command.TodoCommand;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"import duke.command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"import duke.command.FindCommand;"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"import java.util.Arrays;"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"import java.util.stream.IntStream;"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":" * The Parser is a utility class that is used to parse and process"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":" * String input."},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"public class Parser {"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"     * Returns an executable Command class based on the input."},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"     * If the input does not match any of the default commands,"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"     * it will throw InvalidCommandException."},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"     * @param input command given by the user through console."},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"     * @return executable Command class."},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"     * @throws InvalidCommandException"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"    public static Command parse(String input) throws InvalidCommandException {"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"        String[] splitted \u003d input.split(\"\\\\s+\");"},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"        String command \u003d splitted[0];"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        if (command.equals(\"help\")) {"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"            return new HelpCommand();"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"        } else if (command.equals(\"bye\")) {"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"            return new QuitCommand();"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"        } else if (command.equals(\"list\")) {"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"            return new ListCommand();"},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":"        } else if (command.equals(\"done\")) {"},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"            return new DoneCommand();"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":"        } else if (command.equals(\"delete\")) {"},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":"            return new DeleteCommand();"},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"        } else if (command.equals(\"todo\")) {"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":"            return new TodoCommand();"},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"        } else if (command.equals(\"deadline\")) {"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"            return  new DeadlineCommand();"},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"        } else if (command.equals(\"event\")) {"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"            return new EventCommand();"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"        } else if (command.equals(\"find\")) {"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":"            return new FindCommand();"},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"cupofjoee"},"content":"            throw new InvalidCommandException();"},{"lineNumber":58,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":61,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"cupofjoee"},"content":"     * Captures and returns the index of a task specified by the user input."},{"lineNumber":63,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"cupofjoee"},"content":"     * @param input command given by the user through console."},{"lineNumber":65,"author":{"gitId":"cupofjoee"},"content":"     * @return taskId."},{"lineNumber":66,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"cupofjoee"},"content":"    public static int parseTaskId(String input) {"},{"lineNumber":68,"author":{"gitId":"cupofjoee"},"content":"        String rawNum \u003d input.replaceAll(\"[^0-9]\", \"\");"},{"lineNumber":69,"author":{"gitId":"cupofjoee"},"content":"        assert !rawNum.equals(\"\") : \"Missing Task ID\";"},{"lineNumber":70,"author":{"gitId":"cupofjoee"},"content":"        int taskId \u003d Integer.parseInt(rawNum) - 1;"},{"lineNumber":71,"author":{"gitId":"cupofjoee"},"content":"        return taskId;"},{"lineNumber":72,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":74,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"cupofjoee"},"content":"     * Captures and returns the description of todo task from the user input."},{"lineNumber":76,"author":{"gitId":"cupofjoee"},"content":"     * @param input command given by the user through console."},{"lineNumber":77,"author":{"gitId":"cupofjoee"},"content":"     * @return description of the todo task."},{"lineNumber":78,"author":{"gitId":"cupofjoee"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":79,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"cupofjoee"},"content":"    public static String parseTodo(String input) throws EmptyDescriptionException {"},{"lineNumber":81,"author":{"gitId":"cupofjoee"},"content":"        String[] splitted \u003d input.split(\"\\\\s+\");"},{"lineNumber":82,"author":{"gitId":"cupofjoee"},"content":"        if (splitted.length \u003d\u003d 1) throw new EmptyDescriptionException(\"ToDo\");"},{"lineNumber":83,"author":{"gitId":"cupofjoee"},"content":"        String[] title \u003d Arrays.copyOfRange(splitted, 1, splitted.length);"},{"lineNumber":84,"author":{"gitId":"cupofjoee"},"content":"        return String.join(\" \", title);"},{"lineNumber":85,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":87,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"cupofjoee"},"content":"     * Captures and returns the description and deadline of"},{"lineNumber":89,"author":{"gitId":"cupofjoee"},"content":"     * deadline task from the user input."},{"lineNumber":90,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"cupofjoee"},"content":"     * @param input command given by the user through console."},{"lineNumber":92,"author":{"gitId":"cupofjoee"},"content":"     * @return description and deadline of the deadline task."},{"lineNumber":93,"author":{"gitId":"cupofjoee"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":94,"author":{"gitId":"cupofjoee"},"content":"     * @throws InvalidFormatException"},{"lineNumber":95,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"cupofjoee"},"content":"    public static String[] parseDeadline(String input) throws EmptyDescriptionException, InvalidFormatException {"},{"lineNumber":97,"author":{"gitId":"cupofjoee"},"content":"        String[] splitted \u003d input.split(\"\\\\s+\");"},{"lineNumber":98,"author":{"gitId":"cupofjoee"},"content":"        if (splitted.length \u003d\u003d 1) {"},{"lineNumber":99,"author":{"gitId":"cupofjoee"},"content":"            throw new EmptyDescriptionException(\"Deadline\");"},{"lineNumber":100,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":102,"author":{"gitId":"cupofjoee"},"content":"        int separator \u003d getIndex(splitted, \"/by\");"},{"lineNumber":103,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":104,"author":{"gitId":"cupofjoee"},"content":"        if (separator \u003d\u003d -1) {"},{"lineNumber":105,"author":{"gitId":"cupofjoee"},"content":"            throw new InvalidFormatException(\"/by parameter\");"},{"lineNumber":106,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":108,"author":{"gitId":"cupofjoee"},"content":"        String[] titles \u003d Arrays.copyOfRange(splitted, 1, separator);"},{"lineNumber":109,"author":{"gitId":"cupofjoee"},"content":"        String[] deadlines \u003d Arrays.copyOfRange(splitted, separator + 1, splitted.length);"},{"lineNumber":110,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":111,"author":{"gitId":"cupofjoee"},"content":"        if (deadlines.length \u003d\u003d 0) {"},{"lineNumber":112,"author":{"gitId":"cupofjoee"},"content":"            throw new EmptyDescriptionException(\"/by parameter\");"},{"lineNumber":113,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":115,"author":{"gitId":"cupofjoee"},"content":"        String title \u003d String.join(\" \", titles);"},{"lineNumber":116,"author":{"gitId":"cupofjoee"},"content":"        String deadline \u003d String.join(\" \", deadlines);"},{"lineNumber":117,"author":{"gitId":"cupofjoee"},"content":"        String[] pair \u003d {title, deadline};"},{"lineNumber":118,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":119,"author":{"gitId":"cupofjoee"},"content":"        return pair;"},{"lineNumber":120,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":122,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":123,"author":{"gitId":"cupofjoee"},"content":"    private static int getIndex(String[] words, String target) {"},{"lineNumber":124,"author":{"gitId":"cupofjoee"},"content":"        int index \u003d IntStream.range(0, words.length)"},{"lineNumber":125,"author":{"gitId":"cupofjoee"},"content":"                .filter(i -\u003e words[i].equals(target))"},{"lineNumber":126,"author":{"gitId":"cupofjoee"},"content":"                .findFirst()"},{"lineNumber":127,"author":{"gitId":"cupofjoee"},"content":"                .orElse(-1);"},{"lineNumber":128,"author":{"gitId":"cupofjoee"},"content":"        return index;"},{"lineNumber":129,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":131,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"cupofjoee"},"content":"     * Captures and returns the description and date/time of"},{"lineNumber":133,"author":{"gitId":"cupofjoee"},"content":"     * event task from the user input."},{"lineNumber":134,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"cupofjoee"},"content":"     * @param input command given by the user through console."},{"lineNumber":136,"author":{"gitId":"cupofjoee"},"content":"     * @return description and date/time of the event task."},{"lineNumber":137,"author":{"gitId":"cupofjoee"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":138,"author":{"gitId":"cupofjoee"},"content":"     * @throws InvalidFormatException"},{"lineNumber":139,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"cupofjoee"},"content":"    public static String[] parseEvent(String input) throws EmptyDescriptionException, InvalidFormatException {"},{"lineNumber":141,"author":{"gitId":"cupofjoee"},"content":"        String[] splitted \u003d input.split(\"\\\\s+\");"},{"lineNumber":142,"author":{"gitId":"cupofjoee"},"content":"        if (splitted.length \u003d\u003d 1) {"},{"lineNumber":143,"author":{"gitId":"cupofjoee"},"content":"            throw new EmptyDescriptionException(\"Event\");"},{"lineNumber":144,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":146,"author":{"gitId":"cupofjoee"},"content":"        int separator \u003d getIndex(splitted, \"/at\");"},{"lineNumber":147,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":148,"author":{"gitId":"cupofjoee"},"content":"        if (separator \u003d\u003d -1) {"},{"lineNumber":149,"author":{"gitId":"cupofjoee"},"content":"            throw new InvalidFormatException(\"/at parameter\");"},{"lineNumber":150,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":152,"author":{"gitId":"cupofjoee"},"content":"        String[] titles \u003d Arrays.copyOfRange(splitted, 1, separator);"},{"lineNumber":153,"author":{"gitId":"cupofjoee"},"content":"        String[] deadlines \u003d Arrays.copyOfRange(splitted, separator + 1, splitted.length);"},{"lineNumber":154,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":155,"author":{"gitId":"cupofjoee"},"content":"        if (deadlines.length \u003d\u003d 0) {"},{"lineNumber":156,"author":{"gitId":"cupofjoee"},"content":"            throw new EmptyDescriptionException(\"/at parameter\");"},{"lineNumber":157,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":159,"author":{"gitId":"cupofjoee"},"content":"        String title \u003d String.join(\" \", titles);"},{"lineNumber":160,"author":{"gitId":"cupofjoee"},"content":"        String deadline \u003d String.join(\" \", deadlines);"},{"lineNumber":161,"author":{"gitId":"cupofjoee"},"content":"        String[] pair \u003d {title, deadline};"},{"lineNumber":162,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":163,"author":{"gitId":"cupofjoee"},"content":"        return pair;"},{"lineNumber":164,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":166,"author":{"gitId":"cupofjoee"},"content":"    public static String parseFind(String input) throws EmptyDescriptionException {"},{"lineNumber":167,"author":{"gitId":"cupofjoee"},"content":"        String[] splitted \u003d input.split(\"\\\\s+\");"},{"lineNumber":168,"author":{"gitId":"cupofjoee"},"content":"        if (splitted.length \u003d\u003d 1) throw new EmptyDescriptionException(\"Find\");"},{"lineNumber":169,"author":{"gitId":"cupofjoee"},"content":"        String[] find \u003d Arrays.copyOfRange(splitted, 1, splitted.length);"},{"lineNumber":170,"author":{"gitId":"cupofjoee"},"content":"        return String.join(\" \", find);"},{"lineNumber":171,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":172}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import java.io.BufferedReader;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import java.io.FileReader;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":" * The Storage handles reading and writing of data into Duke.txt file."},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":" * It allows user to save and load their added tasks."},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    protected List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"    protected File dataFolder \u003d new File(\"./data\");"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"    protected File data \u003d new File(\"./data/duke.txt\");"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    public Storage() {"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"        if (!dataFolder.exists()) {"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"            dataFolder.mkdir();"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"            boolean isNew \u003d data.createNewFile();"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"            if (!isNew) read();"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"     * Appends the new task data to Duke.txt file."},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"     * @param task"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"    public void add(Task task) {"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"            FileWriter fw \u003d new FileWriter(data, true);"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"            fw.write(task.toData() + \"\\n\");"},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":"            fw.close();"},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"     * Reads Duke.txt and add all existing tasks to taskList."},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"     * @throws IOException"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":"    private void read() throws IOException {"},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(data));"},{"lineNumber":57,"author":{"gitId":"cupofjoee"},"content":"        String st;"},{"lineNumber":58,"author":{"gitId":"cupofjoee"},"content":"        while ((st \u003d br.readLine()) !\u003d null) {"},{"lineNumber":59,"author":{"gitId":"cupofjoee"},"content":"            Task task \u003d Task.fromData(st);"},{"lineNumber":60,"author":{"gitId":"cupofjoee"},"content":"            tasks.add(task);"},{"lineNumber":61,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":64,"author":{"gitId":"cupofjoee"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":65,"author":{"gitId":"cupofjoee"},"content":"        return tasks;"},{"lineNumber":66,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":68,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"cupofjoee"},"content":"     * Overwrite Duke.txt with the current taskList in data format."},{"lineNumber":70,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"cupofjoee"},"content":"    public void update() {"},{"lineNumber":72,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"cupofjoee"},"content":"            FileWriter fw \u003d new FileWriter(data);"},{"lineNumber":74,"author":{"gitId":"cupofjoee"},"content":"            for (Task task : tasks) {"},{"lineNumber":75,"author":{"gitId":"cupofjoee"},"content":"                fw.write(task.toData() + \"\\n\");"},{"lineNumber":76,"author":{"gitId":"cupofjoee"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"cupofjoee"},"content":"            fw.close();"},{"lineNumber":78,"author":{"gitId":"cupofjoee"},"content":"        } catch (IOException e) {"},{"lineNumber":79,"author":{"gitId":"cupofjoee"},"content":"            e.printStackTrace();"},{"lineNumber":80,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":82}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":" * The TaskList handles the modification of list of task."},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":" * It supports the complete CRUD operations."},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    protected List\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"    protected Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"        tasks \u003d storage.getTasks();"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"     * Adds the given task to the list and update the Duke.txt file."},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"     * @param task"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"    public void add(Task task) throws DuplicateException {"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"        boolean taskExists \u003d tasks.stream().anyMatch(t -\u003e t.equals(task));"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"        if (taskExists) {"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"            throw new DuplicateException(task.toString());"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"        storage.add(task);"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"        tasks.add(task);"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"        return tasks;"},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"    public int taskSize() {"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"        return tasks.size();"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"     * Marks the task with the given taskId as done and update the Duke.txt file."},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"     * @param taskId"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":"     * @return task that is marked done."},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"    public Task markAsDone(int taskId) {"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":"        assert taskId \u003c taskSize() : \"Index out of range\";"},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"        Task task \u003d tasks.get(taskId).markAsDone();"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"        tasks.set(taskId, task);"},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"        storage.update();"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"        return task;"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"cupofjoee"},"content":"     * Deletes the task with the given taskId and update the Duke.txt file."},{"lineNumber":58,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"cupofjoee"},"content":"     * @param taskId"},{"lineNumber":60,"author":{"gitId":"cupofjoee"},"content":"     * @return task that is deleted."},{"lineNumber":61,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"cupofjoee"},"content":"    public Task delete(int taskId) {"},{"lineNumber":63,"author":{"gitId":"cupofjoee"},"content":"        assert taskId \u003c taskSize() : \"Index out of range\";"},{"lineNumber":64,"author":{"gitId":"cupofjoee"},"content":"        Task task \u003d tasks.get(taskId);"},{"lineNumber":65,"author":{"gitId":"cupofjoee"},"content":"        tasks.remove(taskId);"},{"lineNumber":66,"author":{"gitId":"cupofjoee"},"content":"        storage.update();"},{"lineNumber":67,"author":{"gitId":"cupofjoee"},"content":"        return task;"},{"lineNumber":68,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":70,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":70}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":" * Ui handles all the console output of Duke program."},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"    protected TaskList taskList;"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    public Ui(TaskList taskList) {"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"     * Greets user who just activated Duke."},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * @return greeting message."},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    public String greeting() {"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"        return \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"     * Shows the available commands."},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"     * @return list of available commands."},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"    public String help() {"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"        String msg \u003d String.join(\"\\n\","},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"                \"Adding task:\","},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"                \"todo \u003cdesc\u003e\","},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"                \"deadline \u003cdesc\u003e /by \u003cdesc\u003e\","},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"                \"event \u003cdesc\u003e /at \u003cdesc\u003e\","},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"                \"\","},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"                \"list - show all added tasks\","},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"                \"find \u003cdesc\u003e - show all tasks that contains \u003cdesc\u003e\","},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"                \"done \u003ctaskId\u003e - mark the task as done\","},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"                \"delete \u003ctaskId\u003e - delete the task\","},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"                \"bye - close Duke\");"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"        return (msg);"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":"     * Shows tasks in the current list."},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":"     * @return list of tasks."},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":"    public String list() {"},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"        String msg \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"            msg \u003d \"No tasks in the list wohoo!\\n\";"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":"            msg +\u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"            msg +\u003d tasksToString(tasks);"},{"lineNumber":57,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"cupofjoee"},"content":"        return msg;"},{"lineNumber":59,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":61,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"cupofjoee"},"content":"     * Shows tasks in the given filtered list."},{"lineNumber":63,"author":{"gitId":"cupofjoee"},"content":"     * @param tasks"},{"lineNumber":64,"author":{"gitId":"cupofjoee"},"content":"     * @return list of filtered tasks."},{"lineNumber":65,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"cupofjoee"},"content":"    public String filteredList(List\u003cTask\u003e tasks) {"},{"lineNumber":67,"author":{"gitId":"cupofjoee"},"content":"        String msg \u003d \"\";"},{"lineNumber":68,"author":{"gitId":"cupofjoee"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":69,"author":{"gitId":"cupofjoee"},"content":"            msg \u003d \"No matching tasks in the list\\n\";"},{"lineNumber":70,"author":{"gitId":"cupofjoee"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"cupofjoee"},"content":"            msg +\u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":72,"author":{"gitId":"cupofjoee"},"content":"            msg +\u003d tasksToString(tasks);"},{"lineNumber":73,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"cupofjoee"},"content":"        return msg;"},{"lineNumber":75,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":77,"author":{"gitId":"cupofjoee"},"content":"    private String tasksToString(List\u003cTask\u003e tasks) {"},{"lineNumber":78,"author":{"gitId":"cupofjoee"},"content":"        String msg \u003d \"\";"},{"lineNumber":79,"author":{"gitId":"cupofjoee"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":80,"author":{"gitId":"cupofjoee"},"content":"            String task \u003d tasks.get(i).toString();"},{"lineNumber":81,"author":{"gitId":"cupofjoee"},"content":"            String taskDesc \u003d (i + 1) + \". \" + task + \"\\n\";"},{"lineNumber":82,"author":{"gitId":"cupofjoee"},"content":"            msg +\u003d taskDesc;"},{"lineNumber":83,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"cupofjoee"},"content":"        return msg;"},{"lineNumber":85,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":87,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"cupofjoee"},"content":"     * Shows message that the given task has been marked done."},{"lineNumber":89,"author":{"gitId":"cupofjoee"},"content":"     * @param task"},{"lineNumber":90,"author":{"gitId":"cupofjoee"},"content":"     * @return task done message."},{"lineNumber":91,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"cupofjoee"},"content":"    public String markAsDone(Task task) {"},{"lineNumber":93,"author":{"gitId":"cupofjoee"},"content":"        return \"Nice! I\u0027ve marked it done - \" + task.toString();"},{"lineNumber":94,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":96,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"cupofjoee"},"content":"     * Shows the summary of how many tasks are there in the list."},{"lineNumber":98,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"cupofjoee"},"content":"    private String summary() {"},{"lineNumber":100,"author":{"gitId":"cupofjoee"},"content":"        return \"Now you have \" + taskList.taskSize() + \" tasks in the list\";"},{"lineNumber":101,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":103,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"cupofjoee"},"content":"     * Shows message that the given task has been deleted."},{"lineNumber":105,"author":{"gitId":"cupofjoee"},"content":"     * @param task"},{"lineNumber":106,"author":{"gitId":"cupofjoee"},"content":"     * @return task deleted message."},{"lineNumber":107,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"cupofjoee"},"content":"    public String delete(Task task) {"},{"lineNumber":109,"author":{"gitId":"cupofjoee"},"content":"        return \"Noted! I\u0027ve removed this task - \" + task.toString() + \"\\n\" + summary();"},{"lineNumber":110,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":112,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"cupofjoee"},"content":"     * Shows message that the given task has been added."},{"lineNumber":114,"author":{"gitId":"cupofjoee"},"content":"     * @param task"},{"lineNumber":115,"author":{"gitId":"cupofjoee"},"content":"     * @return task added message."},{"lineNumber":116,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"cupofjoee"},"content":"    public String add(Task task) {"},{"lineNumber":118,"author":{"gitId":"cupofjoee"},"content":"        return \"Added \u0027\" + task.toString() + \"\u0027 to list of tasks\" + \"\\n\" + summary();"},{"lineNumber":119,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":121,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":121}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":" * Represent an executable command."},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"public interface Command {"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    String execute(TaskList taskList, Ui ui, String input) throws"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"            InvalidTaskIdException, EmptyDescriptionException,"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"            InvalidFormatException, DuplicateException;"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":17}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":" * Represents a deadline command."},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"public class DeadlineCommand implements Command {"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"     * Parses the input to extract the details: title and by."},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * Creates the Deadline object."},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     * Adds it to the user data."},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"     * Notifies user that it has been executed."},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"     * @param taskList"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"     * @throws InvalidFormatException"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"     * @return deadline added message."},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList taskList, Ui ui, String input) throws EmptyDescriptionException, InvalidFormatException, DuplicateException {"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        String[] details \u003d Parser.parseDeadline(input);"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        assert details.length \u003e\u003d 2 : \"Missing details in Deadline input\";"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"        String title \u003d details[0];"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"        String by \u003d details[1];"},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"        Task task \u003d new Deadline(title, by);"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        taskList.add(task);"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"        return ui.add(task);"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":41}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":" * Represents a delete command"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"     * Parses the input to extract the id of task that is to be deleted."},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"     * Delete the target task."},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * Update the user data"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     * Notifies user that it has been executed."},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"     * @param taskList"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"     * @throws InvalidTaskIdException"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"     * @return task deleted message."},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList taskList, Ui ui, String input) throws InvalidTaskIdException {"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"        int taskId \u003d Parser.parseTaskId(input);"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        if (taskId \u003c 0 || taskId \u003e\u003d taskList.taskSize()) {"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"            throw new InvalidTaskIdException(taskId + 1 + \"\");"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"        Task task \u003d taskList.delete(taskId);"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        return ui.delete(task);"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":40}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":" * Represents a done command."},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"public class DoneCommand implements Command {"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"     * Parses the input to extract the id of task that is to be deleted."},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"     * Mark the target task as done."},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * Update the user data"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     * Notifies user that it has been executed."},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"     * @param taskList"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"     * @throws InvalidTaskIdException"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"     * @return task done message."},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList taskList, Ui ui, String input) throws InvalidTaskIdException {"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"        int taskId \u003d Parser.parseTaskId(input);"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        if (taskId \u003c 0 || taskId \u003e\u003d taskList.taskSize()) {"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"            throw new InvalidTaskIdException(taskId + 1 + \"\");"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"        Task task \u003d taskList.markAsDone(taskId);"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        return ui.markAsDone(task);"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":40}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Event;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":" * Represents an event command."},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"public class EventCommand implements Command {"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"     * Parses the input to extract the details: title and at."},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * Creates the Event object."},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     * Adds it to the user data."},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"     * Notifies user that it has been executed."},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"     * @param taskList"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"     * @throws InvalidFormatException"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"     * @return event added message."},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList taskList, Ui ui, String input) throws EmptyDescriptionException, InvalidFormatException, DuplicateException {"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        String[] details \u003d Parser.parseEvent(input);"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        assert details.length \u003e\u003d 2 : \"Missing details in Event input\";"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"        String title \u003d details[0];"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"        String at \u003d details[1];"},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"        Task task \u003d new Event(title, at);"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        taskList.add(task);"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"        return ui.add(task);"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"import java.util.stream.Collectors;"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":" * Represent a find command."},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"public class FindCommand implements Command {"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     * Parses the input to extract the detail: searchWord."},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"     * Shows the list of filtered tasks that contains the searchWord."},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"     * @param taskList"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"     * @return list of filtered tasks."},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList taskList, Ui ui, String input) throws EmptyDescriptionException {"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"        String searchWord \u003d Parser.parseFind(input);"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        List\u003cTask\u003e filtered \u003d tasks.stream()."},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"                filter(task -\u003e task.getTitle().contains(searchWord)).collect(Collectors.toList());"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"        return ui.filteredList(filtered);"},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":38}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":" * Represents a help command"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"public class HelpCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"     * Shows the available commands."},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"     *  @param ts"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * @return list of available commands."},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList ts, Ui ui, String input) {"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"        return ui.help();"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":" * Represents a list command."},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"public class ListCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"     * Shows all the tasks that are in the list."},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"     *  @param ts"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * @return list of tasks."},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList ts, Ui ui, String input) {"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"        return ui.list();"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":26}},{"path":"src/main/java/duke/command/QuitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":" * Represents a quit command."},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"public class QuitCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"     * Shows a goodbye message before exiting the program."},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"     *  @param ts"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * @return empty string."},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList ts, Ui ui, String input) {"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"        System.exit(0);"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"        return \"\";"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":27}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.Parser;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Todo;"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":" * Represents a todo command."},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"public class TodoCommand implements Command {"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"     * Parses the input to extract the details: title."},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"     * Creates the Todo object."},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"     * Adds it to the user data."},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"     * Notifies user that it has been executed."},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"     * @param taskList"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"     * @param ui"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"     * @param input"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"     * @throws EmptyDescriptionException"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"     * @return todo added message."},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"    public String execute(TaskList taskList, Ui ui, String input) throws EmptyDescriptionException, DuplicateException {"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        String description \u003d Parser.parseTodo(input);"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        Task task \u003d new Todo(description);"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"        taskList.add(task);"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"        return ui.add(task);"},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":38}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"    public DukeException(String message) {"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"        return getMessage();"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":12}},{"path":"src/main/java/duke/exception/DuplicateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":" * Thrown when the new task created already exists in the list of tasks."},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"public class DuplicateException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"    public DuplicateException(String task) {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"        super(String.format(\"Task \u0027%s\u0027 already exist in the list\", task));"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"        return getMessage();"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":15}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":" * Thrown when the task added is missing a description."},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"public class EmptyDescriptionException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"    public EmptyDescriptionException(String target) {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"        super(String.format(\"The %s should not be empty\", target));"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"        return getMessage();"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":15}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":" * Thrown when the user entered a command that is not recognized."},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"    public InvalidCommandException() {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"        super(\"Hey buddy, that\u0027s an invalid command.\\n\" +"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"                \"Type help to see the available commands\");"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"        return getMessage();"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":16}},{"path":"src/main/java/duke/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":" * Thrown when the command entered does not follow the correct format."},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"public class InvalidFormatException extends DukeException{"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"    public InvalidFormatException(String missing) {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"        super(missing + \" is missing\");"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"        return getMessage();"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":15}},{"path":"src/main/java/duke/exception/InvalidTaskIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":" * Thrown when the task Id entered by the user does not exist in the list of tasks."},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"public class InvalidTaskIdException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"    public InvalidTaskIdException(String id) {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"        super(\"404 task with id \" + id + \" not found. Please enter a correct task id\");"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"        return getMessage();"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":" * Represents a Deadline task that contains"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":" * description and due details."},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":" */"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"    protected String by;"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    protected LocalDate date;"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"    public Deadline(String title, String by) {"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"        super(title);"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"        this.by \u003d by;"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"        if (Pattern.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\", by)) {"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"            date \u003d LocalDate.parse(by);"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"    public Deadline(String title, String by, boolean isDone) {"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"        super(title);"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"        this.by \u003d by;"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"        if (Pattern.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\", by)) {"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"            date \u003d LocalDate.parse(by);"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"    public Task markAsDone() {"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        Task newTask \u003d new Deadline(title, by);"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"        newTask.isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"        return newTask;"},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"        String status \u003d isDone ? \"[✓]\" : \"[✗]\";"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"        String deadline \u003d date !\u003d null"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"                ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"                : by;"},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":"        return String.format(\"%s[D] %s (by: %s)\", status, title, deadline);"},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":"    public String toData() {"},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"        int status \u003d isDone ? 1 : 0;"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":"        return String.format(\"D | %d | %s | %s\", status, title, by);"},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"    public boolean equals(Object o) {"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"        if (this \u003d\u003d o) return true;"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"        Deadline deadline \u003d (Deadline) o;"},{"lineNumber":57,"author":{"gitId":"cupofjoee"},"content":"        return isDone \u003d\u003d deadline.isDone \u0026\u0026"},{"lineNumber":58,"author":{"gitId":"cupofjoee"},"content":"                Objects.equals(title.toLowerCase(), deadline.title.toLowerCase()) \u0026\u0026"},{"lineNumber":59,"author":{"gitId":"cupofjoee"},"content":"                Objects.equals(date, deadline.date);"},{"lineNumber":60,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"    protected String at;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"    protected LocalDate date;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"    public Event(String title, String at) {"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"        super(title);"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"        if (Pattern.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\", at)) {"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"            System.out.println(\"Match!\");"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"            date \u003d LocalDate.parse(at);"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"    public Event(String title, String at, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"        super(title);"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"        this.at \u003d at;"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"        if (Pattern.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\", at)) {"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"            System.out.println(\"Match!\");"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"            date \u003d LocalDate.parse(at);"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"    public Task markAsDone() {"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"        Task newTask \u003d new Event(title, at);"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"        newTask.isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        return newTask;"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        String status \u003d isDone ? \"[✓]\" : \"[✗]\";"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"        String eventTime \u003d date !\u003d null"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"                ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"                : at;"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"        return String.format(\"%s[E] %s (at: %s)\", status, title, eventTime);"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"    public String toData() {"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":"        int status \u003d isDone ? 1 : 0;"},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":"        return String.format(\"D | %d | %s | %s\", status, title, at);"},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"    public boolean equals(Object o) {"},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"        if (this \u003d\u003d o) return true;"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"        if (!super.equals(o)) return false;"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":"        Event event \u003d (Event) o;"},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"        return isDone \u003d\u003d event.isDone \u0026\u0026"},{"lineNumber":57,"author":{"gitId":"cupofjoee"},"content":"                Objects.equals(title.toLowerCase(), event.title.toLowerCase()) \u0026\u0026"},{"lineNumber":58,"author":{"gitId":"cupofjoee"},"content":"                Objects.equals(date, event.date);"},{"lineNumber":59,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":60}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"    protected String title;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"    public Task(String title) {"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"        this.title \u003d title;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    public Task markAsDone() {"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"        Task newTask \u003d new Task(title);"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"        newTask.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"        return newTask;"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"        String status \u003d isDone ? \"[✓]\" : \"[✗]\";"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"        return status + \" \" + title;"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"    public String toData() {"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"        return title;"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"    public String getTitle() {"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"        return title;"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"    public static Task fromData(String st) {"},{"lineNumber":34,"author":{"gitId":"cupofjoee"},"content":"        String[] segment \u003d st.split(\" \\\\| \");"},{"lineNumber":35,"author":{"gitId":"cupofjoee"},"content":"        String type \u003d segment[0];"},{"lineNumber":36,"author":{"gitId":"cupofjoee"},"content":"        boolean isDone \u003d segment[1].equals(\"1\");"},{"lineNumber":37,"author":{"gitId":"cupofjoee"},"content":"        String title \u003d segment[2];"},{"lineNumber":38,"author":{"gitId":"cupofjoee"},"content":"        if (type.equals(\"T\")) {"},{"lineNumber":39,"author":{"gitId":"cupofjoee"},"content":"            return new Todo(title, isDone);"},{"lineNumber":40,"author":{"gitId":"cupofjoee"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"cupofjoee"},"content":"            String time \u003d segment[3];"},{"lineNumber":42,"author":{"gitId":"cupofjoee"},"content":"            return type.equals(\"E\")"},{"lineNumber":43,"author":{"gitId":"cupofjoee"},"content":"                    ? new Event(title, time, isDone)"},{"lineNumber":44,"author":{"gitId":"cupofjoee"},"content":"                    : new Deadline(title, time, isDone);"},{"lineNumber":45,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":48,"author":{"gitId":"cupofjoee"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"cupofjoee"},"content":"    public boolean equals(Object o) {"},{"lineNumber":50,"author":{"gitId":"cupofjoee"},"content":"        if (this \u003d\u003d o) return true;"},{"lineNumber":51,"author":{"gitId":"cupofjoee"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"},{"lineNumber":52,"author":{"gitId":"cupofjoee"},"content":"        Task task \u003d (Task) o;"},{"lineNumber":53,"author":{"gitId":"cupofjoee"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026"},{"lineNumber":54,"author":{"gitId":"cupofjoee"},"content":"                Objects.equals(title.toLowerCase(), task.title.toLowerCase());"},{"lineNumber":55,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":56}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"    public Todo(String title) {"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"        super(title);"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"    public Todo(String title, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"        super(title);"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"    public Task markAsDone() {"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"        Task newTask \u003d new Todo(title);"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"        newTask.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"        return newTask;"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"        String status \u003d isDone ? \"[✓]\" : \"[✗]\";"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"        return status + \"[T] \" + title;"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"    public String toData() {"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"        int status \u003d isDone ? 1 : 0;"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"        return String.format(\"T | %d | %s\", status, title);"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"            \u003cInsets /\u003e"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"         \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"            \u003cInsets bottom\u003d\"1.0\" left\u003d\"3.0\" right\u003d\"3.0\" top\u003d\"1.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"         \u003c/padding\u003e\u003c/Label\u003e"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"cupofjoee":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"400.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"cupofjoee":19}},{"path":"src/test/java/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidFormatException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"public class DeadlineCommandTest {"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"    public void deadlineDateParsingTest() {"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand();"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"        Ui ui \u003d new Ui(taskList);"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"        String input \u003d \"deadline Laundry /by 2020-12-30\";"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"            deadlineCommand.execute(taskList, ui, input);"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"        } catch (EmptyDescriptionException | InvalidFormatException | DuplicateException e) {"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"            e.printStackTrace();"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"        Task lastTaskAdded \u003d taskList.getTasks().get(taskList.taskSize() - 1);"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"        assertEquals(lastTaskAdded.toString(), \"[✗][D] Laundry (by: Dec 30 2020)\");"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":29}},{"path":"src/test/java/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"public class DeleteCommandTest {"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"    public void deleteFirstTaskTest() {"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"        Ui ui \u003d new Ui(taskList);"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"        String input \u003d \"delete 1\";"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"        int before \u003d taskList.taskSize();"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"            deleteCommand.execute(taskList, ui, input);"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"        } catch (InvalidTaskIdException e) {"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"            System.out.println(e);"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"        int after \u003d taskList.taskSize();"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"        if (before \u003d\u003d 0) {"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"            assertEquals(before, after);"},{"lineNumber":29,"author":{"gitId":"cupofjoee"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"cupofjoee"},"content":"            assertEquals(before - 1, after);"},{"lineNumber":31,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":33}},{"path":"src/test/java/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"import duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":"import duke.Ui;"},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"import duke.command.TodoCommand;"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.DuplicateException;"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"import duke.exception.InvalidTaskIdException;"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"public class TodoCommandTest {"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"    public void addTodoTest() {"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"        TodoCommand todoCommand \u003d new TodoCommand();"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"        Ui ui \u003d new Ui(taskList);"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"        String input \u003d \"todo Laundry\";"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"cupofjoee"},"content":"            todoCommand.execute(taskList, ui, input);"},{"lineNumber":22,"author":{"gitId":"cupofjoee"},"content":"        } catch (EmptyDescriptionException | DuplicateException e) {"},{"lineNumber":23,"author":{"gitId":"cupofjoee"},"content":"            e.printStackTrace();"},{"lineNumber":24,"author":{"gitId":"cupofjoee"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"cupofjoee"},"content":"        Task lastTaskAdded \u003d taskList.getTasks().get(taskList.taskSize() - 1);"},{"lineNumber":26,"author":{"gitId":"cupofjoee"},"content":"        assertEquals(lastTaskAdded.toString(), \"[✗][T] Laundry\");"},{"lineNumber":27,"author":{"gitId":"cupofjoee"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"cupofjoee"},"content":"}"}],"authorContributionMap":{"cupofjoee":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cupofjoee"},"content":"blah"},{"lineNumber":2,"author":{"gitId":"cupofjoee"},"content":"help"},{"lineNumber":3,"author":{"gitId":"cupofjoee"},"content":"list"},{"lineNumber":4,"author":{"gitId":"cupofjoee"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"cupofjoee"},"content":"todo deep work"},{"lineNumber":6,"author":{"gitId":"cupofjoee"},"content":"deadline"},{"lineNumber":7,"author":{"gitId":"cupofjoee"},"content":"deadline get a girlfriend"},{"lineNumber":8,"author":{"gitId":"cupofjoee"},"content":"deadline get a girlfriend /by"},{"lineNumber":9,"author":{"gitId":"cupofjoee"},"content":"deadline get a girlfriend /by 2022"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"event"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":"event survive lesson"},{"lineNumber":12,"author":{"gitId":"cupofjoee"},"content":"event survive lesson /at"},{"lineNumber":13,"author":{"gitId":"cupofjoee"},"content":"event survive lesson /at friday morning"},{"lineNumber":14,"author":{"gitId":"cupofjoee"},"content":"list"},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"done 1"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":"done 2"},{"lineNumber":17,"author":{"gitId":"cupofjoee"},"content":"done 5"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"delete 1"},{"lineNumber":19,"author":{"gitId":"cupofjoee"},"content":"delete 3"},{"lineNumber":20,"author":{"gitId":"cupofjoee"},"content":"bye"}],"authorContributionMap":{"cupofjoee":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"-"},"content":")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"cupofjoee":2,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"cupofjoee"},"content":"if [ -e \"./ACTUAL.TXT\" ]time"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"cupofjoee"},"content":"set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":16,"author":{"gitId":"cupofjoee"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":18,"author":{"gitId":"cupofjoee"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"cupofjoee":4,"-":36}}]
