[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Deadline(String description, String by, boolean isDone){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//    public static void echo(String s1){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//        System.out.println(s1);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                \"People call me Duke the All-Known ,\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                \"ask me anything by typing a line.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for (int i \u003d 0; i \u003c 100000; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                if (!input.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    if (!input.contains(\"done\") \u0026\u0026 !input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        if (input.contains(\"todo\") || input.contains(\"event\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                || input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            String description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            String correctedInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            String byOrAt;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                if(input.length() \u003e \"todo \".length()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    description \u003d input.substring(\"todo \".length(), \"todo \".length() + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    if (!description.equals(\" \")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        correctedInput \u003d input.substring(\"todo \".length());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        byOrAt \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        Task.write(correctedInput, \"todo\", byOrAt);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        System.out.println("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                new DukeException("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                        \"OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                }else{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    System.out.println("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            new DukeException("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                    \"The description of a todo cannot be empty lah.\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                if(input.length() \u003e \"event \".length()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    description \u003d input.substring(\"event \".length(), \"event \".length() + 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    if (!description.equals(\" \")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        byOrAt \u003d input.substring(input.indexOf(\"/\") + \"/at \".length());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        correctedInput \u003d input.substring(\"event \".length());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        Task.write(correctedInput, \"event\", byOrAt);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        System.out.println(new DukeException("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                \"The description of an event cannot be empty lah.\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                }else{"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    System.out.println(new DukeException("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            \"The description of an event cannot be empty lah.\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            }else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                if(input.length() \u003e \"deadline \".length()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    description \u003d input.substring(\"deadline \".length(), \"deadline \".length() + 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    if (!description.equals(\" \")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        byOrAt \u003d input.substring(input.indexOf(\"/\") + \"/by \".length());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        correctedInput \u003d input.substring(\"deadline \".length());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        Task.write(correctedInput, \"deadline\", byOrAt);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        System.out.println("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                new DukeException("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                        \"The description of a deadline cannot be empty lah.\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        );"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                }else{"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    System.out.println("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            new DukeException("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                    \"The description of a deadline cannot be empty lah.\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    );"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            System.out.println("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            );"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        if(input.contains(\"done\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            int ref \u003d Integer.parseInt(Character.toString("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    input.charAt(\"done 1\".length() - 1))) - 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            if (Task.taskStorage.get(ref) !\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                Task done \u003d Task.taskStorage.get(ref).markAsDone();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                Task.taskStorage.add(ref, done);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        + Task.taskStorage.get(ref));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                System.out.println(\"I am afraid that it is not possible\" +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        \"to do an unknown task.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        }else{"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            int ref \u003d Integer.parseInt(Character.toString("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    input.charAt(\"delete 1\".length() - 1))) - 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            Task.delete(ref);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    Task.read();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 146,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class DukeException extends IllegalArgumentException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DukeException(String message, Throwable cause){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Event(String description, String at, boolean isDone){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 20
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskStorage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task(String description, Boolean isDone){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task markAsDone(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(this instanceof ToDo){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new ToDo(this.description, true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }else if(this instanceof Event){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Event(this.description, ((Event) this).at, true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }else if(this instanceof Deadline){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Deadline(this.description, ((Deadline) this).by, true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Task(this.description, true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void write(String input, String type, String byOrAt){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Task toBeAdded;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(type.equals( \"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new ToDo(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }else if(type.equals( \"deadline\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new Deadline(input, byOrAt);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new Event(input, byOrAt);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + toBeAdded);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Now you have \" + taskStorage.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void read(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for(int i \u003d 0; i \u003c taskStorage.size(); i ++){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(String.valueOf(i + 1 ) +\".\"+ taskStorage.get(i));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void delete(int ref){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(ref \u003e\u003d taskStorage.size()){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(\"I am afraid that it is not possible to delete an unknown task.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            Task temp \u003d taskStorage.get(ref);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.remove(ref);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\\n \" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    temp + \"\\nNow you have \" + taskStorage.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 77
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public ToDo(String description, boolean isDone){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "deadline askquestion /by Monday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "todo borrowbook"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "event teammeeting /at Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "blah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if ! ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "  )"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 6,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 6
    }
  }
]
