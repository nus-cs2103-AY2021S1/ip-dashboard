[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "# duke.duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.duke.Duke.java` file, right-click it, and choose `Run duke.duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "D | 0 | another book to read | tomrrow"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a command that is received from the user via the command line."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    protected String commandDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandDescription Description of the command body."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param isExit Determines if the command causes Duke to exit."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Command(String commandDescription, boolean isExit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.commandDescription \u003d commandDescription;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns whether the command will cause Duke to exit."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return true if command causes Duke to exit, false otherwise."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.showError(\"Can\u0027t execute generic command\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a Deadline Command when the user inputs"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * a new task with a deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private String deadlineDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private LocalDate deadlineLocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private boolean hasLocalDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates a new instance of a Deadline Command with the appropriate"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * deadline description and date of deadline given in non standard format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandDescription Description of the command body."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param deadlineDate Date of deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public DeadlineCommand(String commandDescription, String deadlineDate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(commandDescription, false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.hasLocalDate \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates a new instance of a Deadline Command with the appropriate"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * command description and date of deadline given in standard format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandDescription Description of the command body."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param deadlineLocalDate Date of deadline as a LocalDate object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public DeadlineCommand(String commandDescription, LocalDate deadlineLocalDate) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(commandDescription, false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.deadlineLocalDate \u003d deadlineLocalDate;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.hasLocalDate \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates a new Deadline object and adds it to the list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * of taks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Deadline deadlineTask;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (this.hasLocalDate) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            deadlineTask \u003d new Deadline(commandDescription, deadlineLocalDate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            deadlineTask \u003d new Deadline(commandDescription, deadlineDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        taskList.addToList(deadlineTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayAddedTask(deadlineTask, taskList.getListSize());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 66
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a delete command for when the user wants to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * delete a specific task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public final int sizeOffset \u003d -1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a DeleteCommand with the appropriate"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * task to be deleted as the command description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandDescription Task to be deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public DeleteCommand(String commandDescription) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(commandDescription, false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Deletes the appropriate task from the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Task task \u003d taskList.getTaskAtIndex(Integer.parseInt(commandDescription) + sizeOffset);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        taskList.removeFromList(Integer.parseInt(commandDescription) + sizeOffset);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayDeletedTask(task, taskList.getListSize());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a Done command for when the user wants to mark"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public final int sizeOffset \u003d -1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Done Command with the appropriate"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * task to be set as done as the command description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandDescription"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public DoneCommand(String commandDescription) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(commandDescription, false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Marks the appropriate task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Task task \u003d taskList.getTaskAtIndex(Integer.parseInt(commandDescription) + sizeOffset);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayDoneTask(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents an Event command when the user wants to add"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * a new Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private String eventDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private LocalDate eventLocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private boolean hasLocalDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates a new instance of a Event Command with the appropriate"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * event description and date of event given in non standard format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandDescription Description of event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param eventDate Date of event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public EventCommand(String commandDescription, String eventDate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(commandDescription, false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.hasLocalDate \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates a new instance of a Event Command with the appropriate"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * event description and date of event given in standard format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandDescription Description of the event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param eventLocalDate Date of event as a LocalDate object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public EventCommand(String commandDescription, LocalDate eventLocalDate) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(commandDescription, false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.eventLocalDate \u003d eventLocalDate;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.hasLocalDate \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates a new Event and adds it to the list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Event eventTask;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (this.hasLocalDate) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            eventTask \u003d new Event(commandDescription, eventLocalDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            eventTask \u003d new Event(commandDescription, eventDate);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        taskList.addToList(eventTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayAddedTask(eventTask, taskList.getListSize());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 65
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents an Exit command that causes Duke to terminate."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates instance of ExitCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(\"\", true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Saves all current tasks in the list to the hard drive."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints goodbye message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        storage.saveData(taskList, ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayGoodbye();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/GetEventsCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a getEvents command when the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * wants to search for tasks that have a particular due date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class GetEventsCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"getEvents\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a GetEvents command with the appropriate"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * date the user is looking for."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param localDate Date which user wants to search for."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public GetEventsCommand(LocalDate localDate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(\"GetEvents command called\", false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Searches the list of tasks for tasks that have a due date"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * matching the date given as input and prints them."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                Task task \u003d taskList.getTaskAtIndex(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                if (task.hasDate() \u0026\u0026 task.getDate().isEqual(localDate)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    listOfTasks.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            ui.displayEventsOnDate(listOfTasks, localDate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            ui.showError(\"Please input a valid date format\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 56
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a help command when the user wants to see"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * the features Duke offers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"--help\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a HelpCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(\"Help command called\", false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Shows the help menu."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.showHelp();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents an Invalid command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private final String message \u003d \"Invalid command/format! check --help for more info\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of an Invalid Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(\"Invalid command\", false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Shows the user an error message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.showError(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a list command when the user wants to see"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * a list of all tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a List Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(\"List command called\", false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Shows the user a list of all tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui       User interface object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage  Storage object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            Task task \u003d taskList.getTaskAtIndex(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayAllItems(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 41
    }
  },
  {
    "path": "src/main/java/duke/commands/SearchCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a seach command when the user wants to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * search for tasks with a specific keyword."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"search\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Search Command with the appropriate"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * search keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandDescription Search keyword."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public SearchCommand(String commandDescription) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(commandDescription, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the Command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Searches the list of tasks and prints the tasks that"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * match the keyword."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui       User interface object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage  Storage object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        String pattern \u003d \"(.*)\" + commandDescription + \"(.*)\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            Task task \u003d taskList.getTaskAtIndex(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            if (task.toString().matches(pattern)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayAllItems(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a Todo command when the user wants to add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * a new todo item."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a todo command with the appropriate description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param commandBody Description of todo item."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public TodoCommand(String commandBody) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(commandBody, false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates a new todo item and adds it to the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskList List of tasks currently being tracked."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui User interface object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Task task \u003d new ToDo(commandDescription);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        taskList.addToList(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayAddedTask(task, taskList.getListSize());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 39
    }
  },
  {
    "path": "src/main/java/duke/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents Duke object. Is responsible for the overall running of Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * @author Kishen Ashok Kumar"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private Storage store;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates a Duke object with the respective directory and file paths"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * for loading and saving of task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param directoryPath directory path containing text file to load."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param filePath name of text file to load."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Duke(String directoryPath, String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        store \u003d new Storage(directoryPath, filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        File loadFile \u003d store.loadData(ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (loadFile !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            tasks \u003d new TaskList(loadFile);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Runs the instance of Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Is responsible for the coordination of all Duke functions."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        ui.displayGreeting();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            command.execute(tasks, ui, store);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            if (!isExit) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                ui.displayBlankLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Duke object and runs it."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Duke duke \u003d new Duke(\"./data\", \"duke.txt\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 66,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns the prefix to all Duke exception messages."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Prefix to Duke exception message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return \"      ☹ OOPS!!!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents an Invalid Duke command exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class InvalidDukeCommand extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Message shown to the user when they enter an invalid command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Error message string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return super.toString() + \" I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidTaskFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents an Invalid Task format exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class InvalidTaskFormat extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of an InvalidTaskFormat exception with the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * appropriate task type."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskType Type of task that has the wrong command format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public InvalidTaskFormat(TaskType taskType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns a string of the appropriate format description for the"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * infringing task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Task format description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return super.toString() + \" The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        //Fallthrough"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return super.toString() + \" Please follow the correct format for events\\n\" + \"      event \u003cdescription\u003e /at \u003cdate\u003e\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        //Fallthrough"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return super.toString() + \" Please follow the correct format for deadlines\\n\" + \"      deadline \u003cdescription\u003e /by \u003cdate\u003e\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        //Fallthrough"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return \"What kind of task is that ?!?! :O\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 44
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a Parser that will read User Input from the command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * line and identify the appropriate command to be executed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S+)(?\u003cbody\u003e.*)\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Tries to identify the format of the date input by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * and returns a LocalDate object if it has the correct format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param date Date input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return LocalDate object if date has the correct format. Otherwise, null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static LocalDate parseDate(String date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        LocalDate localDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            localDate \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Parses the user input and identifies which command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * to execute."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param s User input through command line."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Appropriate Command to be executed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public static Command parse(String s) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Matcher matcher \u003d COMMAND_FORMAT.matcher((s.trim()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        String commandWord \u003d matcher.group(\"command\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        String commandBody \u003d matcher.group(\"body\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return prepareTodo(commandBody.strip());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return prepareDeadline(commandBody.strip());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return prepareEvent(commandBody.strip());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new DeleteCommand(commandBody.strip());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new DoneCommand(commandBody.strip());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case GetEventsCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return prepareGetEvents(commandBody.strip());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        case SearchCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return prepareSearch(commandBody.strip());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Ensures todo command has the correct format and creates a TodoCommand object if it does."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Otherwise, returns an InvalidCommand object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private static Command prepareTodo(String commandBody) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (commandBody.length() \u003e 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new TodoCommand(commandBody.strip());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Ensures deadline command has the correct format and creates a DeadlineCommand object if it does."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Otherwise, returns an InvalidCommand object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private static Command prepareDeadline(String commandBody) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        String[] splitParts \u003d commandBody.split((\" /by \"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (splitParts.length !\u003d 2 || splitParts[0].strip().length() \u003d\u003d 0 || splitParts[1].strip().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            LocalDate localDate \u003d Parser.parseDate(splitParts[1].strip());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            if (localDate !\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                return new DeadlineCommand(splitParts[0].stripLeading(), localDate);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                return new DeadlineCommand(splitParts[0].stripLeading(), splitParts[1].strip());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Ensures event command has the correct format and creates a EventCommand object if it does."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Otherwise, returns an InvalidCommand object."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private static Command prepareEvent(String commandBody) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        String[] splitParts \u003d commandBody.split((\" /at \"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (splitParts.length !\u003d 2 || splitParts[0].strip().length() \u003d\u003d 0 || splitParts[1].strip().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            LocalDate localDate \u003d Parser.parseDate(splitParts[1].strip());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            if (localDate !\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                return new EventCommand(splitParts[0].stripLeading(), localDate);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                return new EventCommand(splitParts[0].stripLeading(), splitParts[1].strip());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Ensures getEvents command has the correct format and creates a GetEventsCommand object if it does."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Otherwise, returns an InvalidCommand object."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private static Command prepareGetEvents(String commandBody) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        String date \u003d commandBody.strip();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new GetEventsCommand(localDate);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Ensures the search keyword is a non-empty string and creates a SearchCommand object if it is."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Otherwise, returns an InvalidCommand object."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private static Command prepareSearch(String commandBody) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (commandBody.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return new SearchCommand(commandBody);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 144
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents the storage capabilities of Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private String directoryPath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Storage object with the appropriate"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * directory path and file name to use."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param directoryPath directory path containing text file to load."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param fileName name of text file to load."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Storage(String directoryPath, String fileName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.directoryPath \u003d directoryPath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Tries to load data from the given path."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * If unable, creates a new file for Duke to use."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui UI object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return File that Duke will use to read/write data."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public File loadData(UI ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        File directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            directory.mkdirs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        File file \u003d new File(directoryPath + \"/\" + fileName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            ui.showLoadingError(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Tries to save data to the given path."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * If unable, displays and error to the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param ui UI object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void saveData(TaskList tasks, UI ui) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        File file \u003d new File(directoryPath + \"/\" + fileName);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            resetFileContents(directoryPath + \"/\" + fileName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                Task task \u003d tasks.getTaskAtIndex(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                appendToFile(directoryPath + \"/\" + fileName, task.getSaveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            ui.showError(\"Something went wrong while trying to save your data... :/\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Resets the contents of the file at the given file path."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private void resetFileContents(String filePath) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        fileWriter.write(\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    //Appends data to file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private void appendToFile(String filePath, String lineToAdd) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        fileWriter.write(lineToAdd);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 85
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a deadline task saved by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private String deadlineDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Deadline object with the appropriate"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * deadline name and date of deadline given in non standard format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param deadlineName Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param deadlineDate Date of deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Deadline(String deadlineName, String deadlineDate) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(deadlineName);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Deadline object with the appropriate"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * deadline name and date of deadline given in standard format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param deadlineName Description of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param localDate Date of deadline as a LocalDate object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Deadline(String deadlineName, LocalDate localDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(deadlineName, true, localDate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns description of deadline."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Description of deadline."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + (super.hasDate() ? localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : deadlineDate) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Converts deadline to a savable format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Savable format of deadline."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return \"D\" + \" | \" + super.getSaveFormat() + \" | \" + (super.hasDate() ? localDate : deadlineDate);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a event task saved by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private String eventDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Event object with the appropriate"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * event name and date of event given in non standard format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param eventName Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param eventDate Date of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Event(String eventName, String eventDate) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(eventName);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Event object with the appropriate"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * event name and date of event given in standard format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param eventName Description of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param localDate Date of event as a LocalDate object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Event(String eventName, LocalDate localDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(eventName, true, localDate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns description of event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Description of event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + (super.hasDate() ? localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : eventDate) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Converts event to a savable format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Savable format of event."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return \"E\" + \" | \" + super.getSaveFormat() + \" | \" + (super.hasDate() ? localDate : eventDate);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a Task object that the user wants"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * to keep track of."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private boolean hasFormattedDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    protected LocalDate localDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Task object with the appropriate"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * task name."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        hasFormattedDate \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a Task object with the appropriate"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * task name. Receives date that task is due as a LocalDate object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param hasFormattedDate true if the task has a formatted date. Otherwise, false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param localDate LocalDate object representing task deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Task(String taskName, boolean hasFormattedDate, LocalDate localDate) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.hasFormattedDate \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns whether the task has a due date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return true if task has a due date. Otherwise, false."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return hasFormattedDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns the date of the task as a LocalDate object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Date of object as a LocalDate object. If no date is"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * present, returns null."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return hasDate() ? localDate : null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Sets task as one."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns the prefix to task display."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Prefix of task display."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return \"[\" + \"\\u2713\" + \"] \" + taskName;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            return \"[\" + \"\\u2717\" + \"] \" + taskName;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Converts the task to a savable format."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Savable format of task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        String done \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return done + \" | \" + taskName;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 92
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a list of all tasks the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * wants to keep track of."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a list of tasks from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * a file containing saved tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param file File that user wants tasks to be loaded from."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public TaskList(File file) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                String[] line \u003d scanner.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                Task newTask \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                LocalDate localDate \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                switch (line[0].strip()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    newTask \u003d new ToDo(line[2].strip());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    localDate \u003d Parser.parseDate(line[3].strip());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    if (localDate !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                        newTask \u003d new Deadline(line[2].strip(), localDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                        newTask \u003d new Deadline(line[2].strip(), line[3].strip());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    localDate \u003d Parser.parseDate(line[3].strip());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    if (localDate !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                        newTask \u003d new Event(line[2].strip(), localDate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                        newTask \u003d new Event(line[2].strip(), line[3].strip());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                if (line[1].strip().equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                    newTask.setDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a list of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Removes a task from the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskIndex Index of task to be removed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void removeFromList(int taskIndex) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Gets the number of tasks in the list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns the task at a particular index."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param taskIndex Index of task to be retrieved."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Retrived task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public Task getTaskAtIndex(int taskIndex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 109
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents the different types of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    TODO, EVENT, DEADLINE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 8
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents a todo task saved by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instace of a todo task with the appropriate task description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param toDoName Description of todo task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public ToDo(String toDoName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        super(toDoName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Returns description of todo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Description of todo task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Converts todo task to a savable format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return Savable format of todo task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return \"T\" + \" | \" + super.getSaveFormat();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 36
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " * Represents the User Interface that the user interacts with."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private final String HORIZONTAL_BREAK \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private final String OFFSET \u003d \"     \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private final String ITEM_OFFSET \u003d \"       \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private final String BLANK_LINE \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Creates an instance of a User Interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints a horizontal line to the screen."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + HORIZONTAL_BREAK);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints the display greeting to the screen."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void displayGreeting() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        String logo \u003d \"        ___\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"    . -^   `--,\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"   /# \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d`-_\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"  /# (--\u003d\u003d\u003d\u003d___\u003d\u003d\u003d\u003d\\\\\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \" /#   .- --.  . --.|\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"/##   |  * ) (   * ),\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"|##   \\\\    /\\\\ \\\\   / |\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"|###   ---   \\\\ ---  |\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"|####      ___)    #|\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"|######           ##|\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \" \\\\##### ---------- /\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"  \\\\####           (\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"   `\\\\###          |\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"     \\\\###         |\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"      \\\\##         |\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"       \\\\###.     .)\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                + \"         `\u003d\u003d\u003d\u003d\u003d\u003d/\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"I am duke, keeper of all tasks. How may I help you?\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        displayBlankLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints the goodbye message to the screen."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void displayGoodbye() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Bye! Hope to see you again :)\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints a loading error to the screen."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param s Error message to be printed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void showLoadingError(String s) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Looks like there was an error retrieving your data\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + s);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints an error to the screen."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param s Error message to be printed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void showError(String s) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + s);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints the added task to the screen."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param task Task that was added."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param listSize Size of the list of tasks."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void displayAddedTask(Task task, int listSize) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(ITEM_OFFSET + task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Now you have \" + listSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints the deleted task to the screen."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param task Task that was deleted."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param listSize Size of the list of tasks."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void displayDeletedTask(Task task, int listSize) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(ITEM_OFFSET + task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Now you have \" + listSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints the done task to the screen."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param task Task that was set as done."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void displayDoneTask(Task task) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(ITEM_OFFSET + task);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints all tasks that are due on the given date."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param tasks List of current tasks."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param localDate Due date."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void displayEventsOnDate(ArrayList\u003cTask\u003e tasks, LocalDate localDate) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Here are your events on \" +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \":\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            System.out.println(ITEM_OFFSET + task);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints all items to the screen."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @param tasks List of current tasks."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void displayAllItems(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        int taskCount \u003d 1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            System.out.println(OFFSET + (taskCount) + \". \" + task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "            System.out.println(OFFSET + \"This is a very empty list... UwU\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Displays blank line on screen."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void displayBlankLine() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(BLANK_LINE);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Prints help information to the screen."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void showHelp() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(OFFSET + \"I can\u0027t help you either ._.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        System.out.println(this.BLANK_LINE);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * Reads the user input."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 196
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void localDateParsing_YYYYMMDD_datePrinted() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        assertEquals(\"Jun 6 2020\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                Parser.parseDate(\"2020-06-06\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                        .format(DateTimeFormatter"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "                                .ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void localDateParsing_notADate_null() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        assertEquals(null, Parser.parseDate(\"randomString\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 25
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void saveFormat_taskNotDone_0Printed() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        assertEquals(\"D | 0 | test1 | test1\", deadline.getSaveFormat());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void saveFormat_taskDone_1Printed() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        deadline.setDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        assertEquals(\"D | 1 | test1 | test1\", deadline.getSaveFormat());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void deadlineDisplay_taskNotDone_crossPrinted() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        assertEquals(\"[D][✗] test1 (by: test1)\", deadline.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    public void deadlineDisplay_taskDone_tickPrinted() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"test1\", \"test1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        deadline.setDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "        assertEquals(\"[D][✓] test1 (by: test1)\", deadline.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 34
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "T | 0 | newItem"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "E | 0 | CS2103T Tutorial | Wed 4-5pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "D | 0 | test1 | 2020-05-21"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "D | 0 | test2 | 2020-06-20"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "E | 0 | test3 | 2020-05-21"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "E | 0 | test4 | 2020-06-19"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "todo newItem"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "deadline submit quiz /by Aug 20th"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "event CS2103T Tutorial /at Wed 4-5pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "invalidCommand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "deadline deadlineName /by"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "deadline real /at aDate"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "deadline /by Aug 5"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "event eventName /at"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "event eventName /by aDate"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "event /at aDate"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "deadline test1 /by 2020-05-21"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "deadline test2 /by 2020-06-20"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "event test3 /at 2020-05-21"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "event test4 /at 2020-06-19"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "getEvents 2020-05-21"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 30
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\duke\\*.java ..\\src\\main\\java\\duke\\commands\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KishenKumarrrrr"
        },
        "content": "java -classpath ..\\bin duke.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "KishenKumarrrrr": 4,
      "-": 19
    }
  }
]
