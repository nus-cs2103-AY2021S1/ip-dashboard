[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime byTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.byDate \u003d LocalDate.parse(by.split(\" \")[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.byTime \u003d LocalTime.parse(by.split(\" \")[1]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"ha\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + dateFormatter.format(byDate) + \" \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(byTime) + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[D]\" + super.toStringFileFormat() + \" (by: \" + byDate + \" \" + byTime + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    // Loop through every task and transform it into a string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static String listToString(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String taskListStr \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            taskListStr +\u003d t.toStringFileFormat() + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return taskListStr;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static void saveToFile(String output) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Check if data folder exists, if not create"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path folderPath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(folderPath)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File folderDir \u003d new File(folderPath.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            folderDir.mkdir();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Get OS-independent file path to text file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String filePath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\", \"Tasklist.txt\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Uncomment for testing"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        String filePath \u003d Paths.get(\"..\",\"data\", \"Tasklist.txt\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//                .toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            FileWriter myFile \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            myFile.write(output); // Output is already all tasks in a string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            myFile.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static ArrayList\u003cTask\u003e readFromFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Check if data folder exists, if not create"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path folderPath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(folderPath)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File folderDir \u003d new File(folderPath.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            folderDir.mkdir();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise ArrayList to return"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Check if file exists, if return empty list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path filePath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\", \"Tasklist.txt\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return savedTasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Uncomment for testing"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        Path filePath \u003d Paths.get(\"..\", \"data\", \"Tasklist.txt\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//            return savedTasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File myFile \u003d new File(filePath.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            Scanner taskReader \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Keep reading new line until file end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            while (taskReader.hasNextLine()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                String taskString \u003d taskReader.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Only work with non empty lines"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                if (taskString !\u003d \"\") {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    switch (taskString.charAt(1)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    case \u0027T\u0027:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        boolean isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .substring(3)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .equals(\"[Done]\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String description \u003d \" \" + taskString.split(\"  \")[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        Task t \u003d new ToDo(description);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            t.setDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        savedTasks.add(t);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    case \u0027D\u0027:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .substring(3)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .equals(\"[Done]\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        description \u003d \" \" + taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .split(\"\\\\s[(]by:\\\\s\")[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String by \u003d taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .split(\"\\\\s[(]by:\\\\s\")[1];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        by \u003d by.substring(0, by.length() - 1); // remove parentheses at the end"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        Deadline d \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            d.setDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        savedTasks.add(d);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    case \u0027E\u0027:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .substring(3)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .equals(\"[Done]\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String[] stringSplit \u003d taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .split(\"\\\\s[(]at:\\\\s\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        description \u003d \" \" + stringSplit[0];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String at \u003d stringSplit[1].split(\" \")[0];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String timeRange \u003d stringSplit[1].split(\" \")[1];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        timeRange \u003d timeRange.substring(0, timeRange.length() - 1); // remove parentheses at the end"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        Event e \u003d new Event(description, at, timeRange);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            e.setDone();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        savedTasks.add(e);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return savedTasks;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean isEmptyInput(String input) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.isEmpty();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean isValidCommand(String input) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.toLowerCase().startsWith(\"todo\")"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.toLowerCase().startsWith(\"deadline\")"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.toLowerCase().startsWith(\"event\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean isEmptyDescription(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.split(\" \").length \u003d\u003d 1;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean hasDeadlineBy(String input) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.contains(\"/by\")"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /by \").length \u003d\u003d 2;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean hasEventStartEndTime(String input) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.contains(\"/at\")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \")[1].split(\" \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \")[1].split(\" \")[1]"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .split(\"-\").length \u003d\u003d 2;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise strings to separate messages from Duke"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // and commands from CLI"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String servantSpeak \u003d \"Duke:\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String masterSpeak \u003d \"Your Command Sire:\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Introduction at the beginning of the chat"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(servantSpeak"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Greetings my Liege.\\n\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Why have you summoned me?\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise the Scanner object to get input from user"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Scanner myObj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise ArrayList to store tasks from user"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e userTasks;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Read tasks stored in hard drive if any"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        userTasks \u003d readFromFile();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Start chat"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Get input from user"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            System.out.println(masterSpeak);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            input \u003d myObj.nextLine().trim();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // If user inputs \"bye\" in any case, end the chat"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.println(servantSpeak"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        + \"    It was a pleasure to serve you my Liege.\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        + \"    Till next time.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // If user marks \"done\" mark task as isDone \u003d true"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (input.contains(\"done \")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Get the index stated after \"done\" by parsing the string"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Mark item as done"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (index \u003e\u003d userTasks.size()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        throw new DukeException(\"\", ExceptionType.INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        userTasks.get(index).setDone();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        System.out.println(servantSpeak"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                + \"    As you wish Sire. I have marked this task as done:\\n\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                + \"       \" + userTasks.get(index).toString());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    // Update Tasklist.txt after marking task as done"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    saveToFile(listToString(userTasks));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(servantSpeak);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.println(ex);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // If user requests delete, delete selected task"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (input.contains(\"delete \")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Get the index stated after \"delete\" by parsing the string"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Delete item"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (index \u003e\u003d userTasks.size()) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        throw new DukeException(\"\", ExceptionType.INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        System.out.println(servantSpeak"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                + \"    As you wish Sire. I removed this task:\\n\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                + \"       \" + userTasks.get(index).toString());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        userTasks.remove(index);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    // Update Tasklist.txt after removing task"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    saveToFile(listToString(userTasks));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(servantSpeak);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.println(ex);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // If user requests for list, display list of tasks"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.println(servantSpeak"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        + \"    Here are your tasks your Majesty:\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                for (Task i : userTasks) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.println(\"    \""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            + count + \". \""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            + i.toString());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Check validity of input command"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                if (isEmptyInput(input)) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new DukeException(\"\", ExceptionType.EMPTY_INPUT);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                if (!isValidCommand(input)) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new DukeException(\"\", ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                if (isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new DukeException(\"\", ExceptionType.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.print(servantSpeak);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Determine what kind of task it is"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String[] inputSplit;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            switch (input.toLowerCase().split(\" \")[0]) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                description \u003d input.substring(4);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                t \u003d new ToDo(description);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                userTasks.add(t);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (!hasDeadlineBy(input)) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        throw new DukeException(\"\", ExceptionType.DEADLINE_NO_BY);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    inputSplit \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    String by \u003d inputSplit[1];"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    description \u003d inputSplit[0].substring(8);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    t \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    userTasks.add(t);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(servantSpeak);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.println(ex);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (!hasEventStartEndTime(input)) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        throw new DukeException(\"\", ExceptionType.EVENT_NO_START_END);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    inputSplit \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    String at \u003d inputSplit[1].split(\" \")[0];"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    String timeRange \u003d inputSplit[1].split(\" \")[1];"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    description \u003d inputSplit[0].substring(5);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    t \u003d new Event(description, at, timeRange);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    userTasks.add(t);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(servantSpeak);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.println(ex);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Standard reply from Duke for adding a task"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            System.out.println(servantSpeak"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    + \"    As you wish Sire. I have added the task:\\n       \""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    + userTasks.get(userTasks.size() - 1).toString() + \"\\n\""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    + \"    Now you have \" + userTasks.size()"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Update Tasklist.txt after adding task"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            saveToFile(listToString(userTasks));"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 337,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_EMPTY_INPUT \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"You have to give a command.\\n\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_INVALID_COMMAND \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"I do not recognise that command.\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_EMPTY_DESCRIPTION \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"Your description cannot be empty.\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_DEADLINE_NO_BY \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"A deadline must have a specific end date/time.\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_EVENT_NO_START_END \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"An event must have a start and end time.\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"That task cannot be found!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected ExceptionType exceptionType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public DukeException(String err, ExceptionType exceptionType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        switch (exceptionType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case EMPTY_INPUT:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_ALL_TASKS_EMPTY_INPUT;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INVALID_COMMAND:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_ALL_TASKS_INVALID_COMMAND;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_ALL_TASKS_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case DEADLINE_NO_BY:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_DEADLINE_NO_BY;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case EVENT_NO_START_END:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_EVENT_NO_START_END;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INDEX_OUT_OF_BOUNDS:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    public String emptyInputMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        return MESSAGE_ALL_TASKS_EMPTY_INPUT;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    public String invalidCommandMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        return MESSAGE_ALL_TASKS_INVALID_COMMAND;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    public String emptyDescriptionMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        return MESSAGE_ALL_TASKS_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    public String deadlineNoByMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        return MESSAGE_DEADLINE_NO_BY;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    public String eventNoStartEndMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//        return MESSAGE_EVENT_NO_START_END;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 67
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    protected String start;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "//    protected String end;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime start;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime end;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Event (String description, String at, String timeRange) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.start \u003d LocalTime.parse(timeRange.split(\"-\")[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.end \u003d LocalTime.parse(timeRange.split(\"-\")[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"ha\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + dateFormatter.format(at) + \" \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(start) + \"-\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(end) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[E]\" + super.toStringFileFormat() + \" (at: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + at + \" \" + start + \"-\" + end + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 34
    }
  },
  {
    "path": "src/main/java/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EMPTY_INPUT,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DEADLINE_NO_BY,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EVENT_NO_START_END,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INDEX_OUT_OF_BOUNDS"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 8
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.description \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return (isDone ? \"Done\" : \"Not Done\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 27
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ToDo (String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[T]\" + super.toStringFileFormat();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "if exist del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 2,
      "-": 19
    }
  }
]
