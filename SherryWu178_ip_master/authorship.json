[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 21,
      "-": 44
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 11
    }
  },
  {
    "path": "data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "T | 1 | watch Inception"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "D | 1 | finish hw | 2020-08-27"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "T | 0 | lunch with Rhea"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "T | 1 | do laundry"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 4
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            tasks \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Run a Duke object while isExit is not changed to true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //        ui.displayWelcome();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //        while (!isExit) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //            } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //                ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //            } finally {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //                ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return ui.displayWelcome();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            String output \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //    public static void main(String[] args) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //        new Duke(\"/data.txt\").run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 79
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 11
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Duke duke \u003d new Duke(\"/data.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String welcome \u003d duke.welcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcome, dukeImage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 54
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public AddCommand(String type, String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            tasks.addTask(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            output \u003d ui.displayAddTaskMessage(todo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            tasks.addTask(deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            output \u003d ui.displayAddTaskMessage(deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            Event event \u003d new Event(description, date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            tasks.addTask(event);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            output \u003d ui.displayAddTaskMessage(event);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        if (obj instanceof AddCommand) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            AddCommand command \u003d (AddCommand) obj;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return (type.equals(command.type)) \u0026\u0026 (description.equals(command.description))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    \u0026\u0026 (date \u003d\u003d date || date.equals(command.date));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 57
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " * A command object containing information parsed from an Ui object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " * When the command is executed, the data structure will be modified and relevant message will be displayed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        Task.reduceOneTasks();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String output \u003d ui.displayDeleteMessage(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 24
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * returns the done message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return done message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String output \u003d ui.displayMarkAsDoneMessage(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        tasks.completeTask(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        storage.saveFile(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String output \u003d ui.displayBye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String output \u003d ui.showTask(tasks, keyword);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public ListCommand(LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            output \u003d ui.showTask(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            output \u003d ui.showTask(tasks, date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 28
    }
  },
  {
    "path": "src/main/java/duke/exceptions/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class CommandNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public CommandNotFoundException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means... (´∀`)\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                + \"So far I support store different tasks, eg: todo, deadline, event.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public CommandNotFoundException(String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 14
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class EmptyTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public EmptyTaskException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this(\"Please specify task index. (´∀`)\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public EmptyTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class EmptyTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public EmptyTimeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/IncompleteMessageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class IncompleteMessageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public IncompleteMessageException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/PathNoFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class PathNoFoundException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public PathNoFoundException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/WrongDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class WrongDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public WrongDateFormatException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public WrongDateFormatException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this(\"java.tasks.Task not saved due to wrong format. ꉂ `o´ ) \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                + \"Please specify the date in the following format: \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                + \"yyyy-mm-dd i.e. 2020-01-01\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 13
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Cut an user-input String to smaller piece of information"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Returns different command constructed with the info pieces"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param fullCommand"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return Command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @throws EmptyTaskException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @throws EmptyTimeException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @throws CommandNotFoundException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @throws WrongDateFormatException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public static Command parse(String fullCommand) throws EmptyTaskException, EmptyTimeException,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            CommandNotFoundException, WrongDateFormatException, IncompleteMessageException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String[] parseArray \u003d fullCommand.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String type \u003d parseArray[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            if (parseArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                command \u003d new ListCommand(null);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String time \u003d parseArray[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                command \u003d new ListCommand(date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            if (parseArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                throw new EmptyTaskException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String time \u003d parseArray[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                int index \u003d Integer.parseInt(time) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                command \u003d new DoneCommand(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            if (parseArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                throw new IncompleteMessageException(\"Please specify keyword. (´∀`)\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String keyword \u003d parseArray[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                command \u003d new FindCommand(keyword);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            if (parseArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                throw new EmptyTaskException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String rest \u003d parseArray[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                int index \u003d Integer.parseInt(rest) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                command \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            if (parseArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                throw new EmptyTaskException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String rest \u003d parseArray[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                switch(type) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    command \u003d new AddCommand(type, rest, null);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    if (rest.split(\"/\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        throw new EmptyTimeException(\"Please specify deadline using \\\"/by\\\". (´∀`)\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        String description \u003d rest.split(\" /\")[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            String time \u003d rest.split(\" /\")[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            command \u003d new AddCommand(type, description, date);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            throw new EmptyTimeException(\"Please don\u0027t leave the deadline blank~ (´∀`)\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    if (rest.split(\"/\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        throw new EmptyTimeException(\"Please specify event time using \\\"/at\\\". (´∀`)\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        String description \u003d rest.split(\" /\")[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            String time \u003d rest.split(\" /\")[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            command \u003d new AddCommand(type, description, date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            throw new EmptyTimeException(\"Please don\u0027t leave the event time blank~ (´∀`)\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                            throw new WrongDateFormatException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            throw new CommandNotFoundException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 128
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.exceptions.PathNoFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Returns an arraylist in which individual task is constructed from the data txt file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return ArrayList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @throws PathNoFoundException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public ArrayList\u003cTask\u003e readFile() throws PathNoFoundException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            String cwd \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            if (Files.exists(Paths.get(cwd + filePath))) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                List\u003cString\u003e allLines \u003d Files.readAllLines(Paths.get(cwd + filePath));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                for (String line : allLines) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    String[] info \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    String type \u003d info[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    int complete \u003d Integer.parseInt(info[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    String title \u003d info[2];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    switch(type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        Todo newTodo \u003d new Todo(title, complete);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        tasks.add(newTodo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        String deadline \u003d info[3];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        LocalDate deadlineInLocalDate \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(title, complete, deadlineInLocalDate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        String time \u003d info[3];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        LocalDate timeInLocalDate \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        Event newEvent \u003d new Event(title, complete, timeInLocalDate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        tasks.add(newEvent);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            throw new PathNoFoundException(\"No database found... A new database will be initialized!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Save the modified TaskArray in the hard disc"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param tasklist"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void saveFile(TaskList tasklist) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            String cwd \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            FileWriter fw \u003d new FileWriter(cwd + filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            for (Task task : tasklist.getTasks()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String data \u003d task.data();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                fw.write(data + System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 92
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Get the task with at the specific index in the array"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return a Task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return getTasks().get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Add a Task to the TaskList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Delete the task with at the specific index in the array"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Mark the task with at the specific index in the array as complete"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void completeTask(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        Task newTask \u003d tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        tasks.set(index, newTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 56
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected boolean hasTime \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Deadline(String description, LocalDate time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Deadline(String description, int isDone, LocalDate time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public boolean getHasTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return hasTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String timeString \u003d time.format(formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return super.toString().replace(\"[\", \"[D][\") + \" (by: \" + timeString + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String data() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"D\" + super.data() + \" | \" + time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 40
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected boolean hasTime \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Event(String description, LocalDate time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Event(String description, int isDone, LocalDate time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public boolean getHasTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return hasTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String timeString \u003d time.format(formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return super.toString().replace(\"[\", \"[E][\") + \" (at: \" + timeString + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String data() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"T\" + super.data() + \" | \" + time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 39
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected boolean hasTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Creates a new Task object which is not done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Creates a new Task object with description and isDone status"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Task(String description, int isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        if (isDone \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Reduces the count of tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public static void reduceOneTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        numberOfTasks--;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Gets the tick or cross sign which indicates is a task is complete"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public boolean getHasTime() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return hasTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Marks a task as finished"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Returns the message when a task is marked as done"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return mark-as-done Message"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String markAsDoneMessage() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"Nice!(^∇^) I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                + this.toString().replace(\"\\u2718\", \"\\u2713\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Returns the message when a new task is added"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String addMessage() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"Got it.(^∇^) I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                + this.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Returns the message when a task is deleted"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String deleteMessage() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"Got it.(^∇^) I\u0027ve deleted this task:\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                + this.toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Returns info about the task in the format for data storage"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return A string"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String data() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \" | \" + (isDone"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                ? \"1\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 111
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    protected boolean hasTime \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Todo(String description, int isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return super.toString().replace(\"[\", \"[T][\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String data() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"T\" + super.data();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 22
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //        return sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //    public void showLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String displayWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"Hello! I am YURINA Chan.\\nWhat can I do for you? ᕕ( ᐛ )ᕗ\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String displayBye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"Bye~ Hope to see you again soon! ∠( ᐛ 」∠)＿\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return \"There is no data file found. \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                + \"A new file will be created at the end of the session. ⊂(￣▽￣)⊃\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String displayAddTaskMessage(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return task.addMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String displayDeleteMessage(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return task.deleteMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String displayMarkAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return task.markAsDoneMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String displayErrorMessage(Exception ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        return ex.getMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Shows all the tasks that are still in the list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String showTask(TaskList taskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        if (taskList.getTasks().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return \"This is no task in your task list yet. Add one now! (/^▽^)/\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            int no \u003d 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String prefix \u003d task.toString().substring(0, 7);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String end \u003d task.toString().substring(7);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                String appended \u003d prefix + no + \". \" + end + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                output \u003d output + appended;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                no++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Shows the tasks on certain day"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String showTask(TaskList taskList, LocalDate date) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        String dateString \u003d date.format(formatter);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ArrayList\u003cTask\u003e filtered \u003d tasks.stream().filter(Task::getHasTime).filter(task -\u003e task.getTime().equals(date))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        if (filtered.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return \"No tasks on this day! Chill Chill~ ٩(˘◡˘)۶\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            String output \u003d \"On \" + dateString + \", you have the following tasks: \\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            for (Task task : filtered) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                output \u003d output + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * Shows the tasks containing certain keywords"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public String showTask(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        ArrayList\u003cTask\u003e filtered \u003d tasks.stream().filter(task -\u003e task.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        if (filtered.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return \"Yurina can\u0027t find any relevant tasks. (T▽T)\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            for (Task task : filtered) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                output \u003d output + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 117
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 19
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void testNewDeadline(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            Command command \u003d Parser.parse(\"deadline laundry /by 2020-08-23\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(\"2020-08-23\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            AddCommand command1 \u003d new AddCommand(\"deadline\", \"laundry\", date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            System.out.println(command1.equals(command));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            assertEquals(command1,command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    public void testNewTodo(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            Command command \u003d Parser.parse(\"todo laundry\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            AddCommand command1 \u003d new AddCommand(\"todo\", \"laundry\", null);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            System.out.println(command1.equals(command));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "            assertEquals(command1,command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 36
    }
  },
  {
    "path": "src/test/java/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "package test.java.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SherryWu178"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "SherryWu178": 4,
      "-": 34
    }
  }
]
