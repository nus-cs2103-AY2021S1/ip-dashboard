{
  "authorDailyContributionsMap": {
    "Avalionnet": [
      {
        "date": "2020-08-18",
        "commitResults": [
          {
            "hash": "eda0708f9948b4baec306f1fb09184e8ba58b0eb",
            "messageTitle": "Initialised and completed Level 1 of Duke Project. Added scanner to take in user input and detection of \"bye\" command for user to quit program.",
            "messageBody": "",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 34,
                "deletions": 10
              },
              "bat": {
                "insertions": 21,
                "deletions": 21
              },
              "sh": {
                "insertions": 37,
                "deletions": 37
              },
              "md": {
                "insertions": 55,
                "deletions": 55
              }
            }
          },
          {
            "hash": "643a6abb4598a245d3dd1d19f6320f9773ab05db",
            "messageTitle": "Completed Level 2 of Duke Project. Users can now add tasks to their to-do list.",
            "messageBody": "",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 33,
                "deletions": 1
              }
            }
          },
          {
            "hash": "9e3c24420659af949fe861adcd833d1ed3c2c7a3",
            "messageTitle": "Completed Level 3 of Duke Project",
            "messageBody": "Implemented method to mark task as done.\n",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 27,
                "deletions": 2
              }
            }
          },
          {
            "hash": "caf233d0fd74f38eef1c953a8bce8ddc48d544e9",
            "messageTitle": "Completed Level 4 of Duke Project.",
            "messageBody": "Implemented todo, event and deadline functionalities for users.\n",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 70,
                "deletions": 4
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-19",
        "commitResults": [
          {
            "hash": "6ecf9b038e661b0fa8bd121610c8818a8b293764",
            "messageTitle": "Completed Automated Text UI Testing",
            "messageBody": "Configured the runtest.bat file to work for semi automated ui text testing for users.\n",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 16,
                "deletions": 0
              },
              "java": {
                "insertions": 1,
                "deletions": 1
              },
              "bat": {
                "insertions": 5,
                "deletions": 3
              }
            }
          },
          {
            "hash": "46ca27313b405a025c7bc01152547d503ae5be97",
            "messageTitle": "Completed Level 5 of Duke Project",
            "messageBody": "Added DukeException class to handle duke related errors.\nAccounts for the following errors:\n- wrong command\n- blank description for a command\n- wrong use of keywords like /at and /by when setting dates\n",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 34,
                "deletions": 9
              }
            }
          },
          {
            "hash": "93c597a000cf976d84a46e225a18c3533a321404",
            "messageTitle": "Completed Level 6 of Duke Project",
            "messageBody": "Added method for deleting entries in todo list.\n",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 19,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-24",
        "commitResults": [
          {
            "hash": "68282937316f6dcf73f1496578a09d6723bdbfe9",
            "messageTitle": "Add save functionality and complete level 7",
            "messageBody": "Duke can now save tasks onto the hard disk of its user.\n\nTasks entered by the user will be deleted upon exiting duke.\n\nHence, saving a local copy of these tasks allows users to continue from where they left off.\n\nLet\u0027s create a new class to save all changes by our users named Storage.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 0
              },
              "java": {
                "insertions": 218,
                "deletions": 92
              }
            }
          },
          {
            "hash": "94e639eacf4afc699ed2a802088791cc9c005c28",
            "messageTitle": "Add support for LocalDate and LocalTime variable types for Duke user inputs",
            "messageBody": "Duke can now understand proper date and time from user inputs.\n\nSaving date and time data as string variables directly may result in wrong formatting.\n\nHence, by allowing duke to recognise proper date and time data, we are\nable to avoid these unforeseen bugs.\n\nLet\u0027s parse our user input to support LocalDate and LocalTime types to store deadlines.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 93,
                "deletions": 43
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-25",
        "commitResults": [
          {
            "hash": "0160d467bc18740d4b144b56ae7a72ddb0862fe2",
            "messageTitle": "Package classes and refactor duke to follow object-oriented design",
            "messageBody": "Refactor the code to extract out closely related code as classes.\n\nDuke commands have some common behaviors which cause code duplication.\n\nExtracting common behaviors into super and abstract classess allows us to use polymorphism when dealing with duke commands and ui.\n\nLet\u0027s refactor all closely related code into classess.\n",
            "tags": [
              "A-Packages",
              "A-MoreOOP"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 22,
                "deletions": 16
              },
              "java": {
                "insertions": 509,
                "deletions": 268
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-26",
        "commitResults": [
          {
            "hash": "ad3ededd0936d93ce1745eb24cc870a487ef80ac",
            "messageTitle": "Add JUnit tests for some Command, Task and Exception classes",
            "messageBody": "",
            "tags": [
              "A-JUnit"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 135,
                "deletions": 0
              }
            }
          },
          {
            "hash": "e5e7cfaaa46b47939ff01c306ffc1a2a262926ea",
            "messageTitle": "Add search functionality for duke",
            "messageBody": "Users can now find a task by searching for a keyword.\n\nPreviously, users have to go through the whole list of task to find what they are looking for which can be inefficient.\n\nLet\u0027s add a search feature for users to find the tasks they want by searching for a keyword.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 72,
                "deletions": 4
              }
            }
          },
          {
            "hash": "bb2926415a3db0d2d0ad4d215f1c8022bd36a546",
            "messageTitle": "Modify code to follow java coding standards",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 24,
                "deletions": 10
              }
            }
          },
          {
            "hash": "5f17fb8d6b047f4a1935747103e6e356cecbf4be",
            "messageTitle": "Add JavaDoc for all non-private classes and methods",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 353,
                "deletions": 4
              }
            }
          },
          {
            "hash": "a22803473a035ffe90e81625b101beecd4d34045",
            "messageTitle": "Add JavaDoc for FindCommand and its dependancies",
            "messageBody": "",
            "tags": [
              "A-Jar"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 25,
                "deletions": 0
              }
            }
          },
          {
            "hash": "35a407fa441563b7e435d59c80e276f7e4667ac4",
            "messageTitle": "Fix bugs encountered on loading data file",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 7
              },
              "java": {
                "insertions": 78,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-31",
        "commitResults": [
          {
            "hash": "e26cbb1cb53fb8c8505ef7f0a3655815db9c0852",
            "messageTitle": "Remedy coding style violations for duke classes",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 2,
                "deletions": 2
              },
              "java": {
                "insertions": 72,
                "deletions": 52
              }
            }
          },
          {
            "hash": "d741f1a0cb1da275304f33dbace99ef09c41a6fd",
            "messageTitle": "Add CheckStyle to gradle and refactor packages",
            "messageBody": "",
            "tags": [
              "A-CheckStyle"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 1
              },
              "java": {
                "insertions": 101,
                "deletions": 92
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "Avalionnet": {
      "java": 1307,
      "md": 0,
      "fxml": 0,
      "sh": 0,
      "bat": 5,
      "gradle": 2,
      "txt": 21
    }
  },
  "authorContributionVariance": {
    "Avalionnet": 68151.53
  },
  "authorDisplayNameMap": {
    "Avalionnet": "CS2103T-T12-4 LOW .. LIM"
  }
}
