[
  {
    "path": "src/main/java/Botbot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Botbot {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        Chat chat \u003d new Chat();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        while (chat.isRunning()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                chat.handleInput(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            } catch (BotbotException e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 13,
      "-": 3
    }
  },
  {
    "path": "src/main/java/BotbotException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class BotbotException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    BotbotException(String e) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"    oops! \" + e + \"\\n\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 5
    }
  },
  {
    "path": "src/main/java/Chat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Chat {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private boolean isRunning;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private NumberedList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    Chat() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        isRunning \u003d true;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        list \u003d new NumberedList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static void greet() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String logo \u003d \"\\n.-. .-\u0027)                .-\u0027) _  .-. .-\u0027)                .-\u0027) _\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \"\\\\  ( OO )              (  OO) ) \\\\  ( OO )              (  OO) )\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" ;-----.\\\\  .-\u0027),-----. /     \u0027._ ;-----.\\\\  .-\u0027),-----. /     \u0027._\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | .-.  | ( OO\u0027  .-.  \u0027|\u0027--...__)| .-.  | ( OO\u0027  .-.  \u0027|\u0027--...__)\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | \u0027-\u0027 /_)/   |  | |  |\u0027--.  .--\u0027| \u0027-\u0027 /_)/   |  | |  |\u0027--.  .--\u0027\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | .-. `. \\\\_) |  | |  |   |  |   | .-. `. \\\\_) |  | |  |   |  |\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | |  \\\\  |  \\\\ |  | |  |   |  |   | |  \\\\  |  \\\\ |  | |  |   |  |\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | \u0027--\u0027  /   `\u0027  \u0027-\u0027  \u0027   |  |   | \u0027--\u0027  /   `\u0027  \u0027-\u0027  \u0027   |  |\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" `------\u0027      `-----\u0027    `--\u0027   `------\u0027      `-----\u0027    `--\u0027\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        System.out.println(\"helluu! I\u0027m\\n\" + logo + \"\\nwhat would you like me to do?\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    boolean isRunning() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return isRunning;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    void handleInput(String input) throws EmptyTaskException, EmptyTaskNumberException,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            InvalidFormatException, NoSuchCommandException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            list();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            delete(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"delete\") || (input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0, 7).equals(\"delete \"))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskNumberException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 5).equals(\"done \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            markAsDone(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"done\") || (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"done \"))) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskNumberException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 5).equals(\"todo \")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            addToList(new Todo(input));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"todo\") || (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"todo \"))) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskException(\"a todo\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 10 \u0026\u0026 input.substring(0, 9).equals(\"deadline \")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            if (!input.contains(\" /by \")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                throw new InvalidFormatException(Deadline.FORMAT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            addToList(new Deadline(input));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"deadline\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                || (input.length() \u003e\u003d 9 \u0026\u0026 input.substring(0, 9).equals(\"deadline \"))) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskException(\"a deadline\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0, 6).equals(\"event \")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            if (!input.contains(\" /at \")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                throw new InvalidFormatException(Event.FORMAT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            addToList(new Event(input));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"event\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                || (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"event \"))) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskException(\"an event\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new NoSuchCommandException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    void addToList(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int numOfTasks \u003d list.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        System.out.println(String.format(\"    ok! I\u0027ve added this task:\\n      %s\\n    you now have %d task\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + (numOfTasks \u003e 1 ? \"s\" : \"\") + \" in your list\\n\", task, numOfTasks));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    void delete(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            int id \u003d Integer.parseInt(input.substring(\"delete \".length())) - 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            Task task \u003d list.get(id);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            list.remove(id);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            int numOfTasks \u003d list.size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            System.out.println(String.format(\"    ok! I\u0027ve removed this task:\\n      %s\\n    you now have \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    + \"%d task\" + (numOfTasks \u003e 1 ? \"s\" : \"\") + \" in your list\\n\", task, numOfTasks));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            System.out.println(\"    oops! invalid task number!\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    void list() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (list.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            System.out.println(\"    your list is empty!\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            System.out.println(\"    here\u0027s your list:\\n\" + list);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    void markAsDone(String input) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            int id \u003d Integer.parseInt(input.substring(\"done \".length())) - 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            Task task \u003d list.get(id);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            System.out.println(\"    nice! I\u0027ve marked this task as done:\\n      \" + task + \"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            System.out.println(\"    oops! invalid task number!\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    void exit() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        System.out.println(\"    bye! see you soon!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        isRunning \u003d false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 110
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    protected static final String FORMAT \u003d \"deadline \u003ctask\u003e /by \u003cdeadline\u003e\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    Deadline(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(extractNameFromCommand(command));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int index \u003d command.indexOf(\"/by \") + 4;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        by \u003d command.substring(index);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static String extractNameFromCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int index \u003d command.indexOf(\"/by \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return command.substring(9, index);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return String.format(\"[%c] [%s] %s (by: %s)\", \u0027D\u0027, getStatusIcon(), description, by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 20
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class EmptyTaskException extends BotbotException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    EmptyTaskException(String e) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"the description of \" + e + \" cannot be empty!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class EmptyTaskNumberException extends BotbotException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    EmptyTaskNumberException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"the task number to be marked as done cannot be empty!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    protected static final String FORMAT \u003d \"event \u003cevent\u003e /at \u003ctime\u003e\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    Event(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(extractNameFromCommand(command));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int index \u003d command.indexOf(\"/at \") + 4;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        at \u003d command.substring(index);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static String extractNameFromCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int index \u003d command.indexOf(\"/at \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return command.substring(6, index);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return String.format(\"[%c] [%s] %s (at: %s)\", \u0027E\u0027, getStatusIcon(), description, at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 20
    }
  },
  {
    "path": "src/main/java/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class InvalidFormatException extends BotbotException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    InvalidFormatException(String e) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"invalid format! please follow \u0027\" + e + \"\u0027!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 5
    }
  },
  {
    "path": "src/main/java/NoSuchCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class NoSuchCommandException extends BotbotException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    NoSuchCommandException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"sorry, I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 5
    }
  },
  {
    "path": "src/main/java/NumberedList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class NumberedList\u003cT\u003e extends LinkedList\u003cT\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    NumberedList() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            result +\u003d String.format(\"      %s. %s\\n\", i + 1, this.get(i));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 17
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    Todo(String command) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(extractNameFromCommand(command));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static String extractNameFromCommand(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return command.substring(5);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return String.format(\"[%c] [%s] %s\", \u0027T\u0027, getStatusIcon(), description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "event "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "delete"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Botbot.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "java -classpath ..\\bin Botbot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Botbot.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "java -classpath ../bin Botbot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 3,
      "-": 36
    }
  }
]
