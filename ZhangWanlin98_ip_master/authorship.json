[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "# Duke.Duke.main.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.Duke.main.Duke.java` file, right-click it, and choose `Run Duke.Duke.main.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 17,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Duke is a desktop chat bot that can help you manage your tasks. It is optimized by a "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Command Line interface and automatic save such that you can note it faster than conventional "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "task manager application.  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### 1. Task assignment"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Add tasks conveniently with easy commands:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* Assign"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    * Simple todo tasks, `todo`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    * Tasks with deadline, `deadline`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    * Events to attend, `event`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* Mark tasks as done, `done`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* Delete tasks, `delete`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### 2. Task view"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "View all tasks via `list`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### 3. Various time format support"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Use different time format for the convenience of time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Supported formats:\u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|Format | user input time | output|"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|:----- | :-----: | ----: |"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|HHmm | 2359 | Wednesday_Sep_16_2020_23:59| "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|d | 16 | Wednesday_Sep_16_2020_00:00|"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|d_HHmm | 16_2300 | Wednesday_Sep_16_2020_23:00|"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|M/d | 9/16 | Wednesday_Sep_16_2020_00:00|"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|M-d | 9-16 | Wednesday_Sep_16_2020_00:00|"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|M/d_HHmm | 9/16_2300 | Wednesday_Sep_16_2020_23:00|"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|M-d_HHmm | 9-16_2300 | Wednesday_Sep_16_2020_23:00|"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|yyyy-M/d | 2020/9/16 | Wednesday_Sep_16_2020_00:00|"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|yyyy-M-d | 2020-9-16 | Wednesday_Sep_16_2020_00:00|"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|yyyy/M/d_HHmm | 2020/9/16_2300 | Wednesday_Sep_16_2020_23:00|"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "|yyyy-M-d_HHmm | 2020-9-16_2300 | Wednesday_Sep_16_2020_23:00|"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Command format: \u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Words surrounded by `\u003c\u003e` are the input from the users.\u003cbr\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Words surrounded by `[]` are the command from the users.\u003cbr\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "e.g. `[todo] \u003cdetail\u003e` means the user needs to type `todo detail`, such as `todo work`."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### View all functions"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Show all the functions and respective usage, `help`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `todo` - Create a todo task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[todo] \u003cdetail\u003e`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* `todo homework` creates a new todo task `homework` that is yet done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![todoImage](./image/todo.png)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `deadline` - Create a task with a deadline"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[deadline] \u003cspace\u003e \u003cdetail\u003e \u003cspace\u003e \u003c/by\u003e \u003cDate and/or time\u003e`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* `deadline UG /by 16_2359` creates a new deadline task `UG (by:Wednesday_Sep_16_2020_23:59)`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* More time format can be referred in `3.Various time format support`."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![deadlineImage](./image/deadline.png)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `event` - Create a event to attend"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[event] \u003cspace\u003e \u003cdetail\u003e \u003cspace\u003e \u003c/on\u003e \u003cDate and/or time\u003e`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* `event midterm /on 16_1300` creates a new deadline task `midterm (on:Wednesday_Sep_16_2020_13:00)`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* More time format can be referred in `3.Various time format support`."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![eventImage](./image/event.png)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[done] \u003cindex\u003e`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* `done 1` mark the first task in the list as done."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![doneImage](./image/done.png)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `delete` - delete a task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[delete] \u003cindex\u003e`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "*`delete 1` deletes the first task in the list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![deleteImage](./image/delete.png)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `list` - view all tasks in the list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[list]`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![listImage](./image/list.png)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `clear` - delete all the tasks"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[clear]`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![clearImage](./image/clear.png)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `find` - find the tasks containing each or all keywords from the user"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[find] \u003cspace\u003e \u003ckeywords\u003e`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* `find tutorial lesson` finds tasks that contains `tutorial` or `lesson` or `tutorial lesson`."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![findImage](./image/find.png)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `update` - update the detail or time of an existing task"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `[update] \u003cspace\u003e \u003cindex\u003e \u003cspace\u003e \u003cdetail/time\u003e \u003cspace\u003e \u003c/to\u003e \u003ccontent\u003e`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* `update 2 detail to CS2103T lesson` update the detail of the 2nd task to `CS2103T lesson`. "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "* `update 3 time /to 1600` update the time of the 3rd task to `2359` of the present day."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![updateDetailImage](./image/update_detail.png)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![updateTimeImage](./image/update_time.png)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "### `bye` - exit the program"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "![byeImage](./image/bye.png)"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 156,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import static javafx.application.Application.launch;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Workarounds classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.ui.controller.MainWindow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            AnchorPane anchorPane \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Scene scene \u003d new Scene(anchorPane);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            //Image is taken from https://wiki.openjdk.java.net/display/duke/Gallery."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a bye command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(Statement.BYE.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 14
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileEditor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a clear command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class ClearCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        DukeFileEditor deleteAll \u003d new DukeFileEditor(Directory.FILEDIRECTORY);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        deleteAll.clearFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(Statement.CLEAR.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 19
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a command interface."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Executes a command and makes respective response to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a response to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    Response process() throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 16
    }
  },
  {
    "path": "src/main/java/duke/command/CommandString.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * a class that contains all String for the commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class CommandString {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    //Name of different commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String UPDATE \u003d \"update\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String UPDATE_TIME \u003d \"time\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String UPDATE_DETAIL \u003d \"detail\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    //Descriptions of different commands."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String TODO_DESCRIPTION \u003d \"Create a todo task\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String DEADLINE_DESCRIPTION \u003d \"Create a deadline task\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String EVENT_DESCRIPTION \u003d \"Create a event task\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String BYE_DESCRIPTION \u003d \"Exit the Duke program\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String LIST_DESCRIPTION \u003d \"Lists all stored tasks\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String DONE_DESCRIPTION \u003d \"Set a task as done\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String DELETE_DESCRIPTION \u003d \"Delete a task\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String FIND_DESCRIPTION \u003d \"Find tasks by inputting keywords\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String CLEAR_DESCRIPTION \u003d \"Clear all stored tasks\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String UPDATE_DESCRIPTION \u003d \"Update a task by time or detail\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static final String[] namesAndFunctions \u003d new String[]{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + TODO + \"] \u003cdetail\u003e\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + DEADLINE + \"] \u003cdetail\u003e /by \u003cwhen\u003e\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + EVENT + \"] \u003cdetail\u003e /on \u003cwhen\u003e\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + BYE + \"]\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + LIST + \"]\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + DONE + \"] \u003ctask index\u003e\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + DELETE + \"] \u003ctask index\u003e\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + FIND + \"] \u003ckeyword(s)\u003e\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + CLEAR + \"]\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"[\" + UPDATE + \"] \u003ctask index\u003e \u003cdetail/time\u003e /to \u003ccontent you want to change\u003e\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static final String[] descriptions \u003d new String[]{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        TODO_DESCRIPTION, DEADLINE_DESCRIPTION, EVENT_DESCRIPTION, BYE_DESCRIPTION,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        LIST_DESCRIPTION, DONE_DESCRIPTION, DELETE_DESCRIPTION, FIND_DESCRIPTION,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        CLEAR_DESCRIPTION, UPDATE_DESCRIPTION};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns the stringBuilder of all function names and descriptions."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a stringBuilder of all function names and descriptions."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static StringBuilder showHelp() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String format \u003d \"%s - %s\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        StringBuilder result \u003d new StringBuilder(Statement.HELP.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assert namesAndFunctions.length \u003d\u003d descriptions.length : \"check the length of names and descriptions\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c namesAndFunctions.length; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            result.append(String.format(format, namesAndFunctions[i], descriptions[i]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 70
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a deadline command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final String detail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final Time by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a deadline command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param detail the detail of the deadline command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param by the time of the deadline command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public DeadlineCommand(String detail, Time by) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.detail \u003d detail;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task \u003d new Deadline(detail, by.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        DukeFileWriter data \u003d new DukeFileWriter(Directory.FILEDIRECTORY, true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        data.writeToFile(task.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Format\u003c\u003e(task).toString()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileEditor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.FormatString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a delete command that deletes respective"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * in Duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final int num;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param num the index of the task to be deleted."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public DeleteCommand(int num) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        TaskList\u003cTask\u003e taskList \u003d Parser.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task \u003d taskList.getTaskList().get(num - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        DukeFileEditor dukeFileEditor \u003d new DukeFileEditor(Directory.FILEDIRECTORY);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        dukeFileEditor.deleteLine(num);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String response \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Statement.DELETE.toString()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        + task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        + FormatString.NEXT_LINE.toString()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        + String.format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        (Statement.REPORT.toString(), taskList.getTaskList().size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(response);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileEditor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final int num;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a \u003ccode\u003eDoneCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param num the index of the task to be marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public DoneCommand(int num) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        TaskList\u003cTask\u003e taskList \u003d Parser.getTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task \u003d taskList.getTaskList().get(num - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        DukeFileEditor dukeFileEditor \u003d new DukeFileEditor(Directory.FILEDIRECTORY);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        dukeFileEditor.setTaskDone(num);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(Statement.DONE.toString() + task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 34
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a event command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final String detail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final Time on;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs an event command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param detail the detail of the event command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param on the time of the deadline command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public EventCommand(String detail, Time on) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.detail \u003d detail;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task \u003d new Event(detail, on.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        DukeFileWriter data \u003d new DukeFileWriter(Directory.FILEDIRECTORY, true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        data.writeToFile(task.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Format\u003c\u003e(task).toString()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 37
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a find command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final String[] content;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a \u003ccode\u003eFindCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param content a string of keywords to be matched with tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public FindCommand(String[] content) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        TaskList\u003cTask\u003e taskList \u003d new TaskList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        DukeFileReader dukeFileReader \u003d new DukeFileReader(Directory.FILEDIRECTORY);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskList \u003d dukeFileReader.matchContent(content);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(Statement.FIND.toString() + taskList.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 32
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a help command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(CommandString.showHelp().toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 13
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a list command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        TaskList\u003cTask\u003e taskList \u003d Parser.getTaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(Statement.LIST.toString() + taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 18
    }
  },
  {
    "path": "src/main/java/duke/command/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Make response to the user\u0027s input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected String response;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a Response."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param response A string which"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                 is the content of"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                 response."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response(String response) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.response \u003d response;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Format\u003c\u003e(response).toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 26
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a todo command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class TodoCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final String detail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Construct a todo command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param detail the detail of the todo task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public TodoCommand(String detail) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.detail \u003d detail;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task \u003d new Todo(detail);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        DukeFileWriter data \u003d new DukeFileWriter(Directory.FILEDIRECTORY, true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        data.writeToFile(task.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                new Format\u003c\u003e(task).toString()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 35
    }
  },
  {
    "path": "src/main/java/duke/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileEditor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a update command which can update time or"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * detail of one task in the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class UpdateCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final int lineNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final String detailOrTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a update command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param lineNum the index of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param command command to change time or detail."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param input the updated information."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public UpdateCommand(int lineNum, String command, String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.lineNum \u003d lineNum;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.detailOrTime \u003d command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        DukeFileEditor editor \u003d new DukeFileEditor(Directory.FILEDIRECTORY);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task \u003d editor.update(lineNum, detailOrTime, input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(new Format\u003c\u003e(task).updateFormat());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Consists all exceptions related to Duke input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DukeException extends Exception implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a \u003ccode\u003eDukeException\u003c/code\u003e with a message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param msg a \u003ccode\u003eExceptions\u003c/code\u003e field containing a message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public DukeException(Exceptions msg) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(msg.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response process() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(this.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 23
    }
  },
  {
    "path": "src/main/java/duke/exception/Exceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Contains all String for the exception error message."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public enum Exceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    NUMBEREXCESSEXCEPTION {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"OOPS!!! It seems like you don\u0027t have this option\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"Enter list to see options\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    NUMBERFORMATEXCEPTION {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"OOPS!!! The format of your index number is incorrect\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    INPUTFORMATEXCEPTION {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    EMPTYTASKEXCEPTION {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"OOPS!!! The description of the task cannot be empty\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    FILEEXCEPTION {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"OOPS!!!\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"The file exists but is a directory rather than a regular file,\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"or does not exist but cannot be created,\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"or cannot be opened for any other reason\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    TIMEFORMATEXCEPTION {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"OOPS!!! Your time format seems incorrect,\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"use \u003chelp\u003e to get the correct format\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    FINDDETAILMISSINGEXCEPTION {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"OOPS!!! So what would you like to find?\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"Try to add something behind \u0027find\u0027.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    FILEALREADYEXIST {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"File to be created already exists\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    WRITINGEXCEPTION {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Errors occurs during writing into the file\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    UPDATEFORMATEXCEPTION {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Your update command format is incorrect.\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"please use: update \u003cnumber to update\u003e \u003cdetail/time\u003e /to \u003ccontent\u003e\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 83
    }
  },
  {
    "path": "src/main/java/duke/main/Directory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Contains the directories needed for the operation of Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Directory {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static final String FILEDIRECTORY \u003d \"data/Duke.txt\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 8
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents the main control class to run Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a Duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Gets the Ui object in Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return the Ui object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns the response after user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param input string of user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return the response to the user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Response getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return ui.getCommand(input).process();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 39
    }
  },
  {
    "path": "src/main/java/duke/main/Statement.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Consists of all pattern strings printed out by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public enum Statement {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    GREET {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Wonderful! It is nice to see you!\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"Is there anything I can help?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"It is nice to talk to you.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + \"Hope to see you again!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    FIND {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Here are the matching tasks in your list\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    CLEAR {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Your tasks have been cleared.\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    UPDATE {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Got it. I\u0027ve update the task\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    TASKADDED {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Got it. I\u0027ve added this task\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    REPORT {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    HELP {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"Glad to help! These are the functions I have now.\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 85
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.Exceptions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Makes general approaches to access a file given a directory."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DukeFile {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected Path path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a Duke file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param path a string which contains"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             the directory of the file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             that is to be read."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public DukeFile(String path) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.path \u003d Paths.get(path);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Checks if the file in the path exists."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return true if the file described in the path exists."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected boolean doesFileExist() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return Files.exists(path);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Creates a new file in the path."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected void createFile() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Files.createDirectories(path.getParent());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Files.createFile(path);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            throw new DukeException(Exceptions.FILEALREADYEXIST);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Reads the content of the file in the path."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a list of Strings that represent the tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected List\u003cString\u003e readFile() throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return Files.readAllLines(path);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            throw new DukeException(Exceptions.FILEEXCEPTION);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Writes the taskStrings List into the file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * with the class field path."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param taskStrings a List of String with task information."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected void write(List\u003cString\u003e taskStrings) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            BufferedWriter writer \u003d Files.newBufferedWriter(path);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            for (String taskString : taskStrings) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                writer.write(taskString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            throw new DukeException(Exceptions.WRITINGEXCEPTION);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 84
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeFileEditor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.CommandString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.FormatString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Edits the file with a provided path."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DukeFileEditor extends DukeFile {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a Duke file editor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param path a string which contains"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             the directory of the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             that is to be read."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public DukeFileEditor(String path) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(path);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Deletes the task recorded in the file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * provided by the Directory class"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * with the corresponding line number."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param lineNum the index of task that the user want to"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                delete."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void deleteLine(int lineNum) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (doesFileExist()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            List\u003cString\u003e taskStrings \u003d super.readFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            taskStrings.remove(lineNum - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            super.write(taskStrings);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Clears all tasks recorded in the file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * with directory in the FileDirectory in Directory class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void clearFile() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        List\u003cString\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super.write(newList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Sets the corresponding"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * task to be marked as done in Duke.txt."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param lineNum the index of task that the user want to"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                delete."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void setTaskDone(int lineNum) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (doesFileExist()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            List\u003cString\u003e taskStrings \u003d readFile();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String requiredTask \u003d taskStrings.remove(lineNum - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String editedTask \u003d requiredTask.substring(0, 4)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + FormatString.TICK.toString()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + requiredTask.substring(5);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            taskStrings.add(lineNum - 1, editedTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            write(taskStrings);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Updates the corresponding task and returns the string of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param lineNum the lineNum of the Task shown by list command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param input the detail that the user wants to change to."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return the string of the Task being updated."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Task update(int lineNum, String command, String input) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        List\u003cString\u003e taskStrings \u003d readFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String[] requiredTask \u003d taskStrings.remove(lineNum - 1).split(\" \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int len \u003d requiredTask.length;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        StringBuilder editedTask \u003d new StringBuilder(requiredTask[0] + \" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (command.equals(CommandString.UPDATE_DETAIL)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (requiredTask[0].substring(1, 2).equals(\"T\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                editedTask.append(input);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                editedTask.append(input).append(\" \")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        .append(requiredTask[len - 2])"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        .append(\" \")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        .append(requiredTask[len - 1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } else if (command.equals(CommandString.UPDATE_TIME)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            for (int i \u003d 1; i \u003c len - 1; i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                editedTask.append(requiredTask[i]).append(\" \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Time time \u003d new Time(input);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            editedTask.append(time.toString()).append(\")\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            editedTask \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assert editedTask !\u003d null : \"command is neither time or detail\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskStrings.add(lineNum - 1, editedTask.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        write(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        write(taskStrings);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return Format.decodeTask(editedTask.toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 114
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeFileReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Reads the file in the path directory."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DukeFileReader extends DukeFile {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a Duke file reader."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param path a string which contains"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             the directory of the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             that is to be read."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public DukeFileReader(String path) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(path);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Loads all the strings back to the Parser list as tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public TaskList\u003cTask\u003e loadFile() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (!doesFileExist()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        TaskList\u003cTask\u003e taskList \u003d new TaskList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        List\u003cString\u003e taskStrings \u003d readFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (String taskString : taskStrings) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            taskList.addMemory(Format.decodeTask(taskString));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Finds the tasks whose detail contains the content."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param strings user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public TaskList\u003cTask\u003e matchContent(String[] strings) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        TaskList\u003cTask\u003e taskList \u003d new TaskList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (doesFileExist()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            List\u003cString\u003e taskStrings \u003d readFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            boolean[] check \u003d new boolean[taskStrings.size()];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Arrays.fill(check, false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            for (String content : strings) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                for (int i \u003d 0; i \u003c taskStrings.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    if (taskStrings.get(i).contains(content) \u0026\u0026 !check[i]) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        check[i] \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        taskList.addMemory(Format.decodeTask(taskStrings.get(i)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 72
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeFileWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.Exceptions;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Writes the information into the file provided in the Directory class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DukeFileWriter extends DukeFile {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private boolean appendToFile;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a Duke file writer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param path a string which contains"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             the directory of the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             that is to be read."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param appendToFile a boolean of if the user want to make"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                       the DukeFileWriter work immediately."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public DukeFileWriter(String path, boolean appendToFile) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.appendToFile \u003d appendToFile;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Writes the input into the file whose path is from the"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Directory class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param input the input from the users."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void writeToFile (String input) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (appendToFile) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Files.write(path, (input + \"\\n\").getBytes(),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        StandardOpenOption.APPEND);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                List\u003cString\u003e inputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                inputList.add(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                write(inputList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException | DukeException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            throw new DukeException(Exceptions.WRITINGEXCEPTION);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description a string describing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param by a string recording the time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *           of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.time \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents an Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description a string describing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param on a string recording the time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *           of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Event(String description, String on) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.time \u003d on;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (on: \" + time + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.FormatString;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Simulates the tasks that the users give to Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description a string describing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns tick when the task is done,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * cross when the task is not done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a string showing a tick or"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         cross as described above."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                ? \"[\" + FormatString.TICK.toString() + \"]\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                : \"[\" + FormatString.CROSS.toString() + \"]\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns true if isDone is true."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return true if isDone is true."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 54
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a list that contains different tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * @param \u003cT\u003e The data type of the object in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class TaskList\u003cT\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private List\u003cT\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Adds new tasks into"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * the TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param event new task to be added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void addMemory(T event) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.taskList.add(event);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Gets all tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return the arrayList which stores all the tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public List\u003cT\u003e getTaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        StringBuilder results \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d this.taskList.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (size !\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            for (int i \u003d 1; i \u003c size; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                results.append(i).append(\". \").append(taskList.get(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            results.append(size).append(\". \").append(taskList.get(size - 1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return results.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description a string describing"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                    the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 22
    }
  },
  {
    "path": "src/main/java/duke/tools/Format.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.tools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Handles the format of strings that is to be printed out by Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * @param \u003cT\u003e The data type of the object in the Format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Format\u003cT\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final T content;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs Format object with content."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param content object of any type."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Format(T content) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns a string whose content has been"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * shortened by eliminating the extra spaces at the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * beginning of the content and at the end of the content."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return the above described Format object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static String shorten(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int length \u003d input.length();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int frontPos \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int backPos \u003d length - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (frontPos \u003c length \u0026\u0026 input.charAt(frontPos) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            frontPos++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (backPos \u003e\u003d 0 \u0026\u0026 input.charAt(backPos) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            backPos--;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (frontPos \u003e backPos) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return FormatString.EMPTY.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return input.substring(frontPos, backPos + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This method only can be used when the content"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * is of the type of String."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns task whose output of toString method"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * is equal to the content."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return task whose output of toString method"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         is equal to the content."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static Task decodeTask(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String[] inputArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        char typeOfTask \u003d inputArray[0].charAt(1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (inputArray[0].substring(4, 5).equals(FormatString.TICK.toString())) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        StringBuilder details \u003d new StringBuilder(inputArray[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int lenOfArray \u003d inputArray.length;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (typeOfTask \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            for (int i \u003d 2; i \u003c lenOfArray; i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                details.append(\" \").append(inputArray[i]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            task \u003d new Todo(details.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int lenOfLastInArray \u003d inputArray[lenOfArray - 1].length();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String time \u003d inputArray[lenOfArray - 1]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    .substring(0, lenOfLastInArray - 1)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    .substring(0, lenOfLastInArray - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            for (int i \u003d 2; i \u003c lenOfArray - 2; i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                details.append(\" \").append(inputArray[i]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (typeOfTask \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                task \u003d new Deadline(details.toString(), time);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                task \u003d new Event(details.toString(), time);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns a string with update statement."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Especially designed for \u003ccode\u003eUpdateCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a string with update statement."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String updateFormat() throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.reloadTaskList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return Statement.UPDATE.toString()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                + content"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                + FormatString.NEXT_LINE.toString()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                + String.format(Statement.REPORT.toString(), Parser.getTaskList().getTaskList().size());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Parser.reloadTaskList();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (this.content instanceof Task) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return Statement.TASKADDED.toString()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + content"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + FormatString.NEXT_LINE.toString()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    + String.format(Statement.REPORT.toString(), Parser.getTaskList().getTaskList().size());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return content.toString();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 137
    }
  },
  {
    "path": "src/main/java/duke/tools/FormatString.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.tools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Contains all the format related strings."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public enum FormatString {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    NEXT_LINE {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    TICK {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    CROSS {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    SPACE {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \" \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    },"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    EMPTY {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 42
    }
  },
  {
    "path": "src/main/java/duke/tools/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.tools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.CommandString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.UpdateCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.Exceptions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Directory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.storage.DukeFileReader;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Deals with the strings from the client"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * and enable the string to make sense to Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static TaskList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static String[] extract \u003d new String[3];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static final int command \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static final int taskDetail \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static final int taskTime \u003d 2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs the Parser."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskList \u003d new TaskList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns the static attribute of taskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return the static attribute of taskList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static TaskList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Refreshes the taskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static void reloadTaskList() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskList \u003d new TaskList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        taskList \u003d new DukeFileReader(Directory.FILEDIRECTORY).loadFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns true if the input from the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * user is \"bye\"."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param inputFromClient input from the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *                        user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return true if input is \"bye\"."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public boolean isEnd(String inputFromClient) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return inputFromClient.equals(CommandString.BYE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Runs the Parser."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param order the order is the string after"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *              being shortened by Format.shorten()."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static Command run(String order) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        extract \u003d new String[3];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        extract \u003d extract(order);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assert extract[command] !\u003d null : \"Shorten() not working\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        reloadTaskList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (order.equals(CommandString.BYE)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } else if (order.equals(CommandString.LIST)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (order.length() \u003e 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                switch (extract[command]) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                case CommandString.BYE:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return new ByeCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                case CommandString.LIST:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                case CommandString.HELP:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return new HelpCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                case CommandString.DONE:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return done();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                case CommandString.DELETE:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return delete();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                case CommandString.FIND:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return find(extract[taskDetail]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                case CommandString.CLEAR:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return clear();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                case CommandString.UPDATE:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return update();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return identifier();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                //May cause error."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Sets done the corresponding"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * task on both the taskList and Duke.txt."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static Command done() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int num \u003d Integer.parseInt(extract[taskDetail]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (num \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return new DukeException(Exceptions.NUMBEREXCESSEXCEPTION);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return new DoneCommand(num);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new DukeException(Exceptions.NUMBERFORMATEXCEPTION);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Deletes the corresponding"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * task on both the taskList and Duke.txt."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static Command delete() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int num \u003d Integer.parseInt(extract[taskDetail]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (num \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return new DukeException(Exceptions.NUMBEREXCESSEXCEPTION);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return new DeleteCommand(num);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new DukeException(Exceptions.NUMBERFORMATEXCEPTION);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Finds the related content from the task details"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * of the tasks in the taskList."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param content the user input content."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static Command find(String content) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            String[] contentArray \u003d content.split(\" \");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new FindCommand(contentArray);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new DukeException(Exceptions.FINDDETAILMISSINGEXCEPTION);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Clears all records in the file from the"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * directory in Directory class."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static Command clear() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new ClearCommand();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Updates the selected number of task"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * with the new input."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is done by first deleting the required task"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * and then add in a new task."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return string that contains all tasks after update."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static Command update() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //The number of the task to update is in taskDetail."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String[] indexAndTypeOfUpdate \u003d extract[taskDetail].split(\" \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //The detail of the task to update is in taskTime."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String taskToUpdate \u003d extract[taskTime];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //Checks if there are more things other than"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //one index and one partToUpdate."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (indexAndTypeOfUpdate.length \u003e 2) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new DukeException(Exceptions.UPDATEFORMATEXCEPTION);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //Extract the index."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String indexInString \u003d Format.shorten(indexAndTypeOfUpdate[0]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //Extract the command."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String command \u003d Format.shorten(indexAndTypeOfUpdate[1]);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            int index \u003d Integer.parseInt(indexInString);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (index \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return new DukeException(Exceptions.NUMBEREXCESSEXCEPTION);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (!command.equals(CommandString.UPDATE_DETAIL) \u0026\u0026 !command.equals(CommandString.UPDATE_TIME)) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return new DukeException(Exceptions.UPDATEFORMATEXCEPTION);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new UpdateCommand(index, command, taskToUpdate);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new DukeException(Exceptions.NUMBERFORMATEXCEPTION);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Extracts out the type of command,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * and possibly the task detail and"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * task time if the command is to"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * add a new task."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param description the user input."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a string array whose"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         length is 3 and first element"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         is the command string, second"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         element is the task detail,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         and the third element is the"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *         task time."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private static String[] extract(String description) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int len \u003d description.length();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int pointer \u003d 0;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (pointer \u003c len \u0026\u0026 description.charAt(pointer) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            pointer++;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //the command of the description has been found."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        extract[command] \u003d description.substring(0, pointer);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int separator \u003d pointer;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (separator \u003c len \u0026\u0026 description.charAt(separator) !\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            separator++;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //situation that there is no detail of the task, return"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (pointer \u003d\u003d separator) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return extract;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //details of the description is found"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        extract[taskDetail] \u003d Format.shorten(description.substring(pointer + 1, separator));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        while (separator \u003c len \u0026\u0026 description.charAt(separator) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            separator++;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //time of the description is found"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (separator \u003c len - 1) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            extract[taskTime] \u003d Format.shorten(description.substring(separator));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assert (separator \u003c len - 1 \u0026\u0026 extract[taskTime] !\u003d null)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                || (separator \u003e\u003d len - 1 \u0026\u0026 extract[taskTime] \u003d\u003d null)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                : \"correspondence of separator and time allocation mismatches\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return extract;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Identifies the type of Tasks"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * from the description passed down from the upper"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * level, which is essentially the input from the"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * user."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static Command identifier() throws DukeException {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String identity \u003d extract[command];"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String detail \u003d extract[taskDetail];"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String time \u003d extract[taskTime];"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //to check if the input is not a todo or event or deadline"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (!identity.equals(CommandString.TODO)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u0026 !identity.equals(CommandString.EVENT)"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u0026 !identity.equals(CommandString.DEADLINE)) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new DukeException(Exceptions.INPUTFORMATEXCEPTION);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //situation that there is no detail of the task, throw error"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (detail \u003d\u003d null) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new DukeException(Exceptions.EMPTYTASKEXCEPTION);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (identity.equals(CommandString.TODO)) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            return new TodoCommand(detail);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Time date \u003d new Time(time);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                if (identity.equals(CommandString.DEADLINE)) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return new DeadlineCommand(detail, date);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    return new EventCommand(detail, date);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return new DukeException(Exceptions.TIMEFORMATEXCEPTION);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 318
    }
  },
  {
    "path": "src/main/java/duke/tools/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.tools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.Exceptions;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Converts the time string to \u003ccode\u003eLocalDateTime\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final String[] timeFormatString \u003d new String[]{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"yyyy-M-d[_HHmm]\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"yyyy/M/d[_HHmm]\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"M-d[_HHmm]\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"M/d[_HHmm]\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"d[_HHmm]\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \"HHmm\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private final List\u003cDateTimeFormatter\u003e dateTimeFormatterList \u003d createTimeFormat();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a Time."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param time a string of format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *             of \"yyyy-mm-dd\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Time(String time) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        localDateTime \u003d timeParser(time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    //Solution below adapted from"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    //https://www.codota.com/code/java/methods/java.time.format.DateTimeFormatterBuilder/appendPattern"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private List\u003cDateTimeFormatter\u003e createTimeFormat() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        List\u003cDateTimeFormatter\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (String s : timeFormatString) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            result.add("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .appendPattern(s)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .parseDefaulting(ChronoField.YEAR, LocalDateTime.now().getYear())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .parseDefaulting(ChronoField.MONTH_OF_YEAR, LocalDateTime.now().getMonthValue())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .parseDefaulting(ChronoField.DAY_OF_MONTH, LocalDateTime.now().getDayOfMonth())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                            .toFormatter()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private LocalDateTime timeParser(String time) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (DateTimeFormatter dateTimeFormatter : dateTimeFormatterList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                return LocalDateTime.parse(time, dateTimeFormatter);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                //The loop needs to continue until find the correct time format."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        // Need to change to command"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        throw new DukeException(Exceptions.TIMEFORMATEXCEPTION);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return localDateTime.format(DateTimeFormatter.ofPattern(\"EEEE_MMM_d_yyyy_HH:mm\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 76
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Statement;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Interacts with the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Initializes a Ui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Returns the Parser object in this Ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return parse object in this Ui."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Parser getParser() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return this.parser;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Responds after the user keyed in the input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return string of the response from Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public Command getCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String extract \u003d conciseInput(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return Parser.run(extract);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Eliminates the spaces"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * around the user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a string with spaces around it."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String conciseInput(String input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return Format.shorten(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Prints the beginning greeting that"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * a user will receive at the start of Duke operation."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new Response(Statement.GREET.toString()).toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 59
    }
  },
  {
    "path": "src/main/java/duke/ui/controller/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private VBox chatBox;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private HBox chatRow;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Constructs a \u003ccode\u003eDialogBox\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param text a string of input places in the box."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param img an image representing the speaking person."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        chatBox.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        setAlignment(Pos.CENTER_LEFT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Generates the user dialog."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param text the input from the user."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param img the image of the user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a \u003ccode\u003eDialogBox\u003c/code\u003e of the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Generates the Duke dialog."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param text the input from Duke."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param img the image of Duke."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @return a \u003ccode\u003eDialogBox\u003c/code\u003e of Duke."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        var dialogBox \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        dialogBox.chatBox.setStyle(\"-fx-background-color: lightblue; -fx-background-radius: 13\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        HBox.setMargin(dialogBox.chatBox, new Insets(0, 15, 0, 5));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 88
    }
  },
  {
    "path": "src/main/java/duke/ui/controller/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "package duke.ui.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    //Image is taken from https://wiki.openjdk.java.net/display/duke/Gallery."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    //Image is taken from https://wiki.openjdk.java.net/display/duke/Gallery."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeMask.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Sets the Duke object to the given duke."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * @param duke input Duke object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getUi().greet(), dukeImage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Format\u003cString\u003e format \u003d new Format\u003c\u003e(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String response \u003d duke.getResponse(input).toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                DialogBox.getUserDialog(format.toString(), userImage),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        if (duke.getUi().getParser().isEnd(input)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            closeWindow();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Closes the interaction window for"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * when the user types in \"bye\" command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    private void closeWindow() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //Disable the functions of the user input and send button."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        userInput.setOnAction(null);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        sendButton.setOnAction(null);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        //Pause for a second before exit."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        delay.setOnFinished(event -\u003e System.exit(0));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        delay.play();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 88
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003cfx:root fx:id\u003d\"chatRow\" alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" spacing\u003d\"5.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \u003cVBox fx:id\u003d\"chatBox\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" spacing\u003d\"5.0\" style\u003d\"-fx-background-color: white; -fx-background-radius: 13;\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u003cInsets left\u003d\"13.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u003cInsets bottom\u003d\"13.0\" left\u003d\"13.0\" right\u003d\"13.0\" top\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003ceffect\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u003cDropShadow blurType\u003d\"GAUSSIAN\" color\u003d\"#070707\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003c/effect\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"5.0\" text\u003d\"Label\" textFill\u003d\"black\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                        \u003cFont name\u003d\"Book Antiqua\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \u003ceffect\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \u003cDropShadow color\u003d\"#ebdbdb\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                    \u003c/effect\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003ceffect\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                \u003cDropShadow color\u003d\"#797676\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003c/effect\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 40
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.ui.controller.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"350.0\" promptText\u003d\"Enter your command here\" style\u003d\"-fx-background-radius: 20; -fx-border-radius: 17; -fx-border-color: lightblue;\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"76.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "      \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "         \u003cFont name\u003d\"Consolas Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "      \u003c/font\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "      \u003ceffect\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "         \u003cDropShadow color\u003d\"#c6c1c1\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "      \u003c/effect\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"72.0\" style\u003d\"-fx-border-width: 5;\" text\u003d\"Send\" textFill\u003d\"#333336\" AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.rightAnchor\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "      \u003ceffect\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "         \u003cDropShadow color\u003d\"#919599\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "      \u003c/effect\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"44\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"388.0\" spacing\u003d\"5.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "         \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 30
    }
  },
  {
    "path": "src/test/java/FormatTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Format;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Tests the Format class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Mainly 2 methods are tested: shorten() and stringToTask()."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class FormatTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    //Warning: clear the strings in data/Duke.txt before testing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the shorten() method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input string has"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * unnecessary spaces at forth and in behind."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatShortenTest1() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String test \u003d Format.shorten(\"   hahaha  \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String expected \u003d \"hahaha\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertEquals(test, expected);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the shorten() method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input string has"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * an string with only spaces."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatShortenTest2() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String test \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                Format.shorten(\"       \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String expected \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertEquals(test, expected);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the stringToTask() method."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input is of a task of Todo."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatStringToTaskTest1() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String string \u003d \"[T][✘] reading\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Todo(\"reading\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task todo \u003d Format.decodeTask(string);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertEquals(todo.toString(), expected.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the stringToTask() method."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input is of a task of Deadline."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatStringToTaskTest2() throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String string \u003d \"[D][✘] eating (by: Sunday_Aug_30_2020_00:00)\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Deadline(\"eating\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task deadline \u003d Format.decodeTask(string);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertEquals(deadline.toString(), expected.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the stringToTask() method."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * This is when the input is of a task of Event."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void formatStringToTaskTest3() throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        String string \u003d \"[E][✘] eating (at: Sunday_Aug_30_2020_00:00)\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Event(\"eating\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task event \u003d Format.decodeTask(string);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertEquals(event.toString(), expected.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 82
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.command.CommandString;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.tools.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Tests the Parser class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * Mainly the commands of the Parser and"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " * other related methods are tested."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the \"todo\" command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runTodoTest() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(CommandString.CLEAR).process();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"todo reading\").process();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.reloadTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Todo(\"reading\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.getTaskList().getTaskList().size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task currentTask \u003d Parser.getTaskList().getTaskList().get(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (currentTask.toString().equals(expected.toString())) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isExist \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(CommandString.CLEAR).process();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isExist);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the \"deadline\" command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runDeadlineTest() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"deadline eating /by 2020-08-30\").process();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Deadline(\"eating\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.getTaskList().getTaskList().size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task currentTask \u003d Parser.getTaskList().getTaskList().get(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (currentTask.toString().equals(expected.toString())) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isExist \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(CommandString.CLEAR).process();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isExist);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the \"event\" command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runEventTest() throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"event working /by 2020-08-30\").process();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task expected \u003d new Event(\"working\", new Time(\"2020-08-30\").toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.getTaskList().getTaskList().size();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            Task currentTask \u003d Parser.getTaskList().getTaskList().get(i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            if (currentTask.toString().equals(expected.toString())) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "                isExist \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(CommandString.CLEAR).process();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isExist);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the \"delete\" command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runDeleteTest() throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(CommandString.CLEAR).process();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"event working /by 2020-08-30\").process();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"delete 1\").process();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isDeleted \u003d false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.reloadTaskList();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        int size \u003d Parser.getTaskList().getTaskList().size();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        isDeleted \u003d size \u003d\u003d 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isDeleted);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     * Tests the \"done\" command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    public void runDoneTest() throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(CommandString.CLEAR).process();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"event working /on 2020-08-30\").process();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(\"done 1\").process();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.reloadTaskList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Task task \u003d Parser.getTaskList().getTaskList().get(0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        isDone \u003d task.isDone();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        Parser.run(CommandString.CLEAR).process();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "        assertTrue(isDone);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 120
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "deadline oiewhfnadl"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "event ahudlnsad"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "done 1 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "done 12"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "dir /s /B ..\\src\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\Duke.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 6,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.Duke.main.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "java -classpath ../bin Duke.Duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 2,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Duke.task.Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.exception.DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Echo.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.task.Event.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.exception.Exceptions.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Exit.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Format.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Greet.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.task.TaskList.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Parser.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Response.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.main.Statement.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.task.Task.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangWanlin98"
        },
        "content": "C:\\Users\\zhang\\OneDrive\\�ĵ�\\ip\\src\\Duke.Duke.task.Todo.java"
      }
    ],
    "authorContributionMap": {
      "ZhangWanlin98": 15
    }
  }
]
