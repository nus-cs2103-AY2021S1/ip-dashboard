{
  "authorDailyContributionsMap": {
    "chuyouchia": [
      {
        "date": "2020-08-16",
        "commitResults": [
          {
            "hash": "304eebdb9799ff520384a92795c045258612f8ed",
            "messageTitle": "Duke Level 1: Greet, Echo \u0026 Exit",
            "messageBody": "",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 14,
                "deletions": 1
              }
            }
          },
          {
            "hash": "848a80efdee68a6555f5ee4dcf0eb354ff91f836",
            "messageTitle": "Add the ability to store whatever text entered by the user and display them back to the user when requested.",
            "messageBody": "",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 13,
                "deletions": 1
              }
            }
          },
          {
            "hash": "4ddade47b95c92326e7fa116f62da32ed76db0d1",
            "messageTitle": "Add the ability to mark tasks as done.",
            "messageBody": "",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 38,
                "deletions": 6
              }
            }
          },
          {
            "hash": "e515693039bcf76925cd6d3755365678181f3cd7",
            "messageTitle": "Add support for tracking three types of tasks: Todos, Deadlines and Events",
            "messageBody": "",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 47,
                "deletions": 4
              }
            }
          },
          {
            "hash": "1f898b12c8b39affa0a51eab458708270f034787",
            "messageTitle": "Use the input/output redirection technique to semi-automate the testing of Duke.",
            "messageBody": "",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 0
              },
              "bat": {
                "insertions": 5,
                "deletions": 3
              }
            }
          },
          {
            "hash": "8054ef935e1569f8dd2bccf7d54e6f6671562b1f",
            "messageTitle": "Teach Duke to deal with errors such as incorrect inputs entered by the user.",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 90,
                "deletions": 25
              }
            }
          },
          {
            "hash": "1f1646af3618c1570669ce15cb9dbeec1c8aa56a",
            "messageTitle": "Fixed bug in list command for level 5. Level 5 - Teach Duke to deal with errors such as incorrect inputs entered by the user.",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 21,
                "deletions": 11
              }
            }
          },
          {
            "hash": "cf85ea8b96ba3d3ff0f47a2b3b0efc1944116c73",
            "messageTitle": "Fixed Minor bug in level 5 due to missing white space in Task\u0027s getCurrentStatus method call. Level-5: Teach Duke to deal with errors such as incorrect inputs entered by the user.",
            "messageBody": "",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 7,
                "deletions": 12
              }
            }
          },
          {
            "hash": "13fba26b1dab41b0d1d00f6f28d9c1d437b58e4e",
            "messageTitle": "Level-6: Add support for deleting tasks from the list.",
            "messageBody": "",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 2,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-22",
        "commitResults": [
          {
            "hash": "efaf22767924d7d85a44899653289d842d403204",
            "messageTitle": "Refactor Duke.java to improve readability and extensibility:",
            "messageBody": "Original code contained UI and logic in the main method.\n\nAs a result, if there are any changes to be made to a specific scenario, problems are not isolated into individual methods or cases.\n\nSimplified the driver method to be solely responsible for console input and dependent on other static methods.\n\nBy separating the responsibility into smaller chunks, it will improve debugging process if necessary.\n\nJava Doc comments have been added to describe individual methods as well.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 240,
                "deletions": 149
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "36d83d78f1cfafb42f89ebbaa4908a81411d2a67",
            "messageTitle": "Add ability to parse date time format in command:",
            "messageBody": "Original code was treating all date time formats simply as strings.\n\nAdd the function for the tasks to have stored date time. Command \"list-due\" added for filtering options on deadline and commitments.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 61,
                "deletions": 8
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-23",
        "commitResults": [
          {
            "hash": "e99e4ddc1cb5d3ea1f7109b186964ada64283102",
            "messageTitle": "Add ability to access file system \u0026 refactor commands into Command Handler.",
            "messageBody": "Save the task list to hard disk so that past tasks recorded would not be lost when the program terminates.\n",
            "tags": [
              "Level-7"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 408,
                "deletions": 166
              }
            }
          },
          {
            "hash": "aa1f1cfc0dd0986f53208c04bd32281d27d5f365",
            "messageTitle": "Refactor the code to extract out closely related code as classes \u0026 Place into Packages",
            "messageBody": "Original code had repeated UI elements and combined Commands with Parser, which resulted in unnecessary repeated code between commands.\n\nExtracted the following classes:\n- Ui: deals with interactions with the user\n- Renamed FileEditor to Storage: deals with loading tasks from the file and saving tasks in the file\n- Parser: deals with making sense of the user command\n- TaskList: contains the task list e.g., it has operations to add/delete tasks in the list\n- Command: that implements a Command Interface with Execute and isBye methods.\n\nExtracting the class allows for method reusing and modularity as codebase grows.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 2
              },
              "java": {
                "insertions": 617,
                "deletions": 342
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "e26f800fe472a19631b3047b6dd10dd5cd987157",
            "messageTitle": "Add JUnit Testing and Fix UI bug for doneCommand.",
            "messageBody": "JUnit enables automated testing for Test Driven Development.\n\nNote:\n-     implementation \u0027org.junit.jupiter:junit-jupiter-api:5.5.1\u0027  is required to make sure that the import for @Test annotation does not fail\n-     Set the System.out to a byteArrayOutput Stream so that it is possible to capture console output for testing purposes.\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 41,
                "deletions": 0
              },
              "java": {
                "insertions": 185,
                "deletions": 132
              },
              "bat": {
                "insertions": 104,
                "deletions": 0
              }
            }
          },
          {
            "hash": "751a0f712d043dbdaae2eb99ae6456bc01089179",
            "messageTitle": "Fix file creation bug discovered during JAR file level",
            "messageBody": "",
            "tags": [
              "A-Packages",
              "A-MoreOOP",
              "A-Jar",
              "A-JUnit"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 2,
                "deletions": 2
              },
              "txt": {
                "insertions": 0,
                "deletions": 0
              },
              "java": {
                "insertions": 4,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-25",
        "commitResults": [
          {
            "hash": "7b295118f77b45873743a21abcdf561b258e1c34",
            "messageTitle": "Add JavaDoc comments for all public methods in production code",
            "messageBody": "",
            "tags": [
              "A-JavaDoc"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 299,
                "deletions": 102
              }
            }
          },
          {
            "hash": "21e221ce4cbe78cacc32315806aa1e531d85ee27",
            "messageTitle": "Tweak all code to comply with given coding standard",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 94,
                "deletions": 66
              }
            }
          },
          {
            "hash": "82b934af80839c33fdafe55f665049387f8c9b06",
            "messageTitle": "Fix bug resulting in unhandled exception due to non-existent breakpoint",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 4,
                "deletions": 4
              }
            }
          },
          {
            "hash": "0e3ea6fc1ad3fa3e87545e1e2723c268fa215984",
            "messageTitle": "Add a find command to search tasks for specified string",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 63,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-01",
        "commitResults": [
          {
            "hash": "91bd7422419e71344085082287e7600c6e4acc30",
            "messageTitle": "Add GUI using Java Fx Technology",
            "messageBody": "Refactor UI and UI testing to support string validation\n",
            "tags": [
              "Level-10"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 14,
                "deletions": 0
              },
              "txt": {
                "insertions": 4,
                "deletions": 0
              },
              "fxml": {
                "insertions": 35,
                "deletions": 0
              },
              "java": {
                "insertions": 448,
                "deletions": 121
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-03",
        "commitResults": [
          {
            "hash": "0a64db6757b8de93d1547c3510132cc628f4f3ac",
            "messageTitle": "Add welcome message for duke",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 1
              },
              "fxml": {
                "insertions": 9,
                "deletions": 4
              },
              "java": {
                "insertions": 40,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-04",
        "commitResults": [
          {
            "hash": "c6171904089f1c0f31cd1bac0f2f3e8f0b4b047d",
            "messageTitle": "Add assertions to source code to document assumptions",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              },
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 17,
                "deletions": 80
              }
            }
          },
          {
            "hash": "d016f616f2d30ee7670619d688e5b7d5025b6ff0",
            "messageTitle": "Improve Code Quality by extracting and naming variables.",
            "messageBody": "Add changes to adhere to JavaDocs Coding standards\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 180,
                "deletions": 166
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-06",
        "commitResults": [
          {
            "hash": "863e4662eb40e9d4f04cd5cb79b9015ab43b7d6b",
            "messageTitle": "Update image file path",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 5,
                "deletions": 7
              }
            }
          },
          {
            "hash": "d632ebafdee22406545d2f2ae0bd2fd04453cd04",
            "messageTitle": "Add CI via workflows/gradle.yml",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 5,
                "deletions": 5
              }
            }
          },
          {
            "hash": "b5f230e4f9dbf03072054c0fe4f03df631bd91b7",
            "messageTitle": "Update README.md",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 0,
                "deletions": 9
              }
            }
          },
          {
            "hash": "281e389fbb8823845c888f7ca93ac1e16a6af70c",
            "messageTitle": "Update to remove checkstyle errors detected by CI",
            "messageBody": "",
            "tags": [
              "A-CI"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 14,
                "deletions": 13
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-08",
        "commitResults": [
          {
            "hash": "f4d0f42b3d5623cea6d09df94bedd365f9f569b9",
            "messageTitle": "Add D-Notes as extension",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 8,
                "deletions": 0
              }
            }
          },
          {
            "hash": "63ce67747c1546c8963f14de68c978fd7ba534af",
            "messageTitle": "Add D-Notes as extension",
            "messageBody": "",
            "tags": [
              "BCD-Extension",
              "A-Lambdas"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 11,
                "deletions": 8
              },
              "java": {
                "insertions": 363,
                "deletions": 109
              }
            }
          },
          {
            "hash": "8151d3aa0e99eaba69eb91bea62b9bc71a8e6ec5",
            "messageTitle": "Update checkstyle imports errors",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 2
              }
            }
          },
          {
            "hash": "461ee88e0aedab2016d438dd0e709e8d7b98d0bd",
            "messageTitle": "Refactor parser to deal with obvious incomplete commands",
            "messageBody": "Place parser and storage into io package for better readability and\ncategorization\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 68,
                "deletions": 57
              }
            }
          },
          {
            "hash": "5d6330420885975e22edd9023383df061048c1ea",
            "messageTitle": "Update imports",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 15,
                "deletions": 23
              }
            }
          },
          {
            "hash": "d74a60597aa71ad13ffdb6ca62fc19c17323ddac",
            "messageTitle": "Fix import statements",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-12",
        "commitResults": [
          {
            "hash": "7f4f47f527606d6dd47d471a58f3f444faf64117",
            "messageTitle": "Add unit tests and exception handling for invalid commands.",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 41,
                "deletions": 0
              },
              "java": {
                "insertions": 171,
                "deletions": 45
              }
            }
          },
          {
            "hash": "15fd1886276e1b2b2a4512369ed513932b846062",
            "messageTitle": "Fix checkstyle errors",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 45
              }
            }
          },
          {
            "hash": "f904221090f0db75be75811901605ae609b227fc",
            "messageTitle": "Move JavaFx related code into javafx package",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 1,
                "deletions": 1
              },
              "java": {
                "insertions": 6,
                "deletions": 4
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "chuyouchia": {
      "java": 1819,
      "md": 1,
      "fxml": 40,
      "sh": 0,
      "bat": 109,
      "gradle": 55,
      "txt": 57
    }
  },
  "authorContributionVariance": {
    "chuyouchia": 162170.05
  },
  "authorDisplayNameMap": {
    "chuyouchia": "CS2103T-T15-2 CHIA.. YOU"
  }
}
